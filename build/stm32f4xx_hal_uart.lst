ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"stm32f4xx_hal_uart.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	UART_EndTxTransfer:
  27              	.LFB285:
  28              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @file    stm32f4xx_hal_uart.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @attention
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * Copyright (c) 2016 STMicroelectronics.
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * All rights reserved.
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * This software is licensed under terms that can be found in the LICENSE file
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * in the root directory of this software component.
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @verbatim
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                         ##### How to use this driver #####
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 2


  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) UART pins configuration:
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the UART TX/RX pins as alternate function pull-up.
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx stream.
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   Tx/Rx parameters.
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx stream.
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx stream.
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority and enable the NVIC USART IRQ handle
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   (used for last byte sending completion detection in DMA non circular mode)
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the huart Init structure.
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_UART_Init() API.
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt,
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             and receive process.
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_MspInit() API.
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ##### Callback registration #####
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ==================================
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Use Function HAL_UART_RegisterCallback() to register a user callback.
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 3


  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Function HAL_UART_RegisterCallback() allows to register following callbacks:
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and a pointer to the user callback function.
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Use function HAL_UART_UnRegisterCallback() to reset a callback to the default
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     weak (surcharged) function.
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and the Callback ID.
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This function allows to reset following callbacks:
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     For specific callback RxEventCallback, use dedicated registration/reset functions:
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     respectively HAL_UART_RegisterRxEventCallback() , HAL_UART_UnRegisterRxEventCallback().
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     By default, after the HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     examples HAL_UART_TxCpltCallback(), HAL_UART_RxHalfCpltCallback().
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the HAL_UART_Init()
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the HAL_UART_Init() and HAL_UART_DeInit()
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     using HAL_UART_RegisterCallback() before calling HAL_UART_DeInit()
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     or HAL_UART_Init() function.
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     not defined, the callback registration feature is not available
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 4


 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         Three operation modes are available within this driver :
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Polling mode IO operation ***
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      =================================
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Interrupt mode IO operation ***
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ===================================
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT()
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT()
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** DMA mode IO operation ***
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ==============================
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA()
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA()
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..] This subsection also provides a set of additional functions providing enhanced reception
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     services to user. (For example, these functions allow application to handle use cases
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     where number of data to be received is unknown).
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Compared to standard reception services which only consider number of received
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         data elements as reception completion criteria, these functions also consider additional ev
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         as triggers for updating reception status to caller :
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Detection of inactivity period (RX line has not been active for a given period).
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           (++) RX inactivity detected by IDLE event, i.e. RX line has been in idle state (normally 
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                for 1 frame time, after last received byte.
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) There are two mode of transfer:
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Blocking mode: The reception is performed in polling mode, until either expected number 
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            or till IDLE event occurs. Reception is handled only during function execution.
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 5


 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            When function exits, no data reception could occur. HAL status and number of actually re
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            are returned by function after finishing transfer.
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Non-Blocking mode: The reception is performed using Interrupts or DMA.
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            These API's return the HAL status.
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The end of the data processing will be indicated through the
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when using DMA mode.
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UARTEx_RxEventCallback() user callback will be executed during Receive process
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a reception error is det
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Blocking mode API:
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UARTEx_ReceiveToIdle()
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API with Interrupt:
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UARTEx_ReceiveToIdle_IT()
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API with DMA:
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UARTEx_ReceiveToIdle_DMA()
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** UART HAL driver macros list ***
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      =============================================
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @endverbatim
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) Additional remark: If the parity is enabled, then the MSB bit of the data written
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            in the data register is transmitted but is changed by the parity bit.
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Depending on the frame length defined by the M bit (8-bits or 9-bits),
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the possible UART frame formats are as listed in the following table:
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     +-------------------------------------------------------------+
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |   M bit |  PCE bit  |            UART frame                 |
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------------------|---------------------------------------|
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    0    |    0      |    | SB | 8 bit data | STB |          |
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    1    |    0      |    | SB | 9 bit data | STB |          |
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     +-------------------------------------------------------------+
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #include "stm32f4xx_hal.h"
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 6


 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup STM32F4xx_HAL_Driver
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART UART
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief HAL UART module driver
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Constants
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions  UART Private Functions
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart);
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                                      uint32_t Tickstart, uint32_t Timeout);
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart);
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 7


 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in asynchronous mode.
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured:
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Baud Rate
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Word Length
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Stop Bit
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Hardware flow control
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Over Sampling Method
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor configurat
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     procedures (details for the procedures are available in reference manual
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (RM0430 for STM32F4X3xx MCUs and RM0402 for STM32F412xx MCUs
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0383 for STM32F411xC/E MCUs and RM0401 for STM32F410xx MCUs
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0090 for STM32F4X5xx/STM32F4X7xx/STM32F429xx/STM32F439xx MCUs
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0390 for STM32F446xx MCUs and RM0386 for STM32F469xx/STM32F479xx MCUs)).
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the UART_InitTypeDef and create the associated handle.
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* The hardware flow control is available only for USART1, USART2, USART3 and USART6.
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Except for STM32F446xx devices, that is available for USART1, USART2, USART3, USART6, UART4 
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     */
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 8


 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the half-duplex mode according to the specified
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 9


 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 10


 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the LIN mode according to the specified
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  BreakDetectLength Specifies the LIN break detection length.
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the LIN UART instance */
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 11


 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - CLKEN bits in the USART_CR2 register,
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN bits in the USART_CR3 register.*/
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_CLKEN));
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_LBDL);
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the Multi-Processor mode according to the specified
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Address USART address
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  WakeUpMethod specifies the USART wake-up method.
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_IDLELINE: Wake-up by an idle line detection
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_ADDRESSMARK: Wake-up by an address mark
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Address & wake up method parameters */
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 12


 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In Multi-Processor mode, the following bits must be kept cleared:
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register */
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART address node */
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_ADD);
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, Address);
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_WAKE);
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 13


 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DeInitializes the UART peripheral.
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the Peripheral */
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DeInit the low level hardware */
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DeInit the low level hardware */
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlock */
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP Init.
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 14


 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspInit could be implemented in the user file
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP DeInit.
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspDeInit could be implemented in the user file
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Register a User UART Callback
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart uart handle
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (pCallback == NULL)
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process locked */
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 15


 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 16


 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Return error status */
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Release Lock */
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart uart handle
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process locked */
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 17


 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 18


 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Return error status */
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Release Lock */
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Register a User UART Rx Event Callback
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart     Uart handle
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pCallback Pointer to the Rx Event Callback function
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterRxEventCallback(UART_HandleTypeDef *huart, pUART_RxEventCallback
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (pCallback == NULL)
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process locked */
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxEventCallback = pCallback;
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 19


1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Release Lock */
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UnRegister the UART Rx Event Callback
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         UART Rx Event Callback is redirected to the weak HAL_UARTEx_RxEventCallback() predefine
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart     Uart handle
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterRxEventCallback(UART_HandleTypeDef *huart)
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process locked */
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxEventCallback = HAL_UARTEx_RxEventCallback; /* Legacy weak UART Rx Event Callback  */
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Release Lock */
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief UART Transmit and Receive functions
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### IO operation functions #####
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and Half duplex data transfers.
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) There are two modes of transfer:
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 20


1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            after finishing transfer.
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            or DMA, these API's return the HAL status.
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The end of the data processing will be indicated through the
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            using DMA mode.
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            will be executed respectively at the end of the transmit or receive process
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Blocking mode API's are :
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit()
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive()
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Abort()
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) A Rx Event Reception Callback (Rx event notification) is available for Non_Blocking modes o
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UARTEx_RxEventCallback()
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         Errors are handled as follows :
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 21


1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in blocking mode.
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size,
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   const uint8_t  *pdata8bits;
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   const uint16_t *pdata16bits;
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout management */
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = NULL;
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = (const uint16_t *) pData;
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = pData;
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 22


1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = NULL;
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         return HAL_TIMEOUT;
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (pdata8bits == NULL)
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         pdata16bits++;
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         pdata8bits++;
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount--;
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_TIMEOUT;
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in blocking mode.
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint8_t  *pdata8bits;
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *pdata16bits;
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 23


1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout management */
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = NULL;
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = pData;
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = NULL;
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check the remain data to be received */
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         return HAL_TIMEOUT;
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (pdata8bits == NULL)
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->DR & 0x01FF);
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         pdata16bits++;
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORD
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 24


1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         pdata8bits++;
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount--;
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Si
1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
1327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit data register empty Interrupt */
1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
1340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 25


1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode.
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
1354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return (UART_Start_Receive_IT(huart, pData, Size));
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
1381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in DMA mode.
1386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t S
1396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   const uint32_t *tmp;
1398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 26


1399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
1411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
1413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
1425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA abort callback */
1427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
1428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART transmit DMA stream */
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (const uint32_t *)&pData;
1431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(const uint32_t *)tmp, (uint32_t)&huart->Instance->DR, Size);
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
1434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
1435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
1444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in DMA mode.
1453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 27


1456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1) the received data contains the parity bit.
1461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
1475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return (UART_Start_Receive_DMA(huart, pData, Size));
1480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
1484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
1489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
1502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
1509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 28


1513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
1542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
1545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Re-enable PE and ERR (Frame error, noise error, overrun error) interrupts */
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Init.Parity != UART_PARITY_NONE)
1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 29


1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
1572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      and the correspond call back is executed HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      */
1577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream */
1585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
1595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream */
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode till either the expected number of data is re
1611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   HAL_OK is returned if reception is completed (expected number of data has been received
1612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         or if reception is stopped after IDLE event (less than the expected number of data has 
1613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         In this case, RxLen output parameter indicates number of data available in reception bu
1614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M =
1615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of uint16_t. In this case, Size must indicate the
1616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of uint16_t available through pData.
1617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param huart   UART handle.
1618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param pData   Pointer to data buffer (uint8_t or uint16_t data elements).
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param Size    Amount of data elements (uint8_t or uint16_t) to be received.
1620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param RxLen   Number of data elements finally received (could be lower than Size, in case rece
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param Timeout Timeout duration expressed in ms (covers the whole reception sequence).
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size
1625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                            uint32_t Timeout)
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 30


1627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint8_t  *pdata8bits;
1628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *pdata16bits;
1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart;
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
1644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout management */
1646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
1647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize  = Size;
1649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
1650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = NULL;
1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = pData;
1660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = NULL;
1661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Initialize output number of received elements */
1666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     *RxLen = 0U;
1667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* as long as data have to be received */
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check if IDLE flag is set */
1672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Clear IDLE flag in ISR */
1675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UART_CLEAR_IDLEFLAG(huart);
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* If Set, but no data ever received, clear flag without exiting loop */
1678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* If Set, and data has already been received, this means Idle Event is valid : End recepti
1679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (*RxLen > 0U)
1680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
1682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_OK;
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 31


1684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check if RXNE flag is set */
1688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RXNE))
1689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (pdata8bits == NULL)
1691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
1693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pdata16bits++;
1694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WO
1698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
1699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
1700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
1701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           else
1702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
1704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
1705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pdata8bits++;
1707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Increment number of received elements */
1709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *RxLen += 1U;
1710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxXferCount--;
1711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check for the Timeout */
1714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (Timeout != HAL_MAX_DELAY)
1715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
1717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
1719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
1721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set number of received elements in output parameter : RxLen */
1726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     *RxLen = huart->RxXferSize - huart->RxXferCount;
1727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
1731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
1735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode till either the expected number of data is r
1740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   Reception is initiated by this function call. Further progress of reception is achieved
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 32


1741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         to UART interrupts raised by RXNE and IDLE events. Callback is called at end of recepti
1742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         number of received data elements.
1743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M =
1744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of uint16_t. In this case, Size must indicate the
1745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of uint16_t available through pData.
1746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param huart UART handle.
1747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param pData Pointer to data buffer (uint8_t or uint16_t data elements).
1748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param Size  Amount of data elements (uint8_t or uint16_t) to be received.
1749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t S
1752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status;
1754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
1761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
1764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set Reception type to reception till IDLE Event*/
1766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
1767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  UART_Start_Receive_IT(huart, pData, Size);
1769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check Rx process has been successfully started */
1771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (status == HAL_OK)
1772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
1774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UART_CLEAR_IDLEFLAG(huart);
1776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
1777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* In case of errors already pending when reception is started,
1781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Interrupts may have already been raised and lead to reception abortion.
1782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            (Overrun error for instance).
1783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
1784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status = HAL_ERROR;
1785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return status;
1789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode till either the expected number of data is receive
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 33


1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   Reception is initiated by this function call. Further progress of reception is achieved
1799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         to DMA services, transferring automatically received data elements in user reception bu
1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         calling registered callbacks at half/end of reception. UART IDLE events are also used t
1801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         reception phase as ended. In all cases, callback execution will indicate number of rece
1802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the parity bit (MSB position).
1804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M =
1805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of uint16_t. In this case, Size must indicate the
1806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of uint16_t available through pData.
1807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param huart UART handle.
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param pData Pointer to data buffer (uint8_t or uint16_t data elements).
1809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param Size  Amount of data elements (uint8_t or uint16_t) to be received.
1810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t 
1813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status;
1815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
1825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set Reception type to reception till IDLE Event*/
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
1828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  UART_Start_Receive_DMA(huart, pData, Size);
1830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check Rx process has been successfully started */
1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (status == HAL_OK)
1833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UART_CLEAR_IDLEFLAG(huart);
1837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
1838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* In case of errors already pending when reception is started,
1842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Interrupts may have already been raised and lead to reception abortion.
1843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            (Overrun error for instance).
1844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
1845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status = HAL_ERROR;
1846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return status;
1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 34


1855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USA
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
1879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream: use blocking DMA Abort API (no callback) */
1887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
1901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream: use blocking DMA Abort API (no callback) */
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 35


1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
1926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
1933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
1934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
1936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState and huart->gState to Ready */
1939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use blocking DMA Abort API (no callback) */
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 36


1969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
1983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
1990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
2002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
2005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
2006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
2007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
2010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
2017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
2019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 37


2026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use blocking DMA Abort API (no callback) */
2027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
2028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
2030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
2031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
2032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
2036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
2038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
2039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
2041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Rx transfer counter */
2047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
2058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
2060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
2062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
2065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
2071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
2073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USA
2076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
2080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
2082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 38


2083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
2085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      before any call to DMA Abort functions */
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
2087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
2088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
2090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
2091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
2092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
2094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
2098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
2101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
2102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
2104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
2105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
2108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
2112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
2117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use non blocking DMA Abort API (callback) */
2122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
2123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
2125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
2128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
2129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
2131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
2135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 39


2140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use non blocking DMA Abort API (callback) */
2145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
2146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
2148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
2151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
2154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x01U;
2155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
2159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
2164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (AbortCplt == 0x01U)
2165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
2167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
2168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
2169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset ErrorCode */
2171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
2172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
2174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
2175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort complete callback */
2181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
2182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
2184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
2185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
2193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
2195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
2196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 40


2197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
2200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
2209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
2212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use blocking DMA Abort API (no callback) */
2216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
2217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
2221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
2223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
2224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
2227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Tx transfer counter */
2232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount = 0x00U;
2233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
2244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx transfer counter */
2250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
2251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 41


2254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
2262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
2273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
2277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
2290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
2292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use blocking DMA Abort API (no callback) */
2300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
2301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
2305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
2307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 42


2311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Rx transfer counter */
2316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount = 0x00U;
2317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
2329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Rx transfer counter */
2335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
2336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
2348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART interrupt request.
2356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->SR);
2363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
2364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
2365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t errorflags = 0x00U;
2366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
2367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 43


2368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If no error occurs */
2369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
2370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (errorflags == RESET)
2371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART in mode Receiver -------------------------------------------------*/
2373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
2374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       UART_Receive_IT(huart);
2376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
2377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If some errors occur */
2381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET)
2382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                 || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
2383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART parity error interrupt occurred ----------------------------------*/
2385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
2386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
2388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART noise error interrupt occurred -----------------------------------*/
2391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
2392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
2394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART frame error interrupt occurred -----------------------------------*/
2397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
2398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
2400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred --------------------------------------*/
2403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET)
2404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                                  || ((cr3its & USART_CR3_EIE) != RESET)))
2405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
2407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
2410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
2411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART in mode Receiver -----------------------------------------------*/
2413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
2414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_Receive_IT(huart);
2416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
2419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          consider error as blocking */
2420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
2421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
2422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 44


2425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
2427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Abort the UART DMA Rx stream */
2434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           if (huart->hdmarx != NULL)
2435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
2436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
2439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             {
2441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               /* Call Directly XferAbortCallback function in case of error */
2442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
2443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             }
2444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
2445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           else
2446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
2447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Call user error callback */
2448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /*Call registered error callback*/
2450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->ErrorCallback(huart);
2451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /*Call legacy weak error callback*/
2453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
2454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
2456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
2458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Call user error callback */
2460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /*Call registered error callback*/
2462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCallback(huart);
2463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /*Call legacy weak error callback*/
2465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
2466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Error is notified to user through user error callback */
2473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered error callback*/
2475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback(huart);
2476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak error callback*/
2478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
2479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 45


2482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
2485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   } /* End if some error occurs */
2486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check current reception Mode :
2488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      If Reception till IDLE event has been selected : */
2489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
2490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       && ((isrflags & USART_SR_IDLE) != 0U)
2491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       && ((cr1its & USART_SR_IDLE) != 0U))
2492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_IDLEFLAG(huart);
2494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check if DMA mode is enabled in UART */
2496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* DMA mode enabled */
2499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing,
2500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          (DMA cplt callback will be called).
2501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
2503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if ((nb_remaining_rx_data > 0U)
2504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           && (nb_remaining_rx_data < huart->RxXferSize))
2505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Reception is not complete */
2507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxXferCount = nb_remaining_rx_data;
2508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* In Normal mode, end DMA xfer and HAL UART Rx process*/
2510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
2511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
2514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              in the UART CR3 register */
2518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* At end of Rx process, restore huart->RxState to Ready */
2521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
2522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
2525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Last bytes received, so no need as the abort is immediate */
2527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           (void)HAL_DMA_Abort(huart->hdmarx);
2528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered Rx Event callback*/
2531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
2532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
2535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
2538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 46


2539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* DMA mode not enabled */
2542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing.
2543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
2545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if ((huart->RxXferCount > 0U)
2546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           && (nb_rx_data > 0U))
2547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXNE interrupts */
2549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
2555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
2557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
2559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered Rx complete callback*/
2561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxEventCallback(huart, nb_rx_data);
2562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
2565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
2568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
2573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_Transmit_IT(huart);
2575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
2576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
2579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
2580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
2582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
2583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Transfer completed callbacks.
2588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 47


2596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
2598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
2603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback could be implemented in the user file
2613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Transfer completed callbacks.
2618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_RxCpltCallback could be implemented in the user file
2628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
2633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback could be implemented in the user file
2643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART error callbacks.
2648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 48


2653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_ErrorCallback could be implemented in the user file
2658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Reception Event Callback (Rx event notification called after use of advanced reception 
2708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle
2709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Number of data available in application reception buffer (indicates a position in
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 49


2710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               reception buffer until which, data are available)
2711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
2714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(Size);
2718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UARTEx_RxEventCallback can be implemented in the user file.
2721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART control functions
2730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
2731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
2732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
2736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART:
2737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_LIN_SendBreak() API can be helpful to transmit the break character.
2738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_EnterMuteMode() API can be helpful to enter the UART in mute mode.
2739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_ExitMuteMode() API can be helpful to exit the UART mute mode by software
2740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableTransmitter() API to enable the UART transmitter and disables the UART
2741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableReceiver() API to enable the UART receiver and disables the UART trans
2742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
2744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Transmits break characters.
2749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
2760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Send break characters */
2764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_SBK);
2765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 50


2767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enters the UART in mute mode.
2776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
2787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
2791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RWU);
2792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Exits the UART mute mode: wake up software.
2803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_ExitMuteMode(UART_HandleTypeDef *huart)
2808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
2814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
2818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RWU);
2819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 51


2824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
2830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
2837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
2840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
2845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
2847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
2848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_TE;
2851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
2853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
2854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
2865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
2872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
2875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
2880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 52


2881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
2882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
2883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_RE;
2886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
2888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
2889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Errors functions
2903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART State and Errors functions
2904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
2905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
2906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                  ##### Peripheral State and Errors functions #####
2908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  [..]
2910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    This subsection provides a set of functions allowing to return the State of
2911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    UART communication process, return Peripheral Errors occurred during communication
2912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    process
2913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetState() API can be helpful to check in run-time the state of the UART peripheral
2914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetError() check in run-time errors that could be occurred during communication.
2915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
2917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Returns the UART state.
2922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL state
2925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t temp1 = 0x00U, temp2 = 0x00U;
2929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp1 = huart->gState;
2930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp2 = huart->RxState;
2931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Return the UART error code
2937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 53


2938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART.
2939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval UART Error Code
2940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return huart->ErrorCode;
2944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval none
2962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Init the UART Callback settings */
2967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxEventCallback           = HAL_UARTEx_RxEventCallback;         /* Legacy weak RxEventCall
2976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART transmit process complete callback.
2982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
2990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
2991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
2993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 54


2995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
2996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Circular mode */
3003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
3014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback
3017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
3023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
3031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
3033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART receive process complete callback.
3036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
3042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
3044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
3045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0U;
3047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 55


3052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit
3053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
3054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
3055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
3058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* If Reception till IDLE event has been selected, Disable IDLE Interrupt */
3060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
3061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
3063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check current reception Mode :
3067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
3069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize);
3073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
3076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* In other cases : use Rx Complete callback */
3081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Rx complete callback*/
3083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxCpltCallback(huart);
3084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Rx complete callback*/
3086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_RxCpltCallback(huart);
3087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
3090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback
3093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
3099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check current reception Mode :
3102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
3104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize / 2U);
3108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 56


3109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize / 2U);
3111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* In other cases : use Rx Half Complete callback */
3116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Rx Half complete callback*/
3118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxHalfCpltCallback(huart);
3119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Rx Half complete callback*/
3121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_RxHalfCpltCallback(huart);
3122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
3125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication error callback.
3128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
3134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
3135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
3139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
3140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
3142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
3143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
3147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
3148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
3150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
3151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
3154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered error callback*/
3156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
3162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout. It waits
3165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         until a flag is no longer in the specified status.
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 57


3166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Flag specifies the UART flag to check.
3169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Status The actual Flag status (SET or RESET).
3170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Tickstart Tick start value
3171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
3172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
3175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                                      uint32_t Tickstart, uint32_t Timeout)
3176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
3177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Wait until flag is set */
3178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
3179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check for the Timeout */
3181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
3182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
3184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
3186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE
3187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
3190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
3191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Process Unlocked */
3193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
3194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         return HAL_TIMEOUT;
3196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
3200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
3201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Start Receive operation in interrupt mode.
3204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in Interrupt mode
3205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
3209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
3215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
3216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferSize = Size;
3217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = Size;
3218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
3221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 58


3223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
3224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.Parity != UART_PARITY_NONE)
3226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
3228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
3229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
3233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the UART Data Register not empty Interrupt */
3235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
3236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
3238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
3239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Start Receive operation in DMA mode.
3242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in DMA mode.
3243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
3247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
3253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
3254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
3256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferSize = Size;
3257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
3260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART DMA transfer complete callback */
3262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
3263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART DMA Half transfer complete callback */
3265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
3266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the DMA error callback */
3268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferErrorCallback = UART_DMAError;
3269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the DMA abort callback */
3271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
3272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the DMA stream */
3274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmp = (uint32_t *)&pData;
3275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t *)tmp, Size);
3276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the secon
3278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_CLEAR_OREFLAG(huart);
3279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 59


3280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
3281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
3282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.Parity != UART_PARITY_NONE)
3284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
3286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
3291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the DMA transfer for the receiver request by setting the DMAR bit
3293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   in the UART CR3 register */
3294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
3295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
3297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
3298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
3302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
  29              		.loc 1 3305 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35              	.L2:
  36              	.LBB320:
3306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
3307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  37              		.loc 1 3307 0 discriminator 1
  38 0000 0268     		ldr	r2, [r0]
  39              	.LVL1:
  40              	.LBB321:
  41              	.LBB322:
  42              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 60


  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 61


  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 62


 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 63


 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 64


 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 65


 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 66


 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 67


 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 68


 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 69


 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 70


 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 71


 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 72


 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 73


 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 74


 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 75


 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 883:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 888:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 890:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 899:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 900:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 901:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 902:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 922:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 76


 928:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 939:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 940:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 949:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 950:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 960:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 961:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 963:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 964:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 965:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 967:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 968:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 969:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 971:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 972:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 975:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 976:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 977:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 978:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 979:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 980:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 982:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 984:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 77


 985:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 986:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 987:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 991:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 992:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 993:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 994:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 995:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1000:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1001:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1003:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1004:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1006:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1007:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1008:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1009:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1010:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1011:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CLZ             (uint8_t)__builtin_clz
1012:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1015:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1018:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1019:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
1020:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
1021:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1022:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1024:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
1025:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1027:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1028:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1029:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1031:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1032:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1033:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
1034:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1035:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1036:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1037:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1038:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1039:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1040:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1041:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 78


1042:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1044:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1046:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
1047:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1048:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1051:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
1052:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1055:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
1056:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1057:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1058:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1059:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1060:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1061:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1062:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1063:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
1064:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1067:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1070:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1071:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
  43              		.loc 2 1072 0 discriminator 1
  44 0002 02F10C03 		add	r3, r2, #12
  45              	.LVL2:
  46              		.syntax unified
  47              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  48 0006 53E8003F 		ldrex r3, [r3]
  49              	@ 0 "" 2
  50              	.LVL3:
  51              		.thumb
  52              		.syntax unified
  53              	.LBE322:
  54              	.LBE321:
  55              		.loc 1 3307 0 discriminator 1
  56 000a 23F0C003 		bic	r3, r3, #192
  57              	.LVL4:
  58              	.LBB323:
  59              	.LBB324:
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
1074:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1075:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1076:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1077:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1078:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
1079:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 79


1082:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1084:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1085:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
1086:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1087:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1088:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1090:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
1091:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1092:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1093:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1094:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1095:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
1096:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
1097:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1098:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1099:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1100:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1101:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1102:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
1103:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1104:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1105:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1106:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1107:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
1108:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1109:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1110:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1111:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1112:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
1113:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
1114:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1115:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1118:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1119:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
1120:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1121:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
  60              		.loc 2 1123 0 discriminator 1
  61 000e 0C32     		adds	r2, r2, #12
  62              	.LVL5:
  63              		.syntax unified
  64              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  65 0010 42E80031 		strex r1, r3, [r2]
  66              	@ 0 "" 2
  67              	.LVL6:
  68              		.thumb
  69              		.syntax unified
  70              	.LBE324:
  71              	.LBE323:
  72              		.loc 1 3307 0 discriminator 1
  73 0014 0029     		cmp	r1, #0
  74 0016 F3D1     		bne	.L2
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 80


  75              	.LBE320:
3308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  76              		.loc 1 3310 0
  77 0018 2023     		movs	r3, #32
  78              	.LVL7:
  79 001a 80F83D30 		strb	r3, [r0, #61]
  80 001e 7047     		bx	lr
  81              		.cfi_endproc
  82              	.LFE285:
  84              		.section	.text.UART_EndRxTransfer,"ax",%progbits
  85              		.align	2
  86              		.thumb
  87              		.thumb_func
  89              	UART_EndRxTransfer:
  90              	.LFB286:
3311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
3312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
3316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
  91              		.loc 1 3319 0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
  96              	.LVL8:
  97              	.L4:
  98              	.LBB325:
3320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  99              		.loc 1 3321 0 discriminator 1
 100 0000 0268     		ldr	r2, [r0]
 101              	.LVL9:
 102              	.LBB326:
 103              	.LBB327:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 104              		.loc 2 1072 0 discriminator 1
 105 0002 02F10C03 		add	r3, r2, #12
 106              	.LVL10:
 107              		.syntax unified
 108              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 109 0006 53E8003F 		ldrex r3, [r3]
 110              	@ 0 "" 2
 111              	.LVL11:
 112              		.thumb
 113              		.syntax unified
 114              	.LBE327:
 115              	.LBE326:
 116              		.loc 1 3321 0 discriminator 1
 117 000a 23F49073 		bic	r3, r3, #288
 118              	.LVL12:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 81


 119              	.LBB328:
 120              	.LBB329:
 121              		.loc 2 1123 0 discriminator 1
 122 000e 0C32     		adds	r2, r2, #12
 123              	.LVL13:
 124              		.syntax unified
 125              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 126 0010 42E80031 		strex r1, r3, [r2]
 127              	@ 0 "" 2
 128              	.LVL14:
 129              		.thumb
 130              		.syntax unified
 131              	.LBE329:
 132              	.LBE328:
 133              		.loc 1 3321 0 discriminator 1
 134 0014 0029     		cmp	r1, #0
 135 0016 F3D1     		bne	.L4
 136              	.LVL15:
 137              	.L5:
 138              	.LBE325:
 139              	.LBB330:
3322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 140              		.loc 1 3322 0 discriminator 1
 141 0018 0268     		ldr	r2, [r0]
 142              	.LVL16:
 143              	.LBB331:
 144              	.LBB332:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 145              		.loc 2 1072 0 discriminator 1
 146 001a 02F11403 		add	r3, r2, #20
 147              	.LVL17:
 148              		.syntax unified
 149              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 150 001e 53E8003F 		ldrex r3, [r3]
 151              	@ 0 "" 2
 152              	.LVL18:
 153              		.thumb
 154              		.syntax unified
 155              	.LBE332:
 156              	.LBE331:
 157              		.loc 1 3322 0 discriminator 1
 158 0022 23F00103 		bic	r3, r3, #1
 159              	.LVL19:
 160              	.LBB333:
 161              	.LBB334:
 162              		.loc 2 1123 0 discriminator 1
 163 0026 1432     		adds	r2, r2, #20
 164              	.LVL20:
 165              		.syntax unified
 166              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 167 0028 42E80031 		strex r1, r3, [r2]
 168              	@ 0 "" 2
 169              	.LVL21:
 170              		.thumb
 171              		.syntax unified
 172              	.LBE334:
 173              	.LBE333:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 82


 174              		.loc 1 3322 0 discriminator 1
 175 002c 0029     		cmp	r1, #0
 176 002e F3D1     		bne	.L5
 177              	.LBE330:
3323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
3325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 178              		.loc 1 3325 0
 179 0030 036B     		ldr	r3, [r0, #48]
 180              	.LVL22:
 181 0032 012B     		cmp	r3, #1
 182 0034 0BD1     		bne	.L6
 183              	.L7:
 184              	.LBB335:
3326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 185              		.loc 1 3327 0 discriminator 1
 186 0036 0268     		ldr	r2, [r0]
 187              	.LVL23:
 188              	.LBB336:
 189              	.LBB337:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 190              		.loc 2 1072 0 discriminator 1
 191 0038 02F10C03 		add	r3, r2, #12
 192              	.LVL24:
 193              		.syntax unified
 194              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 195 003c 53E8003F 		ldrex r3, [r3]
 196              	@ 0 "" 2
 197              	.LVL25:
 198              		.thumb
 199              		.syntax unified
 200              	.LBE337:
 201              	.LBE336:
 202              		.loc 1 3327 0 discriminator 1
 203 0040 23F01003 		bic	r3, r3, #16
 204              	.LVL26:
 205              	.LBB338:
 206              	.LBB339:
 207              		.loc 2 1123 0 discriminator 1
 208 0044 0C32     		adds	r2, r2, #12
 209              	.LVL27:
 210              		.syntax unified
 211              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 212 0046 42E80031 		strex r1, r3, [r2]
 213              	@ 0 "" 2
 214              	.LVL28:
 215              		.thumb
 216              		.syntax unified
 217              	.LBE339:
 218              	.LBE338:
 219              		.loc 1 3327 0 discriminator 1
 220 004a 0029     		cmp	r1, #0
 221 004c F3D1     		bne	.L7
 222              	.LVL29:
 223              	.L6:
 224              	.LBE335:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 83


3328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 225              		.loc 1 3331 0
 226 004e 2023     		movs	r3, #32
 227 0050 80F83E30 		strb	r3, [r0, #62]
3332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 228              		.loc 1 3332 0
 229 0054 0023     		movs	r3, #0
 230 0056 0363     		str	r3, [r0, #48]
 231 0058 7047     		bx	lr
 232              		.cfi_endproc
 233              	.LFE286:
 235 005a 00BF     		.section	.text.UART_Transmit_IT,"ax",%progbits
 236              		.align	2
 237              		.thumb
 238              		.thumb_func
 240              	UART_Transmit_IT:
 241              	.LFB292:
3333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
3334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
3344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
3346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
3347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered error callback*/
3350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
3356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
3368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 84


3370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
3371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
3374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
3376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
3378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
3383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
3384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
3386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
3392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
3394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
3402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
3414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
3417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
3420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
3422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
3424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 85


3427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
3429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
3430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
3432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
3438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
3440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
3448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
3460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
3463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
3468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
3473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
3474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
3476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 86


3484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
3488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
3491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
3495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
3497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
3500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
3503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
3505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
3508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
3513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 242              		.loc 1 3513 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246              		@ link register save eliminated.
 247              	.LVL30:
3514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   const uint16_t *tmp;
3515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 248              		.loc 1 3517 0
 249 0000 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 250 0004 DBB2     		uxtb	r3, r3
 251 0006 212B     		cmp	r3, #33
 252 0008 27D1     		bne	.L12
3518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 253              		.loc 1 3519 0
 254 000a 8368     		ldr	r3, [r0, #8]
 255 000c B3F5805F 		cmp	r3, #4096
 256 0010 0BD1     		bne	.L10
 257              		.loc 1 3519 0 is_stmt 0 discriminator 1
 258 0012 0369     		ldr	r3, [r0, #16]
 259 0014 4BB9     		cbnz	r3, .L10
3520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (const uint16_t *) huart->pTxBuffPtr;
 260              		.loc 1 3521 0 is_stmt 1
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 87


 261 0016 036A     		ldr	r3, [r0, #32]
 262              	.LVL31:
3522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 263              		.loc 1 3522 0
 264 0018 0268     		ldr	r2, [r0]
 265 001a 1B88     		ldrh	r3, [r3]
 266              	.LVL32:
 267 001c C3F30803 		ubfx	r3, r3, #0, #9
 268 0020 5360     		str	r3, [r2, #4]
 269              	.LVL33:
3523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 270              		.loc 1 3523 0
 271 0022 036A     		ldr	r3, [r0, #32]
 272 0024 0233     		adds	r3, r3, #2
 273 0026 0362     		str	r3, [r0, #32]
 274 0028 05E0     		b	.L11
 275              	.L10:
3524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 276              		.loc 1 3527 0
 277 002a 0268     		ldr	r2, [r0]
 278 002c 036A     		ldr	r3, [r0, #32]
 279 002e 591C     		adds	r1, r3, #1
 280 0030 0162     		str	r1, [r0, #32]
 281 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 282 0034 5360     		str	r3, [r2, #4]
 283              	.L11:
3528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (--huart->TxXferCount == 0U)
 284              		.loc 1 3530 0
 285 0036 C38C     		ldrh	r3, [r0, #38]
 286 0038 9BB2     		uxth	r3, r3
 287 003a 013B     		subs	r3, r3, #1
 288 003c 9BB2     		uxth	r3, r3
 289 003e C384     		strh	r3, [r0, #38]	@ movhi
 290 0040 6BB9     		cbnz	r3, .L13
3531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 291              		.loc 1 3533 0
 292 0042 0268     		ldr	r2, [r0]
 293 0044 D368     		ldr	r3, [r2, #12]
 294 0046 23F08003 		bic	r3, r3, #128
 295 004a D360     		str	r3, [r2, #12]
3534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 296              		.loc 1 3536 0
 297 004c 0268     		ldr	r2, [r0]
 298 004e D368     		ldr	r3, [r2, #12]
 299 0050 43F04003 		orr	r3, r3, #64
 300 0054 D360     		str	r3, [r2, #12]
3537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 88


 301              		.loc 1 3538 0
 302 0056 0020     		movs	r0, #0
 303              	.LVL34:
 304 0058 7047     		bx	lr
 305              	.LVL35:
 306              	.L12:
3539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 307              		.loc 1 3542 0
 308 005a 0220     		movs	r0, #2
 309              	.LVL36:
 310 005c 7047     		bx	lr
 311              	.LVL37:
 312              	.L13:
3538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 313              		.loc 1 3538 0
 314 005e 0020     		movs	r0, #0
 315              	.LVL38:
3543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 316              		.loc 1 3544 0
 317 0060 7047     		bx	lr
 318              		.cfi_endproc
 319              	.LFE292:
 321              		.global	__aeabi_uldivmod
 322 0062 00BF     		.section	.text.UART_SetConfig,"ax",%progbits
 323              		.align	2
 324              		.thumb
 325              		.thumb_func
 327              	UART_SetConfig:
 328              	.LFB295:
3545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
3548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
3553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
3554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
3555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
3556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
3558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxCpltCallback(huart);
3563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
3566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 89


3569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
3570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode
3573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
3578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
3579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint8_t  *pdata8bits;
3580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *pdata16bits;
3581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
3584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
3586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = NULL;
3588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = (uint16_t *) huart->pRxBuffPtr;
3589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
3590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->pRxBuffPtr += 2U;
3591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits = (uint8_t *) huart->pRxBuffPtr;
3595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits  = NULL;
3596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORDLE
3598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
3600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
3602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
3604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->pRxBuffPtr += 1U;
3606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (--huart->RxXferCount == 0U)
3609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Data Register not empty Interrupt */
3611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
3612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt */
3614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
3615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
3618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
3621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check current reception Mode :
3623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          If Reception till IDLE event has been selected : */
3624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
3625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 90


3626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Set reception type to Standard */
3627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
3628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable IDLE interrupt */
3630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
3631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Check if IDLE flag is set */
3633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
3634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
3635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Clear IDLE flag in ISR */
3636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           __HAL_UART_CLEAR_IDLEFLAG(huart);
3637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
3638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered Rx Event callback*/
3641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxEventCallback(huart, huart->RxXferSize);
3642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
3644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
3645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
3648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Standard reception API called */
3650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered Rx complete callback*/
3652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxCpltCallback(huart);
3653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
3655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
3656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_OK;
3660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
3662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
3666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
3668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Configures the UART peripheral.
3671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
3676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 329              		.loc 1 3676 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333              	.LVL39:
 334 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 91


 335              	.LCFI0:
 336              		.cfi_def_cfa_offset 24
 337              		.cfi_offset 3, -24
 338              		.cfi_offset 4, -20
 339              		.cfi_offset 5, -16
 340              		.cfi_offset 6, -12
 341              		.cfi_offset 7, -8
 342              		.cfi_offset 14, -4
 343 0002 0546     		mov	r5, r0
3677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg;
3678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t pclk;
3679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
3681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
3682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
3683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
3684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
3685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
3687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits
3688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      according to huart->Init.StopBits value */
3689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 344              		.loc 1 3689 0
 345 0004 0168     		ldr	r1, [r0]
 346 0006 0B69     		ldr	r3, [r1, #16]
 347 0008 23F44052 		bic	r2, r3, #12288
 348 000c C368     		ldr	r3, [r0, #12]
 349 000e 1343     		orrs	r3, r3, r2
 350 0010 0B61     		str	r3, [r1, #16]
3690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
3692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Word Length, Parity and mode:
3693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set the M bits according to huart->Init.WordLength value
3694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set PCE and PS bits according to huart->Init.Parity value
3695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set TE and RE bits according to huart->Init.Mode value
3696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set OVER8 bit according to huart->Init.OverSampling value */
3697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 351              		.loc 1 3698 0
 352 0012 8168     		ldr	r1, [r0, #8]
 353 0014 0369     		ldr	r3, [r0, #16]
 354 0016 1943     		orrs	r1, r1, r3
 355 0018 4369     		ldr	r3, [r0, #20]
 356 001a 1943     		orrs	r1, r1, r3
 357 001c C369     		ldr	r3, [r0, #28]
 358 001e 1943     		orrs	r1, r1, r3
 359              	.LVL40:
3699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 360              		.loc 1 3699 0
 361 0020 0068     		ldr	r0, [r0]
 362              	.LVL41:
 363 0022 C268     		ldr	r2, [r0, #12]
 364 0024 22F41643 		bic	r3, r2, #38400
 365 0028 23F00C03 		bic	r3, r3, #12
 366 002c 0B43     		orrs	r3, r3, r1
 367 002e C360     		str	r3, [r0, #12]
3700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | 
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 92


3701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              tmpreg);
3702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
3704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
3705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 368              		.loc 1 3705 0
 369 0030 2968     		ldr	r1, [r5]
 370              	.LVL42:
 371 0032 4B69     		ldr	r3, [r1, #20]
 372 0034 23F44072 		bic	r2, r3, #768
 373 0038 AB69     		ldr	r3, [r5, #24]
 374 003a 1343     		orrs	r3, r3, r2
 375 003c 4B61     		str	r3, [r1, #20]
3706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if defined(USART6) && defined(UART9) && defined(UART10)
3709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) ||
3710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #elif defined(USART6)
3714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6))
 376              		.loc 1 3714 0
 377 003e 2B68     		ldr	r3, [r5]
 378 0040 314A     		ldr	r2, .L21
 379 0042 9342     		cmp	r3, r2
 380 0044 03D0     		beq	.L15
 381              		.loc 1 3714 0 is_stmt 0 discriminator 1
 382 0046 02F58062 		add	r2, r2, #1024
 383 004a 9342     		cmp	r3, r2
 384 004c 02D1     		bne	.L16
 385              	.L15:
3715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
 386              		.loc 1 3716 0 is_stmt 1
 387 004e FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 388              	.LVL43:
 389 0052 01E0     		b	.L17
 390              	.LVL44:
 391              	.L16:
3717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Instance == USART1)
3720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USART6 */
3724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK1Freq();
 392              		.loc 1 3726 0
 393 0054 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 394              	.LVL45:
 395              	.L17:
3727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration ---------------------*/
3729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 93


 396              		.loc 1 3729 0
 397 0058 EB69     		ldr	r3, [r5, #28]
 398 005a B3F5004F 		cmp	r3, #32768
 399 005e 2AD1     		bne	.L18
3730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 400              		.loc 1 3731 0
 401 0060 2C68     		ldr	r4, [r5]
 402 0062 0021     		movs	r1, #0
 403 0064 0618     		adds	r6, r0, r0
 404 0066 41EB0107 		adc	r7, r1, r1
 405 006a 3618     		adds	r6, r6, r0
 406 006c 4F41     		adcs	r7, r7, r1
 407 006e FB00     		lsls	r3, r7, #3
 408 0070 43EA5673 		orr	r3, r3, r6, lsr #29
 409 0074 F200     		lsls	r2, r6, #3
 410 0076 1646     		mov	r6, r2
 411 0078 1F46     		mov	r7, r3
 412 007a 6A68     		ldr	r2, [r5, #4]
 413 007c 0023     		movs	r3, #0
 414 007e 9218     		adds	r2, r2, r2
 415 0080 5B41     		adcs	r3, r3, r3
 416 0082 8019     		adds	r0, r0, r6
 417              	.LVL46:
 418 0084 7941     		adcs	r1, r1, r7
 419 0086 FFF7FEFF 		bl	__aeabi_uldivmod
 420              	.LVL47:
 421 008a 204B     		ldr	r3, .L21+4
 422 008c A3FB0012 		umull	r1, r2, r3, r0
 423 0090 5109     		lsrs	r1, r2, #5
 424 0092 6422     		movs	r2, #100
 425 0094 02FB1102 		mls	r2, r2, r1, r0
 426 0098 D200     		lsls	r2, r2, #3
 427 009a 3232     		adds	r2, r2, #50
 428 009c A3FB0223 		umull	r2, r3, r3, r2
 429 00a0 5B09     		lsrs	r3, r3, #5
 430 00a2 5A00     		lsls	r2, r3, #1
 431 00a4 02F4F872 		and	r2, r2, #496
 432 00a8 02EB0112 		add	r2, r2, r1, lsl #4
 433 00ac 03F00703 		and	r3, r3, #7
 434 00b0 1344     		add	r3, r3, r2
 435 00b2 A360     		str	r3, [r4, #8]
 436 00b4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 437              	.LVL48:
 438              	.L18:
3732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 439              		.loc 1 3735 0
 440 00b6 2C68     		ldr	r4, [r5]
 441 00b8 0021     		movs	r1, #0
 442 00ba 0618     		adds	r6, r0, r0
 443 00bc 41EB0107 		adc	r7, r1, r1
 444 00c0 3618     		adds	r6, r6, r0
 445 00c2 4F41     		adcs	r7, r7, r1
 446 00c4 FB00     		lsls	r3, r7, #3
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 94


 447 00c6 43EA5673 		orr	r3, r3, r6, lsr #29
 448 00ca F200     		lsls	r2, r6, #3
 449 00cc 1646     		mov	r6, r2
 450 00ce 1F46     		mov	r7, r3
 451 00d0 6B68     		ldr	r3, [r5, #4]
 452 00d2 9A00     		lsls	r2, r3, #2
 453 00d4 9B0F     		lsrs	r3, r3, #30
 454 00d6 8019     		adds	r0, r0, r6
 455              	.LVL49:
 456 00d8 7941     		adcs	r1, r1, r7
 457 00da FFF7FEFF 		bl	__aeabi_uldivmod
 458              	.LVL50:
 459 00de 0B4B     		ldr	r3, .L21+4
 460 00e0 A3FB0021 		umull	r2, r1, r3, r0
 461 00e4 4909     		lsrs	r1, r1, #5
 462 00e6 6422     		movs	r2, #100
 463 00e8 02FB1102 		mls	r2, r2, r1, r0
 464 00ec 1201     		lsls	r2, r2, #4
 465 00ee 3232     		adds	r2, r2, #50
 466 00f0 A3FB0223 		umull	r2, r3, r3, r2
 467 00f4 5B09     		lsrs	r3, r3, #5
 468 00f6 03F0F002 		and	r2, r3, #240
 469 00fa 02EB0111 		add	r1, r2, r1, lsl #4
 470 00fe 03F00F03 		and	r3, r3, #15
 471 0102 0B44     		add	r3, r3, r1
 472 0104 A360     		str	r3, [r4, #8]
 473 0106 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 474              	.LVL51:
 475              	.L22:
 476              		.align	2
 477              	.L21:
 478 0108 00100140 		.word	1073811456
 479 010c 1F85EB51 		.word	1374389535
 480              		.cfi_endproc
 481              	.LFE295:
 483              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 484              		.align	2
 485              		.thumb
 486              		.thumb_func
 488              	UART_WaitOnFlagUntilTimeout:
 489              	.LFB282:
3176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Wait until flag is set */
 490              		.loc 1 3176 0
 491              		.cfi_startproc
 492              		@ args = 4, pretend = 0, frame = 0
 493              		@ frame_needed = 0, uses_anonymous_args = 0
 494              	.LVL52:
 495 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 496              	.LCFI1:
 497              		.cfi_def_cfa_offset 24
 498              		.cfi_offset 4, -24
 499              		.cfi_offset 5, -20
 500              		.cfi_offset 6, -16
 501              		.cfi_offset 7, -12
 502              		.cfi_offset 8, -8
 503              		.cfi_offset 14, -4
 504 0004 0446     		mov	r4, r0
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 95


 505 0006 0F46     		mov	r7, r1
 506 0008 1646     		mov	r6, r2
 507 000a 9846     		mov	r8, r3
 508 000c 069D     		ldr	r5, [sp, #24]
3178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 509              		.loc 1 3178 0
 510 000e 2CE0     		b	.L25
 511              	.LVL53:
 512              	.L30:
3181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 513              		.loc 1 3181 0
 514 0010 B5F1FF3F 		cmp	r5, #-1
 515 0014 29D0     		beq	.L25
3183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 516              		.loc 1 3183 0
 517 0016 2DB1     		cbz	r5, .L27
3183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 518              		.loc 1 3183 0 is_stmt 0 discriminator 1
 519 0018 FFF7FEFF 		bl	HAL_GetTick
 520              	.LVL54:
 521 001c C8EB0000 		rsb	r0, r8, r0
 522 0020 8542     		cmp	r5, r0
 523 0022 22D2     		bcs	.L25
 524              	.L27:
 525              	.LBB340:
3186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 526              		.loc 1 3186 0 is_stmt 1 discriminator 1
 527 0024 2268     		ldr	r2, [r4]
 528              	.LVL55:
 529              	.LBB341:
 530              	.LBB342:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 531              		.loc 2 1072 0 discriminator 1
 532 0026 02F10C03 		add	r3, r2, #12
 533              	.LVL56:
 534              		.syntax unified
 535              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 536 002a 53E8003F 		ldrex r3, [r3]
 537              	@ 0 "" 2
 538              	.LVL57:
 539              		.thumb
 540              		.syntax unified
 541              	.LBE342:
 542              	.LBE341:
3186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 543              		.loc 1 3186 0 discriminator 1
 544 002e 23F4D073 		bic	r3, r3, #416
 545              	.LVL58:
 546              	.LBB343:
 547              	.LBB344:
 548              		.loc 2 1123 0 discriminator 1
 549 0032 0C32     		adds	r2, r2, #12
 550              	.LVL59:
 551              		.syntax unified
 552              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 553 0034 42E80031 		strex r1, r3, [r2]
 554              	@ 0 "" 2
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 96


 555              	.LVL60:
 556              		.thumb
 557              		.syntax unified
 558              	.LBE344:
 559              	.LBE343:
3186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 560              		.loc 1 3186 0 discriminator 1
 561 0038 0029     		cmp	r1, #0
 562 003a F3D1     		bne	.L27
 563              	.LVL61:
 564              	.L28:
 565              	.LBE340:
 566              	.LBB345:
3187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 567              		.loc 1 3187 0 discriminator 1
 568 003c 2268     		ldr	r2, [r4]
 569              	.LVL62:
 570              	.LBB346:
 571              	.LBB347:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 572              		.loc 2 1072 0 discriminator 1
 573 003e 02F11403 		add	r3, r2, #20
 574              	.LVL63:
 575              		.syntax unified
 576              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 577 0042 53E8003F 		ldrex r3, [r3]
 578              	@ 0 "" 2
 579              	.LVL64:
 580              		.thumb
 581              		.syntax unified
 582              	.LBE347:
 583              	.LBE346:
3187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 584              		.loc 1 3187 0 discriminator 1
 585 0046 23F00103 		bic	r3, r3, #1
 586              	.LVL65:
 587              	.LBB348:
 588              	.LBB349:
 589              		.loc 2 1123 0 discriminator 1
 590 004a 1432     		adds	r2, r2, #20
 591              	.LVL66:
 592              		.syntax unified
 593              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 594 004c 42E80031 		strex r1, r3, [r2]
 595              	@ 0 "" 2
 596              	.LVL67:
 597              		.thumb
 598              		.syntax unified
 599              	.LBE349:
 600              	.LBE348:
3187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 601              		.loc 1 3187 0 discriminator 1
 602 0050 0029     		cmp	r1, #0
 603 0052 F3D1     		bne	.L28
 604              	.LBE345:
3189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 605              		.loc 1 3189 0
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 97


 606 0054 2023     		movs	r3, #32
 607              	.LVL68:
 608 0056 84F83D30 		strb	r3, [r4, #61]
3190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 609              		.loc 1 3190 0
 610 005a 84F83E30 		strb	r3, [r4, #62]
3193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 611              		.loc 1 3193 0
 612 005e 0023     		movs	r3, #0
 613 0060 84F83C30 		strb	r3, [r4, #60]
3195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 614              		.loc 1 3195 0
 615 0064 0320     		movs	r0, #3
 616 0066 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 617              	.LVL69:
 618              	.L25:
3178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 619              		.loc 1 3178 0
 620 006a 2368     		ldr	r3, [r4]
 621 006c 1B68     		ldr	r3, [r3]
 622 006e 37EA0303 		bics	r3, r7, r3
 623 0072 0CBF     		ite	eq
 624 0074 0123     		moveq	r3, #1
 625 0076 0023     		movne	r3, #0
 626 0078 B342     		cmp	r3, r6
 627 007a C9D0     		beq	.L30
3199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 628              		.loc 1 3199 0
 629 007c 0020     		movs	r0, #0
3200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 630              		.loc 1 3200 0
 631 007e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 632              		.cfi_endproc
 633              	.LFE282:
 635 0082 00BF     		.section	.text.HAL_UART_MspInit,"ax",%progbits
 636              		.align	2
 637              		.weak	HAL_UART_MspInit
 638              		.thumb
 639              		.thumb_func
 641              	HAL_UART_MspInit:
 642              	.LFB240:
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 643              		.loc 1 711 0
 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 0
 646              		@ frame_needed = 0, uses_anonymous_args = 0
 647              		@ link register save eliminated.
 648              	.LVL70:
 649 0000 7047     		bx	lr
 650              		.cfi_endproc
 651              	.LFE240:
 653 0002 00BF     		.section	.text.HAL_UART_Init,"ax",%progbits
 654              		.align	2
 655              		.global	HAL_UART_Init
 656              		.thumb
 657              		.thumb_func
 659              	HAL_UART_Init:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 98


 660              	.LFB235:
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 661              		.loc 1 358 0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 0
 664              		@ frame_needed = 0, uses_anonymous_args = 0
 665              	.LVL71:
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 666              		.loc 1 360 0
 667 0000 68B3     		cbz	r0, .L36
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 668              		.loc 1 358 0
 669 0002 10B5     		push	{r4, lr}
 670              	.LCFI2:
 671              		.cfi_def_cfa_offset 8
 672              		.cfi_offset 4, -8
 673              		.cfi_offset 14, -4
 674 0004 0446     		mov	r4, r0
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 675              		.loc 1 381 0
 676 0006 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 677 000a 13F0FF0F 		tst	r3, #255
 678 000e 04D1     		bne	.L35
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 679              		.loc 1 384 0
 680 0010 0023     		movs	r3, #0
 681 0012 80F83C30 		strb	r3, [r0, #60]
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 682              		.loc 1 398 0
 683 0016 FFF7FEFF 		bl	HAL_UART_MspInit
 684              	.LVL72:
 685              	.L35:
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 686              		.loc 1 402 0
 687 001a 2423     		movs	r3, #36
 688 001c 84F83D30 		strb	r3, [r4, #61]
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 689              		.loc 1 405 0
 690 0020 2268     		ldr	r2, [r4]
 691 0022 D368     		ldr	r3, [r2, #12]
 692 0024 23F40053 		bic	r3, r3, #8192
 693 0028 D360     		str	r3, [r2, #12]
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 694              		.loc 1 408 0
 695 002a 2046     		mov	r0, r4
 696 002c FFF7FEFF 		bl	UART_SetConfig
 697              	.LVL73:
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 698              		.loc 1 413 0
 699 0030 2268     		ldr	r2, [r4]
 700 0032 1369     		ldr	r3, [r2, #16]
 701 0034 23F49043 		bic	r3, r3, #18432
 702 0038 1361     		str	r3, [r2, #16]
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 703              		.loc 1 414 0
 704 003a 2268     		ldr	r2, [r4]
 705 003c 5369     		ldr	r3, [r2, #20]
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 99


 706 003e 23F02A03 		bic	r3, r3, #42
 707 0042 5361     		str	r3, [r2, #20]
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 708              		.loc 1 417 0
 709 0044 2268     		ldr	r2, [r4]
 710 0046 D368     		ldr	r3, [r2, #12]
 711 0048 43F40053 		orr	r3, r3, #8192
 712 004c D360     		str	r3, [r2, #12]
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 713              		.loc 1 420 0
 714 004e 0020     		movs	r0, #0
 715 0050 2064     		str	r0, [r4, #64]
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 716              		.loc 1 421 0
 717 0052 2023     		movs	r3, #32
 718 0054 84F83D30 		strb	r3, [r4, #61]
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 719              		.loc 1 422 0
 720 0058 84F83E30 		strb	r3, [r4, #62]
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 721              		.loc 1 424 0
 722 005c 10BD     		pop	{r4, pc}
 723              	.LVL74:
 724              	.L36:
 725              	.LCFI3:
 726              		.cfi_def_cfa_offset 0
 727              		.cfi_restore 4
 728              		.cfi_restore 14
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 729              		.loc 1 362 0
 730 005e 0120     		movs	r0, #1
 731              	.LVL75:
 732 0060 7047     		bx	lr
 733              		.cfi_endproc
 734              	.LFE235:
 736 0062 00BF     		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 737              		.align	2
 738              		.global	HAL_HalfDuplex_Init
 739              		.thumb
 740              		.thumb_func
 742              	HAL_HalfDuplex_Init:
 743              	.LFB236:
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 744              		.loc 1 435 0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 0, uses_anonymous_args = 0
 748              	.LVL76:
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 749              		.loc 1 437 0
 750 0000 0028     		cmp	r0, #0
 751 0002 32D0     		beq	.L42
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 752              		.loc 1 435 0
 753 0004 10B5     		push	{r4, lr}
 754              	.LCFI4:
 755              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 100


 756              		.cfi_offset 4, -8
 757              		.cfi_offset 14, -4
 758 0006 0446     		mov	r4, r0
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 759              		.loc 1 447 0
 760 0008 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 761 000c 13F0FF0F 		tst	r3, #255
 762 0010 04D1     		bne	.L41
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 763              		.loc 1 450 0
 764 0012 0023     		movs	r3, #0
 765 0014 80F83C30 		strb	r3, [r0, #60]
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 766              		.loc 1 464 0
 767 0018 FFF7FEFF 		bl	HAL_UART_MspInit
 768              	.LVL77:
 769              	.L41:
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 770              		.loc 1 468 0
 771 001c 2423     		movs	r3, #36
 772 001e 84F83D30 		strb	r3, [r4, #61]
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 773              		.loc 1 471 0
 774 0022 2268     		ldr	r2, [r4]
 775 0024 D368     		ldr	r3, [r2, #12]
 776 0026 23F40053 		bic	r3, r3, #8192
 777 002a D360     		str	r3, [r2, #12]
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 778              		.loc 1 474 0
 779 002c 2046     		mov	r0, r4
 780 002e FFF7FEFF 		bl	UART_SetConfig
 781              	.LVL78:
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 782              		.loc 1 479 0
 783 0032 2268     		ldr	r2, [r4]
 784 0034 1369     		ldr	r3, [r2, #16]
 785 0036 23F49043 		bic	r3, r3, #18432
 786 003a 1361     		str	r3, [r2, #16]
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 787              		.loc 1 480 0
 788 003c 2268     		ldr	r2, [r4]
 789 003e 5369     		ldr	r3, [r2, #20]
 790 0040 23F02203 		bic	r3, r3, #34
 791 0044 5361     		str	r3, [r2, #20]
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 792              		.loc 1 483 0
 793 0046 2268     		ldr	r2, [r4]
 794 0048 5369     		ldr	r3, [r2, #20]
 795 004a 43F00803 		orr	r3, r3, #8
 796 004e 5361     		str	r3, [r2, #20]
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 797              		.loc 1 486 0
 798 0050 2268     		ldr	r2, [r4]
 799 0052 D368     		ldr	r3, [r2, #12]
 800 0054 43F40053 		orr	r3, r3, #8192
 801 0058 D360     		str	r3, [r2, #12]
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 101


 802              		.loc 1 489 0
 803 005a 0020     		movs	r0, #0
 804 005c 2064     		str	r0, [r4, #64]
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 805              		.loc 1 490 0
 806 005e 2023     		movs	r3, #32
 807 0060 84F83D30 		strb	r3, [r4, #61]
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 808              		.loc 1 491 0
 809 0064 84F83E30 		strb	r3, [r4, #62]
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 810              		.loc 1 493 0
 811 0068 10BD     		pop	{r4, pc}
 812              	.LVL79:
 813              	.L42:
 814              	.LCFI5:
 815              		.cfi_def_cfa_offset 0
 816              		.cfi_restore 4
 817              		.cfi_restore 14
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 818              		.loc 1 439 0
 819 006a 0120     		movs	r0, #1
 820              	.LVL80:
 821 006c 7047     		bx	lr
 822              		.cfi_endproc
 823              	.LFE236:
 825 006e 00BF     		.section	.text.HAL_LIN_Init,"ax",%progbits
 826              		.align	2
 827              		.global	HAL_LIN_Init
 828              		.thumb
 829              		.thumb_func
 831              	HAL_LIN_Init:
 832              	.LFB237:
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 833              		.loc 1 508 0
 834              		.cfi_startproc
 835              		@ args = 0, pretend = 0, frame = 0
 836              		@ frame_needed = 0, uses_anonymous_args = 0
 837              	.LVL81:
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 838              		.loc 1 510 0
 839 0000 0028     		cmp	r0, #0
 840 0002 3CD0     		beq	.L48
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 841              		.loc 1 508 0
 842 0004 38B5     		push	{r3, r4, r5, lr}
 843              	.LCFI6:
 844              		.cfi_def_cfa_offset 16
 845              		.cfi_offset 3, -16
 846              		.cfi_offset 4, -12
 847              		.cfi_offset 5, -8
 848              		.cfi_offset 14, -4
 849 0006 0446     		mov	r4, r0
 850 0008 0D46     		mov	r5, r1
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 851              		.loc 1 523 0
 852 000a 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 102


 853 000e 13F0FF0F 		tst	r3, #255
 854 0012 04D1     		bne	.L47
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 855              		.loc 1 526 0
 856 0014 0023     		movs	r3, #0
 857 0016 80F83C30 		strb	r3, [r0, #60]
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 858              		.loc 1 540 0
 859 001a FFF7FEFF 		bl	HAL_UART_MspInit
 860              	.LVL82:
 861              	.L47:
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 862              		.loc 1 544 0
 863 001e 2423     		movs	r3, #36
 864 0020 84F83D30 		strb	r3, [r4, #61]
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 865              		.loc 1 547 0
 866 0024 2268     		ldr	r2, [r4]
 867 0026 D368     		ldr	r3, [r2, #12]
 868 0028 23F40053 		bic	r3, r3, #8192
 869 002c D360     		str	r3, [r2, #12]
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 870              		.loc 1 550 0
 871 002e 2046     		mov	r0, r4
 872 0030 FFF7FEFF 		bl	UART_SetConfig
 873              	.LVL83:
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 874              		.loc 1 555 0
 875 0034 2268     		ldr	r2, [r4]
 876 0036 1369     		ldr	r3, [r2, #16]
 877 0038 23F40063 		bic	r3, r3, #2048
 878 003c 1361     		str	r3, [r2, #16]
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 879              		.loc 1 556 0
 880 003e 2268     		ldr	r2, [r4]
 881 0040 5369     		ldr	r3, [r2, #20]
 882 0042 23F02A03 		bic	r3, r3, #42
 883 0046 5361     		str	r3, [r2, #20]
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 884              		.loc 1 559 0
 885 0048 2268     		ldr	r2, [r4]
 886 004a 1369     		ldr	r3, [r2, #16]
 887 004c 43F48043 		orr	r3, r3, #16384
 888 0050 1361     		str	r3, [r2, #16]
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 889              		.loc 1 562 0
 890 0052 2268     		ldr	r2, [r4]
 891 0054 1369     		ldr	r3, [r2, #16]
 892 0056 23F02003 		bic	r3, r3, #32
 893 005a 1361     		str	r3, [r2, #16]
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 894              		.loc 1 563 0
 895 005c 2368     		ldr	r3, [r4]
 896 005e 1969     		ldr	r1, [r3, #16]
 897 0060 0D43     		orrs	r5, r5, r1
 898              	.LVL84:
 899 0062 1D61     		str	r5, [r3, #16]
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 103


 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 900              		.loc 1 566 0
 901 0064 2268     		ldr	r2, [r4]
 902 0066 D368     		ldr	r3, [r2, #12]
 903 0068 43F40053 		orr	r3, r3, #8192
 904 006c D360     		str	r3, [r2, #12]
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 905              		.loc 1 569 0
 906 006e 0020     		movs	r0, #0
 907 0070 2064     		str	r0, [r4, #64]
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 908              		.loc 1 570 0
 909 0072 2023     		movs	r3, #32
 910 0074 84F83D30 		strb	r3, [r4, #61]
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 911              		.loc 1 571 0
 912 0078 84F83E30 		strb	r3, [r4, #62]
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 913              		.loc 1 573 0
 914 007c 38BD     		pop	{r3, r4, r5, pc}
 915              	.LVL85:
 916              	.L48:
 917              	.LCFI7:
 918              		.cfi_def_cfa_offset 0
 919              		.cfi_restore 3
 920              		.cfi_restore 4
 921              		.cfi_restore 5
 922              		.cfi_restore 14
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 923              		.loc 1 512 0
 924 007e 0120     		movs	r0, #1
 925              	.LVL86:
 926 0080 7047     		bx	lr
 927              		.cfi_endproc
 928              	.LFE237:
 930 0082 00BF     		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 931              		.align	2
 932              		.global	HAL_MultiProcessor_Init
 933              		.thumb
 934              		.thumb_func
 936              	HAL_MultiProcessor_Init:
 937              	.LFB238:
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 938              		.loc 1 589 0
 939              		.cfi_startproc
 940              		@ args = 0, pretend = 0, frame = 0
 941              		@ frame_needed = 0, uses_anonymous_args = 0
 942              	.LVL87:
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 943              		.loc 1 591 0
 944 0000 0028     		cmp	r0, #0
 945 0002 41D0     		beq	.L54
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 946              		.loc 1 589 0
 947 0004 70B5     		push	{r4, r5, r6, lr}
 948              	.LCFI8:
 949              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 104


 950              		.cfi_offset 4, -16
 951              		.cfi_offset 5, -12
 952              		.cfi_offset 6, -8
 953              		.cfi_offset 14, -4
 954 0006 0446     		mov	r4, r0
 955 0008 1546     		mov	r5, r2
 956 000a 0E46     		mov	r6, r1
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 957              		.loc 1 605 0
 958 000c 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 959 0010 13F0FF0F 		tst	r3, #255
 960 0014 04D1     		bne	.L53
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 961              		.loc 1 608 0
 962 0016 0023     		movs	r3, #0
 963 0018 80F83C30 		strb	r3, [r0, #60]
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 964              		.loc 1 622 0
 965 001c FFF7FEFF 		bl	HAL_UART_MspInit
 966              	.LVL88:
 967              	.L53:
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 968              		.loc 1 626 0
 969 0020 2423     		movs	r3, #36
 970 0022 84F83D30 		strb	r3, [r4, #61]
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 971              		.loc 1 629 0
 972 0026 2268     		ldr	r2, [r4]
 973 0028 D368     		ldr	r3, [r2, #12]
 974 002a 23F40053 		bic	r3, r3, #8192
 975 002e D360     		str	r3, [r2, #12]
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 976              		.loc 1 632 0
 977 0030 2046     		mov	r0, r4
 978 0032 FFF7FEFF 		bl	UART_SetConfig
 979              	.LVL89:
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 980              		.loc 1 637 0
 981 0036 2268     		ldr	r2, [r4]
 982 0038 1369     		ldr	r3, [r2, #16]
 983 003a 23F49043 		bic	r3, r3, #18432
 984 003e 1361     		str	r3, [r2, #16]
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 985              		.loc 1 638 0
 986 0040 2268     		ldr	r2, [r4]
 987 0042 5369     		ldr	r3, [r2, #20]
 988 0044 23F02A03 		bic	r3, r3, #42
 989 0048 5361     		str	r3, [r2, #20]
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, Address);
 990              		.loc 1 641 0
 991 004a 2268     		ldr	r2, [r4]
 992 004c 1369     		ldr	r3, [r2, #16]
 993 004e 23F00F03 		bic	r3, r3, #15
 994 0052 1361     		str	r3, [r2, #16]
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 995              		.loc 1 642 0
 996 0054 2368     		ldr	r3, [r4]
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 105


 997 0056 1969     		ldr	r1, [r3, #16]
 998 0058 0E43     		orrs	r6, r6, r1
 999 005a 1E61     		str	r6, [r3, #16]
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 1000              		.loc 1 645 0
 1001 005c 2268     		ldr	r2, [r4]
 1002 005e D368     		ldr	r3, [r2, #12]
 1003 0060 23F40063 		bic	r3, r3, #2048
 1004 0064 D360     		str	r3, [r2, #12]
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1005              		.loc 1 646 0
 1006 0066 2368     		ldr	r3, [r4]
 1007 0068 DA68     		ldr	r2, [r3, #12]
 1008 006a 1543     		orrs	r5, r5, r2
 1009              	.LVL90:
 1010 006c DD60     		str	r5, [r3, #12]
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1011              		.loc 1 649 0
 1012 006e 2268     		ldr	r2, [r4]
 1013 0070 D368     		ldr	r3, [r2, #12]
 1014 0072 43F40053 		orr	r3, r3, #8192
 1015 0076 D360     		str	r3, [r2, #12]
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 1016              		.loc 1 652 0
 1017 0078 0020     		movs	r0, #0
 1018 007a 2064     		str	r0, [r4, #64]
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1019              		.loc 1 653 0
 1020 007c 2023     		movs	r3, #32
 1021 007e 84F83D30 		strb	r3, [r4, #61]
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1022              		.loc 1 654 0
 1023 0082 84F83E30 		strb	r3, [r4, #62]
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1024              		.loc 1 656 0
 1025 0086 70BD     		pop	{r4, r5, r6, pc}
 1026              	.LVL91:
 1027              	.L54:
 1028              	.LCFI9:
 1029              		.cfi_def_cfa_offset 0
 1030              		.cfi_restore 4
 1031              		.cfi_restore 5
 1032              		.cfi_restore 6
 1033              		.cfi_restore 14
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1034              		.loc 1 593 0
 1035 0088 0120     		movs	r0, #1
 1036              	.LVL92:
 1037 008a 7047     		bx	lr
 1038              		.cfi_endproc
 1039              	.LFE238:
 1041              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 1042              		.align	2
 1043              		.weak	HAL_UART_MspDeInit
 1044              		.thumb
 1045              		.thumb_func
 1047              	HAL_UART_MspDeInit:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 106


 1048              	.LFB241:
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1049              		.loc 1 726 0
 1050              		.cfi_startproc
 1051              		@ args = 0, pretend = 0, frame = 0
 1052              		@ frame_needed = 0, uses_anonymous_args = 0
 1053              		@ link register save eliminated.
 1054              	.LVL93:
 1055 0000 7047     		bx	lr
 1056              		.cfi_endproc
 1057              	.LFE241:
 1059 0002 00BF     		.section	.text.HAL_UART_DeInit,"ax",%progbits
 1060              		.align	2
 1061              		.global	HAL_UART_DeInit
 1062              		.thumb
 1063              		.thumb_func
 1065              	HAL_UART_DeInit:
 1066              	.LFB239:
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 1067              		.loc 1 666 0
 1068              		.cfi_startproc
 1069              		@ args = 0, pretend = 0, frame = 0
 1070              		@ frame_needed = 0, uses_anonymous_args = 0
 1071              	.LVL94:
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1072              		.loc 1 668 0
 1073 0000 A8B1     		cbz	r0, .L60
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 1074              		.loc 1 666 0
 1075 0002 10B5     		push	{r4, lr}
 1076              	.LCFI10:
 1077              		.cfi_def_cfa_offset 8
 1078              		.cfi_offset 4, -8
 1079              		.cfi_offset 14, -4
 1080 0004 0446     		mov	r4, r0
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1081              		.loc 1 676 0
 1082 0006 2423     		movs	r3, #36
 1083 0008 80F83D30 		strb	r3, [r0, #61]
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1084              		.loc 1 679 0
 1085 000c 0268     		ldr	r2, [r0]
 1086 000e D368     		ldr	r3, [r2, #12]
 1087 0010 23F40053 		bic	r3, r3, #8192
 1088 0014 D360     		str	r3, [r2, #12]
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 1089              		.loc 1 690 0
 1090 0016 FFF7FEFF 		bl	HAL_UART_MspDeInit
 1091              	.LVL95:
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 1092              		.loc 1 693 0
 1093 001a 0020     		movs	r0, #0
 1094 001c 2064     		str	r0, [r4, #64]
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 1095              		.loc 1 694 0
 1096 001e 84F83D00 		strb	r0, [r4, #61]
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 107


 1097              		.loc 1 695 0
 1098 0022 84F83E00 		strb	r0, [r4, #62]
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1099              		.loc 1 696 0
 1100 0026 2063     		str	r0, [r4, #48]
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1101              		.loc 1 699 0
 1102 0028 84F83C00 		strb	r0, [r4, #60]
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1103              		.loc 1 701 0
 1104 002c 10BD     		pop	{r4, pc}
 1105              	.LVL96:
 1106              	.L60:
 1107              	.LCFI11:
 1108              		.cfi_def_cfa_offset 0
 1109              		.cfi_restore 4
 1110              		.cfi_restore 14
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1111              		.loc 1 670 0
 1112 002e 0120     		movs	r0, #1
 1113              	.LVL97:
 1114 0030 7047     		bx	lr
 1115              		.cfi_endproc
 1116              	.LFE239:
 1118 0032 00BF     		.section	.text.HAL_UART_Transmit,"ax",%progbits
 1119              		.align	2
 1120              		.global	HAL_UART_Transmit
 1121              		.thumb
 1122              		.thumb_func
 1124              	HAL_UART_Transmit:
 1125              	.LFB242:
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   const uint8_t  *pdata8bits;
 1126              		.loc 1 1137 0
 1127              		.cfi_startproc
 1128              		@ args = 0, pretend = 0, frame = 0
 1129              		@ frame_needed = 0, uses_anonymous_args = 0
 1130              	.LVL98:
 1131 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1132              	.LCFI12:
 1133              		.cfi_def_cfa_offset 24
 1134              		.cfi_offset 4, -24
 1135              		.cfi_offset 5, -20
 1136              		.cfi_offset 6, -16
 1137              		.cfi_offset 7, -12
 1138              		.cfi_offset 8, -8
 1139              		.cfi_offset 14, -4
 1140 0004 82B0     		sub	sp, sp, #8
 1141              	.LCFI13:
 1142              		.cfi_def_cfa_offset 32
 1143 0006 1E46     		mov	r6, r3
 1144              	.LVL99:
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1145              		.loc 1 1143 0
 1146 0008 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1147              	.LVL100:
 1148 000c DBB2     		uxtb	r3, r3
 1149 000e 202B     		cmp	r3, #32
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 108


 1150 0010 55D1     		bne	.L70
 1151 0012 0446     		mov	r4, r0
 1152 0014 0D46     		mov	r5, r1
 1153 0016 9046     		mov	r8, r2
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1154              		.loc 1 1145 0
 1155 0018 0029     		cmp	r1, #0
 1156 001a 52D0     		beq	.L71
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1157              		.loc 1 1145 0 is_stmt 0 discriminator 1
 1158 001c 002A     		cmp	r2, #0
 1159 001e 52D0     		beq	.L72
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1160              		.loc 1 1151 0 is_stmt 1
 1161 0020 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1162 0024 012B     		cmp	r3, #1
 1163 0026 50D0     		beq	.L73
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1164              		.loc 1 1151 0 is_stmt 0 discriminator 2
 1165 0028 0123     		movs	r3, #1
 1166 002a 80F83C30 		strb	r3, [r0, #60]
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1167              		.loc 1 1153 0 is_stmt 1 discriminator 2
 1168 002e 0023     		movs	r3, #0
 1169 0030 0364     		str	r3, [r0, #64]
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1170              		.loc 1 1154 0 discriminator 2
 1171 0032 2123     		movs	r3, #33
 1172 0034 80F83D30 		strb	r3, [r0, #61]
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1173              		.loc 1 1157 0 discriminator 2
 1174 0038 FFF7FEFF 		bl	HAL_GetTick
 1175              	.LVL101:
 1176 003c 0746     		mov	r7, r0
 1177              	.LVL102:
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1178              		.loc 1 1159 0 discriminator 2
 1179 003e A4F82480 		strh	r8, [r4, #36]	@ movhi
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1180              		.loc 1 1160 0 discriminator 2
 1181 0042 A4F82680 		strh	r8, [r4, #38]	@ movhi
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1182              		.loc 1 1163 0 discriminator 2
 1183 0046 A368     		ldr	r3, [r4, #8]
 1184 0048 B3F5805F 		cmp	r3, #4096
 1185 004c 04D1     		bne	.L74
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1186              		.loc 1 1163 0 is_stmt 0 discriminator 1
 1187 004e 2369     		ldr	r3, [r4, #16]
 1188 0050 2BB1     		cbz	r3, .L75
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1189              		.loc 1 1171 0 is_stmt 1
 1190 0052 4FF00008 		mov	r8, #0
 1191 0056 04E0     		b	.L65
 1192              	.L74:
 1193 0058 4FF00008 		mov	r8, #0
 1194 005c 01E0     		b	.L65
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 109


 1195              	.L75:
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1196              		.loc 1 1166 0
 1197 005e A846     		mov	r8, r5
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = (const uint16_t *) pData;
 1198              		.loc 1 1165 0
 1199 0060 0025     		movs	r5, #0
 1200              	.LVL103:
 1201              	.L65:
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1202              		.loc 1 1175 0
 1203 0062 0023     		movs	r3, #0
 1204 0064 84F83C30 		strb	r3, [r4, #60]
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1205              		.loc 1 1177 0
 1206 0068 18E0     		b	.L66
 1207              	.LVL104:
 1208              	.L69:
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 1209              		.loc 1 1179 0
 1210 006a 0096     		str	r6, [sp]
 1211 006c 3B46     		mov	r3, r7
 1212 006e 0022     		movs	r2, #0
 1213 0070 8021     		movs	r1, #128
 1214 0072 2046     		mov	r0, r4
 1215 0074 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1216              	.LVL105:
 1217 0078 48BB     		cbnz	r0, .L76
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 1218              		.loc 1 1183 0
 1219 007a 35B9     		cbnz	r5, .L67
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         pdata16bits++;
 1220              		.loc 1 1185 0
 1221 007c 2268     		ldr	r2, [r4]
 1222 007e 38F8023B 		ldrh	r3, [r8], #2
 1223              	.LVL106:
 1224 0082 C3F30803 		ubfx	r3, r3, #0, #9
 1225 0086 5360     		str	r3, [r2, #4]
 1226              	.LVL107:
 1227 0088 03E0     		b	.L68
 1228              	.L67:
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         pdata8bits++;
 1229              		.loc 1 1190 0
 1230 008a 2368     		ldr	r3, [r4]
 1231 008c 15F8012B 		ldrb	r2, [r5], #1	@ zero_extendqisi2
 1232              	.LVL108:
 1233 0090 5A60     		str	r2, [r3, #4]
 1234              	.LVL109:
 1235              	.L68:
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1236              		.loc 1 1193 0
 1237 0092 E38C     		ldrh	r3, [r4, #38]
 1238 0094 9BB2     		uxth	r3, r3
 1239 0096 013B     		subs	r3, r3, #1
 1240 0098 9BB2     		uxth	r3, r3
 1241 009a E384     		strh	r3, [r4, #38]	@ movhi
 1242              	.L66:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 110


1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1243              		.loc 1 1177 0
 1244 009c E38C     		ldrh	r3, [r4, #38]
 1245 009e 9BB2     		uxth	r3, r3
 1246 00a0 002B     		cmp	r3, #0
 1247 00a2 E2D1     		bne	.L69
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1248              		.loc 1 1196 0
 1249 00a4 0096     		str	r6, [sp]
 1250 00a6 3B46     		mov	r3, r7
 1251 00a8 0022     		movs	r2, #0
 1252 00aa 4021     		movs	r1, #64
 1253 00ac 2046     		mov	r0, r4
 1254 00ae FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1255              	.LVL110:
 1256 00b2 0346     		mov	r3, r0
 1257 00b4 68B9     		cbnz	r0, .L77
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1258              		.loc 1 1202 0
 1259 00b6 2022     		movs	r2, #32
 1260 00b8 84F83D20 		strb	r2, [r4, #61]
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1261              		.loc 1 1204 0
 1262 00bc 0AE0     		b	.L64
 1263              	.LVL111:
 1264              	.L70:
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1265              		.loc 1 1208 0
 1266 00be 0223     		movs	r3, #2
 1267 00c0 08E0     		b	.L64
 1268              	.L71:
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1269              		.loc 1 1147 0
 1270 00c2 0123     		movs	r3, #1
 1271 00c4 06E0     		b	.L64
 1272              	.L72:
 1273 00c6 0123     		movs	r3, #1
 1274 00c8 04E0     		b	.L64
 1275              	.L73:
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1276              		.loc 1 1151 0
 1277 00ca 0223     		movs	r3, #2
 1278 00cc 02E0     		b	.L64
 1279              	.LVL112:
 1280              	.L76:
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 1281              		.loc 1 1181 0
 1282 00ce 0323     		movs	r3, #3
 1283 00d0 00E0     		b	.L64
 1284              	.L77:
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1285              		.loc 1 1198 0
 1286 00d2 0323     		movs	r3, #3
 1287              	.LVL113:
 1288              	.L64:
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1289              		.loc 1 1210 0
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 111


 1290 00d4 1846     		mov	r0, r3
 1291 00d6 02B0     		add	sp, sp, #8
 1292              	.LCFI14:
 1293              		.cfi_def_cfa_offset 24
 1294              		@ sp needed
 1295 00d8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1296              		.cfi_endproc
 1297              	.LFE242:
 1299              		.section	.text.HAL_UART_Receive,"ax",%progbits
 1300              		.align	2
 1301              		.global	HAL_UART_Receive
 1302              		.thumb
 1303              		.thumb_func
 1305              	HAL_UART_Receive:
 1306              	.LFB243:
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint8_t  *pdata8bits;
 1307              		.loc 1 1225 0
 1308              		.cfi_startproc
 1309              		@ args = 0, pretend = 0, frame = 0
 1310              		@ frame_needed = 0, uses_anonymous_args = 0
 1311              	.LVL114:
 1312 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1313              	.LCFI15:
 1314              		.cfi_def_cfa_offset 24
 1315              		.cfi_offset 4, -24
 1316              		.cfi_offset 5, -20
 1317              		.cfi_offset 6, -16
 1318              		.cfi_offset 7, -12
 1319              		.cfi_offset 8, -8
 1320              		.cfi_offset 14, -4
 1321 0004 82B0     		sub	sp, sp, #8
 1322              	.LCFI16:
 1323              		.cfi_def_cfa_offset 32
 1324 0006 1E46     		mov	r6, r3
 1325              	.LVL115:
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1326              		.loc 1 1231 0
 1327 0008 90F83E30 		ldrb	r3, [r0, #62]	@ zero_extendqisi2
 1328              	.LVL116:
 1329 000c DBB2     		uxtb	r3, r3
 1330 000e 202B     		cmp	r3, #32
 1331 0010 5BD1     		bne	.L89
 1332 0012 0446     		mov	r4, r0
 1333 0014 0D46     		mov	r5, r1
 1334 0016 9046     		mov	r8, r2
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1335              		.loc 1 1233 0
 1336 0018 0029     		cmp	r1, #0
 1337 001a 58D0     		beq	.L90
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1338              		.loc 1 1233 0 is_stmt 0 discriminator 1
 1339 001c 002A     		cmp	r2, #0
 1340 001e 58D0     		beq	.L91
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1341              		.loc 1 1239 0 is_stmt 1
 1342 0020 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1343 0024 012B     		cmp	r3, #1
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 112


 1344 0026 56D0     		beq	.L92
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1345              		.loc 1 1239 0 is_stmt 0 discriminator 2
 1346 0028 0123     		movs	r3, #1
 1347 002a 80F83C30 		strb	r3, [r0, #60]
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1348              		.loc 1 1241 0 is_stmt 1 discriminator 2
 1349 002e 0023     		movs	r3, #0
 1350 0030 0364     		str	r3, [r0, #64]
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1351              		.loc 1 1242 0 discriminator 2
 1352 0032 2222     		movs	r2, #34
 1353              	.LVL117:
 1354 0034 80F83E20 		strb	r2, [r0, #62]
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1355              		.loc 1 1243 0 discriminator 2
 1356 0038 0363     		str	r3, [r0, #48]
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1357              		.loc 1 1246 0 discriminator 2
 1358 003a FFF7FEFF 		bl	HAL_GetTick
 1359              	.LVL118:
 1360 003e 0746     		mov	r7, r0
 1361              	.LVL119:
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1362              		.loc 1 1248 0 discriminator 2
 1363 0040 A4F82C80 		strh	r8, [r4, #44]	@ movhi
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1364              		.loc 1 1249 0 discriminator 2
 1365 0044 A4F82E80 		strh	r8, [r4, #46]	@ movhi
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1366              		.loc 1 1252 0 discriminator 2
 1367 0048 A368     		ldr	r3, [r4, #8]
 1368 004a B3F5805F 		cmp	r3, #4096
 1369 004e 04D1     		bne	.L93
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1370              		.loc 1 1252 0 is_stmt 0 discriminator 1
 1371 0050 2369     		ldr	r3, [r4, #16]
 1372 0052 2BB1     		cbz	r3, .L94
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1373              		.loc 1 1260 0 is_stmt 1
 1374 0054 4FF00008 		mov	r8, #0
 1375 0058 04E0     		b	.L81
 1376              	.L93:
 1377 005a 4FF00008 		mov	r8, #0
 1378 005e 01E0     		b	.L81
 1379              	.L94:
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1380              		.loc 1 1255 0
 1381 0060 A846     		mov	r8, r5
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 1382              		.loc 1 1254 0
 1383 0062 0025     		movs	r5, #0
 1384              	.LVL120:
 1385              	.L81:
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1386              		.loc 1 1264 0
 1387 0064 0023     		movs	r3, #0
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 113


 1388 0066 84F83C30 		strb	r3, [r4, #60]
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1389              		.loc 1 1267 0
 1390 006a 25E0     		b	.L82
 1391              	.LVL121:
 1392              	.L88:
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 1393              		.loc 1 1269 0
 1394 006c 0096     		str	r6, [sp]
 1395 006e 3B46     		mov	r3, r7
 1396 0070 0022     		movs	r2, #0
 1397 0072 2021     		movs	r1, #32
 1398 0074 2046     		mov	r0, r4
 1399 0076 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1400              	.LVL122:
 1401 007a 70BB     		cbnz	r0, .L95
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 1402              		.loc 1 1273 0
 1403 007c 35B9     		cbnz	r5, .L83
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         pdata16bits++;
 1404              		.loc 1 1275 0
 1405 007e 2368     		ldr	r3, [r4]
 1406 0080 5B68     		ldr	r3, [r3, #4]
 1407 0082 C3F30803 		ubfx	r3, r3, #0, #9
 1408 0086 28F8023B 		strh	r3, [r8], #2	@ movhi
 1409              	.LVL123:
 1410 008a 10E0     		b	.L84
 1411              	.L83:
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1412              		.loc 1 1280 0
 1413 008c A368     		ldr	r3, [r4, #8]
 1414 008e B3F5805F 		cmp	r3, #4096
 1415 0092 02D0     		beq	.L85
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1416              		.loc 1 1280 0 is_stmt 0 discriminator 1
 1417 0094 2BB9     		cbnz	r3, .L86
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1418              		.loc 1 1280 0 discriminator 2
 1419 0096 2369     		ldr	r3, [r4, #16]
 1420 0098 1BB9     		cbnz	r3, .L86
 1421              	.L85:
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1422              		.loc 1 1282 0 is_stmt 1
 1423 009a 2368     		ldr	r3, [r4]
 1424 009c 5B68     		ldr	r3, [r3, #4]
 1425 009e 2B70     		strb	r3, [r5]
 1426 00a0 04E0     		b	.L87
 1427              	.L86:
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1428              		.loc 1 1286 0
 1429 00a2 2368     		ldr	r3, [r4]
 1430 00a4 5B68     		ldr	r3, [r3, #4]
 1431 00a6 03F07F03 		and	r3, r3, #127
 1432 00aa 2B70     		strb	r3, [r5]
 1433              	.L87:
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 1434              		.loc 1 1288 0
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 114


 1435 00ac 0135     		adds	r5, r5, #1
 1436              	.LVL124:
 1437              	.L84:
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1438              		.loc 1 1290 0
 1439 00ae E38D     		ldrh	r3, [r4, #46]
 1440 00b0 9BB2     		uxth	r3, r3
 1441 00b2 013B     		subs	r3, r3, #1
 1442 00b4 9BB2     		uxth	r3, r3
 1443 00b6 E385     		strh	r3, [r4, #46]	@ movhi
 1444              	.L82:
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1445              		.loc 1 1267 0
 1446 00b8 E38D     		ldrh	r3, [r4, #46]
 1447 00ba 9BB2     		uxth	r3, r3
 1448 00bc 002B     		cmp	r3, #0
 1449 00be D5D1     		bne	.L88
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1450              		.loc 1 1294 0
 1451 00c0 2023     		movs	r3, #32
 1452 00c2 84F83E30 		strb	r3, [r4, #62]
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1453              		.loc 1 1296 0
 1454 00c6 0020     		movs	r0, #0
 1455 00c8 08E0     		b	.L80
 1456              	.LVL125:
 1457              	.L89:
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1458              		.loc 1 1300 0
 1459 00ca 0220     		movs	r0, #2
 1460              	.LVL126:
 1461 00cc 06E0     		b	.L80
 1462              	.LVL127:
 1463              	.L90:
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1464              		.loc 1 1235 0
 1465 00ce 0120     		movs	r0, #1
 1466              	.LVL128:
 1467 00d0 04E0     		b	.L80
 1468              	.LVL129:
 1469              	.L91:
 1470 00d2 0120     		movs	r0, #1
 1471              	.LVL130:
 1472 00d4 02E0     		b	.L80
 1473              	.LVL131:
 1474              	.L92:
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1475              		.loc 1 1239 0
 1476 00d6 0220     		movs	r0, #2
 1477              	.LVL132:
 1478 00d8 00E0     		b	.L80
 1479              	.LVL133:
 1480              	.L95:
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 1481              		.loc 1 1271 0
 1482 00da 0320     		movs	r0, #3
 1483              	.LVL134:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 115


 1484              	.L80:
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1485              		.loc 1 1302 0
 1486 00dc 02B0     		add	sp, sp, #8
 1487              	.LCFI17:
 1488              		.cfi_def_cfa_offset 24
 1489              		@ sp needed
 1490 00de BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1491              		.cfi_endproc
 1492              	.LFE243:
 1494 00e2 00BF     		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1495              		.align	2
 1496              		.global	HAL_UART_Transmit_IT
 1497              		.thumb
 1498              		.thumb_func
 1500              	HAL_UART_Transmit_IT:
 1501              	.LFB244:
1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 1502              		.loc 1 1316 0
 1503              		.cfi_startproc
 1504              		@ args = 0, pretend = 0, frame = 0
 1505              		@ frame_needed = 0, uses_anonymous_args = 0
 1506              		@ link register save eliminated.
 1507              	.LVL135:
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1508              		.loc 1 1318 0
 1509 0000 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1510 0004 DBB2     		uxtb	r3, r3
 1511 0006 202B     		cmp	r3, #32
 1512 0008 16D1     		bne	.L99
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1513              		.loc 1 1320 0
 1514 000a B9B1     		cbz	r1, .L100
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1515              		.loc 1 1320 0 is_stmt 0 discriminator 1
 1516 000c C2B1     		cbz	r2, .L101
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1517              		.loc 1 1326 0 is_stmt 1
 1518 000e 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1519 0012 012B     		cmp	r3, #1
 1520 0014 16D0     		beq	.L102
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1521              		.loc 1 1328 0 discriminator 2
 1522 0016 0162     		str	r1, [r0, #32]
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1523              		.loc 1 1329 0 discriminator 2
 1524 0018 8284     		strh	r2, [r0, #36]	@ movhi
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1525              		.loc 1 1330 0 discriminator 2
 1526 001a C284     		strh	r2, [r0, #38]	@ movhi
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1527              		.loc 1 1332 0 discriminator 2
 1528 001c 0023     		movs	r3, #0
 1529 001e 0364     		str	r3, [r0, #64]
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1530              		.loc 1 1333 0 discriminator 2
 1531 0020 2122     		movs	r2, #33
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 116


 1532              	.LVL136:
 1533 0022 80F83D20 		strb	r2, [r0, #61]
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1534              		.loc 1 1336 0 discriminator 2
 1535 0026 80F83C30 		strb	r3, [r0, #60]
1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1536              		.loc 1 1339 0 discriminator 2
 1537 002a 0168     		ldr	r1, [r0]
 1538              	.LVL137:
 1539 002c CA68     		ldr	r2, [r1, #12]
 1540 002e 42F08002 		orr	r2, r2, #128
 1541 0032 CA60     		str	r2, [r1, #12]
 1542              	.LVL138:
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1543              		.loc 1 1341 0 discriminator 2
 1544 0034 1846     		mov	r0, r3
 1545              	.LVL139:
 1546 0036 7047     		bx	lr
 1547              	.LVL140:
 1548              	.L99:
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1549              		.loc 1 1345 0
 1550 0038 0220     		movs	r0, #2
 1551              	.LVL141:
 1552 003a 7047     		bx	lr
 1553              	.LVL142:
 1554              	.L100:
1322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1555              		.loc 1 1322 0
 1556 003c 0120     		movs	r0, #1
 1557              	.LVL143:
 1558 003e 7047     		bx	lr
 1559              	.LVL144:
 1560              	.L101:
 1561 0040 0120     		movs	r0, #1
 1562              	.LVL145:
 1563 0042 7047     		bx	lr
 1564              	.LVL146:
 1565              	.L102:
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1566              		.loc 1 1326 0
 1567 0044 0220     		movs	r0, #2
 1568              	.LVL147:
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1569              		.loc 1 1347 0
 1570 0046 7047     		bx	lr
 1571              		.cfi_endproc
 1572              	.LFE244:
 1574              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1575              		.align	2
 1576              		.global	HAL_UART_Transmit_DMA
 1577              		.thumb
 1578              		.thumb_func
 1580              	HAL_UART_Transmit_DMA:
 1581              	.LFB246:
1396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   const uint32_t *tmp;
 1582              		.loc 1 1396 0
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 117


 1583              		.cfi_startproc
 1584              		@ args = 0, pretend = 0, frame = 0
 1585              		@ frame_needed = 0, uses_anonymous_args = 0
 1586              	.LVL148:
 1587 0000 38B5     		push	{r3, r4, r5, lr}
 1588              	.LCFI18:
 1589              		.cfi_def_cfa_offset 16
 1590              		.cfi_offset 3, -16
 1591              		.cfi_offset 4, -12
 1592              		.cfi_offset 5, -8
 1593              		.cfi_offset 14, -4
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1594              		.loc 1 1400 0
 1595 0002 90F83D40 		ldrb	r4, [r0, #61]	@ zero_extendqisi2
 1596 0006 E4B2     		uxtb	r4, r4
 1597 0008 202C     		cmp	r4, #32
 1598 000a 38D1     		bne	.L106
1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1599              		.loc 1 1402 0
 1600 000c 0029     		cmp	r1, #0
 1601 000e 38D0     		beq	.L107
1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1602              		.loc 1 1402 0 is_stmt 0 discriminator 1
 1603 0010 002A     		cmp	r2, #0
 1604 0012 38D0     		beq	.L108
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1605              		.loc 1 1408 0 is_stmt 1
 1606 0014 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1607 0018 012B     		cmp	r3, #1
 1608 001a 36D0     		beq	.L109
 1609 001c 1346     		mov	r3, r2
 1610 001e 0446     		mov	r4, r0
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1611              		.loc 1 1408 0 is_stmt 0 discriminator 2
 1612 0020 0122     		movs	r2, #1
 1613              	.LVL149:
 1614 0022 80F83C20 		strb	r2, [r0, #60]
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1615              		.loc 1 1410 0 is_stmt 1 discriminator 2
 1616 0026 0162     		str	r1, [r0, #32]
1411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1617              		.loc 1 1411 0 discriminator 2
 1618 0028 8384     		strh	r3, [r0, #36]	@ movhi
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1619              		.loc 1 1412 0 discriminator 2
 1620 002a C384     		strh	r3, [r0, #38]	@ movhi
1414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1621              		.loc 1 1414 0 discriminator 2
 1622 002c 0025     		movs	r5, #0
 1623 002e 0564     		str	r5, [r0, #64]
1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1624              		.loc 1 1415 0 discriminator 2
 1625 0030 2122     		movs	r2, #33
 1626 0032 80F83D20 		strb	r2, [r0, #61]
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1627              		.loc 1 1418 0 discriminator 2
 1628 0036 426B     		ldr	r2, [r0, #52]
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 118


 1629 0038 1548     		ldr	r0, .L111
 1630              	.LVL150:
 1631 003a D063     		str	r0, [r2, #60]
1421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1632              		.loc 1 1421 0 discriminator 2
 1633 003c 626B     		ldr	r2, [r4, #52]
 1634 003e 1548     		ldr	r0, .L111+4
 1635 0040 1064     		str	r0, [r2, #64]
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1636              		.loc 1 1424 0 discriminator 2
 1637 0042 626B     		ldr	r2, [r4, #52]
 1638 0044 1448     		ldr	r0, .L111+8
 1639 0046 D064     		str	r0, [r2, #76]
1427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1640              		.loc 1 1427 0 discriminator 2
 1641 0048 626B     		ldr	r2, [r4, #52]
 1642 004a 1565     		str	r5, [r2, #80]
 1643              	.LVL151:
1431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1644              		.loc 1 1431 0 discriminator 2
 1645 004c 2268     		ldr	r2, [r4]
 1646 004e 0432     		adds	r2, r2, #4
 1647 0050 606B     		ldr	r0, [r4, #52]
 1648 0052 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1649              	.LVL152:
1434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1650              		.loc 1 1434 0 discriminator 2
 1651 0056 2368     		ldr	r3, [r4]
 1652 0058 6FF04002 		mvn	r2, #64
 1653 005c 1A60     		str	r2, [r3]
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1654              		.loc 1 1437 0 discriminator 2
 1655 005e 84F83C50 		strb	r5, [r4, #60]
 1656              	.L105:
 1657              	.LBB350:
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1658              		.loc 1 1441 0 discriminator 1
 1659 0062 2268     		ldr	r2, [r4]
 1660              	.LVL153:
 1661              	.LBB351:
 1662              	.LBB352:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1663              		.loc 2 1072 0 discriminator 1
 1664 0064 02F11403 		add	r3, r2, #20
 1665              	.LVL154:
 1666              		.syntax unified
 1667              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1668 0068 53E8003F 		ldrex r3, [r3]
 1669              	@ 0 "" 2
 1670              	.LVL155:
 1671              		.thumb
 1672              		.syntax unified
 1673              	.LBE352:
 1674              	.LBE351:
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1675              		.loc 1 1441 0 discriminator 1
 1676 006c 43F08003 		orr	r3, r3, #128
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 119


 1677              	.LVL156:
 1678              	.LBB353:
 1679              	.LBB354:
 1680              		.loc 2 1123 0 discriminator 1
 1681 0070 1432     		adds	r2, r2, #20
 1682              	.LVL157:
 1683              		.syntax unified
 1684              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1685 0072 42E80031 		strex r1, r3, [r2]
 1686              	@ 0 "" 2
 1687              	.LVL158:
 1688              		.thumb
 1689              		.syntax unified
 1690              	.LBE354:
 1691              	.LBE353:
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1692              		.loc 1 1441 0 discriminator 1
 1693 0076 0029     		cmp	r1, #0
 1694 0078 F3D1     		bne	.L105
 1695              	.LBE350:
1443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1696              		.loc 1 1443 0
 1697 007a 0020     		movs	r0, #0
 1698              	.LBB355:
 1699 007c 38BD     		pop	{r3, r4, r5, pc}
 1700              	.LVL159:
 1701              	.L106:
 1702              	.LBE355:
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1703              		.loc 1 1447 0
 1704 007e 0220     		movs	r0, #2
 1705              	.LVL160:
 1706 0080 38BD     		pop	{r3, r4, r5, pc}
 1707              	.LVL161:
 1708              	.L107:
1404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1709              		.loc 1 1404 0
 1710 0082 0120     		movs	r0, #1
 1711              	.LVL162:
 1712 0084 38BD     		pop	{r3, r4, r5, pc}
 1713              	.LVL163:
 1714              	.L108:
 1715 0086 0120     		movs	r0, #1
 1716              	.LVL164:
 1717 0088 38BD     		pop	{r3, r4, r5, pc}
 1718              	.LVL165:
 1719              	.L109:
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1720              		.loc 1 1408 0
 1721 008a 0220     		movs	r0, #2
 1722              	.LVL166:
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1723              		.loc 1 1449 0
 1724 008c 38BD     		pop	{r3, r4, r5, pc}
 1725              	.L112:
 1726 008e 00BF     		.align	2
 1727              	.L111:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 120


 1728 0090 00000000 		.word	UART_DMATransmitCplt
 1729 0094 00000000 		.word	UART_DMATxHalfCplt
 1730 0098 00000000 		.word	UART_DMAError
 1731              		.cfi_endproc
 1732              	.LFE246:
 1734              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1735              		.align	2
 1736              		.global	HAL_UART_DMAPause
 1737              		.thumb
 1738              		.thumb_func
 1740              	HAL_UART_DMAPause:
 1741              	.LFB248:
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 1742              		.loc 1 1494 0
 1743              		.cfi_startproc
 1744              		@ args = 0, pretend = 0, frame = 0
 1745              		@ frame_needed = 0, uses_anonymous_args = 0
 1746              		@ link register save eliminated.
 1747              	.LVL167:
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1748              		.loc 1 1498 0
 1749 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1750 0004 012B     		cmp	r3, #1
 1751 0006 4BD0     		beq	.L121
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1752              		.loc 1 1498 0 is_stmt 0 discriminator 2
 1753 0008 0123     		movs	r3, #1
 1754 000a 80F83C30 		strb	r3, [r0, #60]
1500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1755              		.loc 1 1500 0 is_stmt 1 discriminator 2
 1756 000e 0368     		ldr	r3, [r0]
 1757 0010 5B69     		ldr	r3, [r3, #20]
 1758 0012 03F08002 		and	r2, r3, #128
 1759              	.LVL168:
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1760              		.loc 1 1501 0 discriminator 2
 1761 0016 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1762 001a DBB2     		uxtb	r3, r3
 1763 001c 212B     		cmp	r3, #33
 1764 001e 0CD1     		bne	.L115
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1765              		.loc 1 1501 0 is_stmt 0 discriminator 1
 1766 0020 5AB1     		cbz	r2, .L115
 1767              	.LVL169:
 1768              	.L116:
 1769              	.LBB356:
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1770              		.loc 1 1504 0 is_stmt 1 discriminator 1
 1771 0022 0268     		ldr	r2, [r0]
 1772              	.LVL170:
 1773              	.LBB357:
 1774              	.LBB358:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1775              		.loc 2 1072 0 discriminator 1
 1776 0024 02F11403 		add	r3, r2, #20
 1777              	.LVL171:
 1778              		.syntax unified
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 121


 1779              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1780 0028 53E8003F 		ldrex r3, [r3]
 1781              	@ 0 "" 2
 1782              	.LVL172:
 1783              		.thumb
 1784              		.syntax unified
 1785              	.LBE358:
 1786              	.LBE357:
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1787              		.loc 1 1504 0 discriminator 1
 1788 002c 23F08003 		bic	r3, r3, #128
 1789              	.LVL173:
 1790              	.LBB359:
 1791              	.LBB360:
 1792              		.loc 2 1123 0 discriminator 1
 1793 0030 1432     		adds	r2, r2, #20
 1794              	.LVL174:
 1795              		.syntax unified
 1796              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1797 0032 42E80031 		strex r1, r3, [r2]
 1798              	@ 0 "" 2
 1799              	.LVL175:
 1800              		.thumb
 1801              		.syntax unified
 1802              	.LBE360:
 1803              	.LBE359:
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1804              		.loc 1 1504 0 discriminator 1
 1805 0036 0029     		cmp	r1, #0
 1806 0038 F3D1     		bne	.L116
 1807              	.LVL176:
 1808              	.L115:
 1809              	.LBE356:
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 1810              		.loc 1 1507 0
 1811 003a 0368     		ldr	r3, [r0]
 1812 003c 5B69     		ldr	r3, [r3, #20]
 1813 003e 03F04002 		and	r2, r3, #64
 1814              	.LVL177:
1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1815              		.loc 1 1508 0
 1816 0042 90F83E30 		ldrb	r3, [r0, #62]	@ zero_extendqisi2
 1817 0046 DBB2     		uxtb	r3, r3
 1818 0048 222B     		cmp	r3, #34
 1819 004a 24D1     		bne	.L117
1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1820              		.loc 1 1508 0 is_stmt 0 discriminator 1
 1821 004c 1AB3     		cbz	r2, .L117
 1822              	.LVL178:
 1823              	.L118:
 1824              	.LBB361:
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1825              		.loc 1 1511 0 is_stmt 1 discriminator 1
 1826 004e 0268     		ldr	r2, [r0]
 1827              	.LVL179:
 1828              	.LBB362:
 1829              	.LBB363:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 122


1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1830              		.loc 2 1072 0 discriminator 1
 1831 0050 02F10C03 		add	r3, r2, #12
 1832              	.LVL180:
 1833              		.syntax unified
 1834              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1835 0054 53E8003F 		ldrex r3, [r3]
 1836              	@ 0 "" 2
 1837              	.LVL181:
 1838              		.thumb
 1839              		.syntax unified
 1840              	.LBE363:
 1841              	.LBE362:
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1842              		.loc 1 1511 0 discriminator 1
 1843 0058 23F48073 		bic	r3, r3, #256
 1844              	.LVL182:
 1845              	.LBB364:
 1846              	.LBB365:
 1847              		.loc 2 1123 0 discriminator 1
 1848 005c 0C32     		adds	r2, r2, #12
 1849              	.LVL183:
 1850              		.syntax unified
 1851              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1852 005e 42E80031 		strex r1, r3, [r2]
 1853              	@ 0 "" 2
 1854              	.LVL184:
 1855              		.thumb
 1856              		.syntax unified
 1857              	.LBE365:
 1858              	.LBE364:
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1859              		.loc 1 1511 0 discriminator 1
 1860 0062 0029     		cmp	r1, #0
 1861 0064 F3D1     		bne	.L118
 1862              	.LVL185:
 1863              	.L119:
 1864              	.LBE361:
 1865              	.LBB366:
1512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1866              		.loc 1 1512 0 discriminator 1
 1867 0066 0268     		ldr	r2, [r0]
 1868              	.LVL186:
 1869              	.LBB367:
 1870              	.LBB368:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1871              		.loc 2 1072 0 discriminator 1
 1872 0068 02F11403 		add	r3, r2, #20
 1873              	.LVL187:
 1874              		.syntax unified
 1875              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1876 006c 53E8003F 		ldrex r3, [r3]
 1877              	@ 0 "" 2
 1878              	.LVL188:
 1879              		.thumb
 1880              		.syntax unified
 1881              	.LBE368:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 123


 1882              	.LBE367:
1512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1883              		.loc 1 1512 0 discriminator 1
 1884 0070 23F00103 		bic	r3, r3, #1
 1885              	.LVL189:
 1886              	.LBB369:
 1887              	.LBB370:
 1888              		.loc 2 1123 0 discriminator 1
 1889 0074 1432     		adds	r2, r2, #20
 1890              	.LVL190:
 1891              		.syntax unified
 1892              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1893 0076 42E80031 		strex r1, r3, [r2]
 1894              	@ 0 "" 2
 1895              	.LVL191:
 1896              		.thumb
 1897              		.syntax unified
 1898              	.LBE370:
 1899              	.LBE369:
1512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1900              		.loc 1 1512 0 discriminator 1
 1901 007a 0029     		cmp	r1, #0
 1902 007c F3D1     		bne	.L119
 1903              	.LVL192:
 1904              	.L120:
 1905              	.LBE366:
 1906              	.LBB371:
1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1907              		.loc 1 1515 0 discriminator 1
 1908 007e 0268     		ldr	r2, [r0]
 1909              	.LVL193:
 1910              	.LBB372:
 1911              	.LBB373:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1912              		.loc 2 1072 0 discriminator 1
 1913 0080 02F11403 		add	r3, r2, #20
 1914              	.LVL194:
 1915              		.syntax unified
 1916              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1917 0084 53E8003F 		ldrex r3, [r3]
 1918              	@ 0 "" 2
 1919              	.LVL195:
 1920              		.thumb
 1921              		.syntax unified
 1922              	.LBE373:
 1923              	.LBE372:
1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1924              		.loc 1 1515 0 discriminator 1
 1925 0088 23F04003 		bic	r3, r3, #64
 1926              	.LVL196:
 1927              	.LBB374:
 1928              	.LBB375:
 1929              		.loc 2 1123 0 discriminator 1
 1930 008c 1432     		adds	r2, r2, #20
 1931              	.LVL197:
 1932              		.syntax unified
 1933              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 124


 1934 008e 42E80031 		strex r1, r3, [r2]
 1935              	@ 0 "" 2
 1936              	.LVL198:
 1937              		.thumb
 1938              		.syntax unified
 1939              	.LBE375:
 1940              	.LBE374:
1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1941              		.loc 1 1515 0 discriminator 1
 1942 0092 0029     		cmp	r1, #0
 1943 0094 F3D1     		bne	.L120
 1944              	.LVL199:
 1945              	.L117:
 1946              	.LBE371:
1519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1947              		.loc 1 1519 0
 1948 0096 0023     		movs	r3, #0
 1949 0098 80F83C30 		strb	r3, [r0, #60]
1521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1950              		.loc 1 1521 0
 1951 009c 1846     		mov	r0, r3
 1952              	.LVL200:
 1953 009e 7047     		bx	lr
 1954              	.LVL201:
 1955              	.L121:
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1956              		.loc 1 1498 0
 1957 00a0 0220     		movs	r0, #2
 1958              	.LVL202:
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1959              		.loc 1 1522 0
 1960 00a2 7047     		bx	lr
 1961              		.cfi_endproc
 1962              	.LFE248:
 1964              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1965              		.align	2
 1966              		.global	HAL_UART_DMAResume
 1967              		.thumb
 1968              		.thumb_func
 1970              	HAL_UART_DMAResume:
 1971              	.LFB249:
1531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
 1972              		.loc 1 1531 0
 1973              		.cfi_startproc
 1974              		@ args = 0, pretend = 0, frame = 8
 1975              		@ frame_needed = 0, uses_anonymous_args = 0
 1976              		@ link register save eliminated.
 1977              	.LVL203:
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1978              		.loc 1 1533 0
 1979 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1980 0004 012B     		cmp	r3, #1
 1981 0006 4CD0     		beq	.L131
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1982              		.loc 1 1533 0 is_stmt 0 discriminator 2
 1983 0008 0123     		movs	r3, #1
 1984 000a 80F83C30 		strb	r3, [r0, #60]
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 125


1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1985              		.loc 1 1535 0 is_stmt 1 discriminator 2
 1986 000e 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 1987 0012 DBB2     		uxtb	r3, r3
 1988 0014 212B     		cmp	r3, #33
 1989 0016 0BD1     		bne	.L124
 1990              	.L125:
 1991              	.LBB376:
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1992              		.loc 1 1538 0 discriminator 1
 1993 0018 0268     		ldr	r2, [r0]
 1994              	.LVL204:
 1995              	.LBB377:
 1996              	.LBB378:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1997              		.loc 2 1072 0 discriminator 1
 1998 001a 02F11403 		add	r3, r2, #20
 1999              	.LVL205:
 2000              		.syntax unified
 2001              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2002 001e 53E8003F 		ldrex r3, [r3]
 2003              	@ 0 "" 2
 2004              	.LVL206:
 2005              		.thumb
 2006              		.syntax unified
 2007              	.LBE378:
 2008              	.LBE377:
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2009              		.loc 1 1538 0 discriminator 1
 2010 0022 43F08003 		orr	r3, r3, #128
 2011              	.LVL207:
 2012              	.LBB379:
 2013              	.LBB380:
 2014              		.loc 2 1123 0 discriminator 1
 2015 0026 1432     		adds	r2, r2, #20
 2016              	.LVL208:
 2017              		.syntax unified
 2018              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2019 0028 42E80031 		strex r1, r3, [r2]
 2020              	@ 0 "" 2
 2021              	.LVL209:
 2022              		.thumb
 2023              		.syntax unified
 2024              	.LBE380:
 2025              	.LBE379:
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2026              		.loc 1 1538 0 discriminator 1
 2027 002c 0029     		cmp	r1, #0
 2028 002e F3D1     		bne	.L125
 2029              	.LVL210:
 2030              	.L124:
 2031              	.LBE376:
1541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2032              		.loc 1 1541 0
 2033 0030 90F83E30 		ldrb	r3, [r0, #62]	@ zero_extendqisi2
 2034 0034 DBB2     		uxtb	r3, r3
 2035 0036 222B     		cmp	r3, #34
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 126


 2036 0038 37D1     		bne	.L133
1531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
 2037              		.loc 1 1531 0
 2038 003a 82B0     		sub	sp, sp, #8
 2039              	.LCFI19:
 2040              		.cfi_def_cfa_offset 8
 2041              	.LBB381:
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2042              		.loc 1 1544 0
 2043 003c 0023     		movs	r3, #0
 2044 003e 0193     		str	r3, [sp, #4]
 2045 0040 0368     		ldr	r3, [r0]
 2046 0042 1A68     		ldr	r2, [r3]
 2047 0044 0192     		str	r2, [sp, #4]
 2048 0046 5B68     		ldr	r3, [r3, #4]
 2049 0048 0193     		str	r3, [sp, #4]
 2050 004a 019B     		ldr	r3, [sp, #4]
 2051              	.LBE381:
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2052              		.loc 1 1547 0
 2053 004c 0369     		ldr	r3, [r0, #16]
 2054 004e 5BB1     		cbz	r3, .L129
 2055              	.L128:
 2056              	.LBB382:
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2057              		.loc 1 1549 0 discriminator 1
 2058 0050 0268     		ldr	r2, [r0]
 2059              	.LVL211:
 2060              	.LBB383:
 2061              	.LBB384:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2062              		.loc 2 1072 0 discriminator 1
 2063 0052 02F10C03 		add	r3, r2, #12
 2064              	.LVL212:
 2065              		.syntax unified
 2066              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2067 0056 53E8003F 		ldrex r3, [r3]
 2068              	@ 0 "" 2
 2069              	.LVL213:
 2070              		.thumb
 2071              		.syntax unified
 2072              	.LBE384:
 2073              	.LBE383:
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2074              		.loc 1 1549 0 discriminator 1
 2075 005a 43F48073 		orr	r3, r3, #256
 2076              	.LVL214:
 2077              	.LBB385:
 2078              	.LBB386:
 2079              		.loc 2 1123 0 discriminator 1
 2080 005e 0C32     		adds	r2, r2, #12
 2081              	.LVL215:
 2082              		.syntax unified
 2083              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2084 0060 42E80031 		strex r1, r3, [r2]
 2085              	@ 0 "" 2
 2086              	.LVL216:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 127


 2087              		.thumb
 2088              		.syntax unified
 2089              	.LBE386:
 2090              	.LBE385:
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2091              		.loc 1 1549 0 discriminator 1
 2092 0064 0029     		cmp	r1, #0
 2093 0066 F3D1     		bne	.L128
 2094              	.LVL217:
 2095              	.L129:
 2096              	.LBE382:
 2097              	.LBB387:
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2098              		.loc 1 1551 0 discriminator 1
 2099 0068 0268     		ldr	r2, [r0]
 2100              	.LVL218:
 2101              	.LBB388:
 2102              	.LBB389:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2103              		.loc 2 1072 0 discriminator 1
 2104 006a 02F11403 		add	r3, r2, #20
 2105              	.LVL219:
 2106              		.syntax unified
 2107              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2108 006e 53E8003F 		ldrex r3, [r3]
 2109              	@ 0 "" 2
 2110              	.LVL220:
 2111              		.thumb
 2112              		.syntax unified
 2113              	.LBE389:
 2114              	.LBE388:
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2115              		.loc 1 1551 0 discriminator 1
 2116 0072 43F00103 		orr	r3, r3, #1
 2117              	.LVL221:
 2118              	.LBB390:
 2119              	.LBB391:
 2120              		.loc 2 1123 0 discriminator 1
 2121 0076 1432     		adds	r2, r2, #20
 2122              	.LVL222:
 2123              		.syntax unified
 2124              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2125 0078 42E80031 		strex r1, r3, [r2]
 2126              	@ 0 "" 2
 2127              	.LVL223:
 2128              		.thumb
 2129              		.syntax unified
 2130              	.LBE391:
 2131              	.LBE390:
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2132              		.loc 1 1551 0 discriminator 1
 2133 007c 0029     		cmp	r1, #0
 2134 007e F3D1     		bne	.L129
 2135              	.LVL224:
 2136              	.L130:
 2137              	.LBE387:
 2138              	.LBB392:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 128


1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2139              		.loc 1 1554 0 discriminator 1
 2140 0080 0268     		ldr	r2, [r0]
 2141              	.LVL225:
 2142              	.LBB393:
 2143              	.LBB394:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2144              		.loc 2 1072 0 discriminator 1
 2145 0082 02F11403 		add	r3, r2, #20
 2146              	.LVL226:
 2147              		.syntax unified
 2148              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2149 0086 53E8003F 		ldrex r3, [r3]
 2150              	@ 0 "" 2
 2151              	.LVL227:
 2152              		.thumb
 2153              		.syntax unified
 2154              	.LBE394:
 2155              	.LBE393:
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2156              		.loc 1 1554 0 discriminator 1
 2157 008a 43F04003 		orr	r3, r3, #64
 2158              	.LVL228:
 2159              	.LBB395:
 2160              	.LBB396:
 2161              		.loc 2 1123 0 discriminator 1
 2162 008e 1432     		adds	r2, r2, #20
 2163              	.LVL229:
 2164              		.syntax unified
 2165              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2166 0090 42E80031 		strex r1, r3, [r2]
 2167              	@ 0 "" 2
 2168              	.LVL230:
 2169              		.thumb
 2170              		.syntax unified
 2171              	.LBE396:
 2172              	.LBE395:
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2173              		.loc 1 1554 0 discriminator 1
 2174 0094 0029     		cmp	r1, #0
 2175 0096 F3D1     		bne	.L130
 2176              	.LBE392:
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2177              		.loc 1 1558 0
 2178 0098 0023     		movs	r3, #0
 2179              	.LVL231:
 2180 009a 80F83C30 		strb	r3, [r0, #60]
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2181              		.loc 1 1560 0
 2182 009e 1846     		mov	r0, r3
 2183              	.LVL232:
 2184 00a0 01E0     		b	.L123
 2185              	.LVL233:
 2186              	.L131:
 2187              	.LCFI20:
 2188              		.cfi_def_cfa_offset 0
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 129


 2189              		.loc 1 1533 0
 2190 00a2 0220     		movs	r0, #2
 2191              	.LVL234:
 2192 00a4 7047     		bx	lr
 2193              	.L123:
 2194              	.LCFI21:
 2195              		.cfi_def_cfa_offset 8
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2196              		.loc 1 1561 0
 2197 00a6 02B0     		add	sp, sp, #8
 2198              	.LCFI22:
 2199              		.cfi_def_cfa_offset 0
 2200              		@ sp needed
 2201 00a8 7047     		bx	lr
 2202              	.LVL235:
 2203              	.L133:
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2204              		.loc 1 1558 0
 2205 00aa 0023     		movs	r3, #0
 2206 00ac 80F83C30 		strb	r3, [r0, #60]
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2207              		.loc 1 1560 0
 2208 00b0 1846     		mov	r0, r3
 2209              	.LVL236:
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2210              		.loc 1 1561 0
 2211 00b2 7047     		bx	lr
 2212              		.cfi_endproc
 2213              	.LFE249:
 2215              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2216              		.align	2
 2217              		.global	HAL_UART_DMAStop
 2218              		.thumb
 2219              		.thumb_func
 2221              	HAL_UART_DMAStop:
 2222              	.LFB250:
1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2223              		.loc 1 1570 0
 2224              		.cfi_startproc
 2225              		@ args = 0, pretend = 0, frame = 0
 2226              		@ frame_needed = 0, uses_anonymous_args = 0
 2227              	.LVL237:
 2228 0000 10B5     		push	{r4, lr}
 2229              	.LCFI23:
 2230              		.cfi_def_cfa_offset 8
 2231              		.cfi_offset 4, -8
 2232              		.cfi_offset 14, -4
 2233 0002 0446     		mov	r4, r0
 2234              	.LVL238:
1579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2235              		.loc 1 1579 0
 2236 0004 0368     		ldr	r3, [r0]
 2237 0006 5B69     		ldr	r3, [r3, #20]
 2238 0008 03F08002 		and	r2, r3, #128
 2239              	.LVL239:
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2240              		.loc 1 1580 0
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 130


 2241 000c 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 2242 0010 DBB2     		uxtb	r3, r3
 2243 0012 212B     		cmp	r3, #33
 2244 0014 13D1     		bne	.L136
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2245              		.loc 1 1580 0 is_stmt 0 discriminator 1
 2246 0016 92B1     		cbz	r2, .L136
 2247              	.LVL240:
 2248              	.L137:
 2249              	.LBB397:
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2250              		.loc 1 1582 0 is_stmt 1 discriminator 1
 2251 0018 2268     		ldr	r2, [r4]
 2252              	.LVL241:
 2253              	.LBB398:
 2254              	.LBB399:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2255              		.loc 2 1072 0 discriminator 1
 2256 001a 02F11403 		add	r3, r2, #20
 2257              	.LVL242:
 2258              		.syntax unified
 2259              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2260 001e 53E8003F 		ldrex r3, [r3]
 2261              	@ 0 "" 2
 2262              	.LVL243:
 2263              		.thumb
 2264              		.syntax unified
 2265              	.LBE399:
 2266              	.LBE398:
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2267              		.loc 1 1582 0 discriminator 1
 2268 0022 23F08003 		bic	r3, r3, #128
 2269              	.LVL244:
 2270              	.LBB400:
 2271              	.LBB401:
 2272              		.loc 2 1123 0 discriminator 1
 2273 0026 1432     		adds	r2, r2, #20
 2274              	.LVL245:
 2275              		.syntax unified
 2276              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2277 0028 42E80031 		strex r1, r3, [r2]
 2278              	@ 0 "" 2
 2279              	.LVL246:
 2280              		.thumb
 2281              		.syntax unified
 2282              	.LBE401:
 2283              	.LBE400:
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2284              		.loc 1 1582 0 discriminator 1
 2285 002c 0029     		cmp	r1, #0
 2286 002e F3D1     		bne	.L137
 2287              	.LBE397:
1585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2288              		.loc 1 1585 0
 2289 0030 606B     		ldr	r0, [r4, #52]
 2290              	.LVL247:
 2291 0032 08B1     		cbz	r0, .L138
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 131


1587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2292              		.loc 1 1587 0
 2293 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 2294              	.LVL248:
 2295              	.L138:
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2296              		.loc 1 1589 0
 2297 0038 2046     		mov	r0, r4
 2298 003a FFF7FEFF 		bl	UART_EndTxTransfer
 2299              	.LVL249:
 2300              	.L136:
1593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2301              		.loc 1 1593 0
 2302 003e 2368     		ldr	r3, [r4]
 2303 0040 5B69     		ldr	r3, [r3, #20]
 2304 0042 03F04002 		and	r2, r3, #64
 2305              	.LVL250:
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2306              		.loc 1 1594 0
 2307 0046 94F83E30 		ldrb	r3, [r4, #62]	@ zero_extendqisi2
 2308 004a DBB2     		uxtb	r3, r3
 2309 004c 222B     		cmp	r3, #34
 2310 004e 13D1     		bne	.L139
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2311              		.loc 1 1594 0 is_stmt 0 discriminator 1
 2312 0050 92B1     		cbz	r2, .L139
 2313              	.LVL251:
 2314              	.L140:
 2315              	.LBB402:
1596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2316              		.loc 1 1596 0 is_stmt 1 discriminator 1
 2317 0052 2268     		ldr	r2, [r4]
 2318              	.LVL252:
 2319              	.LBB403:
 2320              	.LBB404:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2321              		.loc 2 1072 0 discriminator 1
 2322 0054 02F11403 		add	r3, r2, #20
 2323              	.LVL253:
 2324              		.syntax unified
 2325              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2326 0058 53E8003F 		ldrex r3, [r3]
 2327              	@ 0 "" 2
 2328              	.LVL254:
 2329              		.thumb
 2330              		.syntax unified
 2331              	.LBE404:
 2332              	.LBE403:
1596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2333              		.loc 1 1596 0 discriminator 1
 2334 005c 23F04003 		bic	r3, r3, #64
 2335              	.LVL255:
 2336              	.LBB405:
 2337              	.LBB406:
 2338              		.loc 2 1123 0 discriminator 1
 2339 0060 1432     		adds	r2, r2, #20
 2340              	.LVL256:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 132


 2341              		.syntax unified
 2342              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2343 0062 42E80031 		strex r1, r3, [r2]
 2344              	@ 0 "" 2
 2345              	.LVL257:
 2346              		.thumb
 2347              		.syntax unified
 2348              	.LBE406:
 2349              	.LBE405:
1596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2350              		.loc 1 1596 0 discriminator 1
 2351 0066 0029     		cmp	r1, #0
 2352 0068 F3D1     		bne	.L140
 2353              	.LBE402:
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2354              		.loc 1 1599 0
 2355 006a A06B     		ldr	r0, [r4, #56]
 2356 006c 08B1     		cbz	r0, .L141
1601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2357              		.loc 1 1601 0
 2358 006e FFF7FEFF 		bl	HAL_DMA_Abort
 2359              	.LVL258:
 2360              	.L141:
1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2361              		.loc 1 1603 0
 2362 0072 2046     		mov	r0, r4
 2363 0074 FFF7FEFF 		bl	UART_EndRxTransfer
 2364              	.LVL259:
 2365              	.L139:
1607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2366              		.loc 1 1607 0
 2367 0078 0020     		movs	r0, #0
 2368 007a 10BD     		pop	{r4, pc}
 2369              		.cfi_endproc
 2370              	.LFE250:
 2372              		.section	.text.HAL_UARTEx_ReceiveToIdle,"ax",%progbits
 2373              		.align	2
 2374              		.global	HAL_UARTEx_ReceiveToIdle
 2375              		.thumb
 2376              		.thumb_func
 2378              	HAL_UARTEx_ReceiveToIdle:
 2379              	.LFB251:
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint8_t  *pdata8bits;
 2380              		.loc 1 1626 0
 2381              		.cfi_startproc
 2382              		@ args = 4, pretend = 0, frame = 8
 2383              		@ frame_needed = 0, uses_anonymous_args = 0
 2384              	.LVL260:
 2385 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 2386              	.LCFI24:
 2387              		.cfi_def_cfa_offset 28
 2388              		.cfi_offset 4, -28
 2389              		.cfi_offset 5, -24
 2390              		.cfi_offset 6, -20
 2391              		.cfi_offset 7, -16
 2392              		.cfi_offset 8, -12
 2393              		.cfi_offset 9, -8
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 133


 2394              		.cfi_offset 14, -4
 2395 0004 83B0     		sub	sp, sp, #12
 2396              	.LCFI25:
 2397              		.cfi_def_cfa_offset 40
 2398 0006 1F46     		mov	r7, r3
 2399 0008 0A9D     		ldr	r5, [sp, #40]
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2400              		.loc 1 1632 0
 2401 000a 90F83E30 		ldrb	r3, [r0, #62]	@ zero_extendqisi2
 2402              	.LVL261:
 2403 000e DBB2     		uxtb	r3, r3
 2404 0010 202B     		cmp	r3, #32
 2405 0012 7FD1     		bne	.L157
 2406 0014 0446     		mov	r4, r0
 2407 0016 0E46     		mov	r6, r1
 2408 0018 9146     		mov	r9, r2
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2409              		.loc 1 1634 0
 2410 001a 0029     		cmp	r1, #0
 2411 001c 7CD0     		beq	.L158
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2412              		.loc 1 1634 0 is_stmt 0 discriminator 1
 2413 001e 002A     		cmp	r2, #0
 2414 0020 7CD0     		beq	.L159
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2415              		.loc 1 1639 0 is_stmt 1
 2416 0022 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 2417 0026 012B     		cmp	r3, #1
 2418 0028 7AD0     		beq	.L160
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2419              		.loc 1 1639 0 is_stmt 0 discriminator 2
 2420 002a 0123     		movs	r3, #1
 2421 002c 80F83C30 		strb	r3, [r0, #60]
1641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 2422              		.loc 1 1641 0 is_stmt 1 discriminator 2
 2423 0030 0022     		movs	r2, #0
 2424              	.LVL262:
 2425 0032 0264     		str	r2, [r0, #64]
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 2426              		.loc 1 1642 0 discriminator 2
 2427 0034 2222     		movs	r2, #34
 2428 0036 80F83E20 		strb	r2, [r0, #62]
1643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2429              		.loc 1 1643 0 discriminator 2
 2430 003a 0363     		str	r3, [r0, #48]
1646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2431              		.loc 1 1646 0 discriminator 2
 2432 003c FFF7FEFF 		bl	HAL_GetTick
 2433              	.LVL263:
 2434 0040 8046     		mov	r8, r0
 2435              	.LVL264:
1648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 2436              		.loc 1 1648 0 discriminator 2
 2437 0042 A4F82C90 		strh	r9, [r4, #44]	@ movhi
1649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2438              		.loc 1 1649 0 discriminator 2
 2439 0046 A4F82E90 		strh	r9, [r4, #46]	@ movhi
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 134


1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2440              		.loc 1 1652 0 discriminator 2
 2441 004a A368     		ldr	r3, [r4, #8]
 2442 004c B3F5805F 		cmp	r3, #4096
 2443 0050 04D1     		bne	.L161
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2444              		.loc 1 1652 0 is_stmt 0 discriminator 1
 2445 0052 2369     		ldr	r3, [r4, #16]
 2446 0054 2BB1     		cbz	r3, .L162
1660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2447              		.loc 1 1660 0 is_stmt 1
 2448 0056 4FF00009 		mov	r9, #0
 2449 005a 04E0     		b	.L145
 2450              	.L161:
 2451 005c 4FF00009 		mov	r9, #0
 2452 0060 01E0     		b	.L145
 2453              	.L162:
1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2454              		.loc 1 1655 0
 2455 0062 B146     		mov	r9, r6
1654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 2456              		.loc 1 1654 0
 2457 0064 0026     		movs	r6, #0
 2458              	.LVL265:
 2459              	.L145:
1663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2460              		.loc 1 1663 0
 2461 0066 0023     		movs	r3, #0
 2462 0068 84F83C30 		strb	r3, [r4, #60]
1666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2463              		.loc 1 1666 0
 2464 006c 3B80     		strh	r3, [r7]	@ movhi
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2465              		.loc 1 1669 0
 2466 006e 43E0     		b	.L146
 2467              	.LVL266:
 2468              	.L156:
1672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2469              		.loc 1 1672 0
 2470 0070 2368     		ldr	r3, [r4]
 2471 0072 1A68     		ldr	r2, [r3]
 2472 0074 12F0100F 		tst	r2, #16
 2473 0078 0DD0     		beq	.L147
 2474              	.LBB407:
1675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2475              		.loc 1 1675 0
 2476 007a 0022     		movs	r2, #0
 2477 007c 0192     		str	r2, [sp, #4]
 2478 007e 1A68     		ldr	r2, [r3]
 2479 0080 0192     		str	r2, [sp, #4]
 2480 0082 5A68     		ldr	r2, [r3, #4]
 2481 0084 0192     		str	r2, [sp, #4]
 2482 0086 019A     		ldr	r2, [sp, #4]
 2483              	.LBE407:
1679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 2484              		.loc 1 1679 0
 2485 0088 3A88     		ldrh	r2, [r7]
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 135


 2486 008a 22B1     		cbz	r2, .L147
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2487              		.loc 1 1681 0
 2488 008c 2023     		movs	r3, #32
 2489 008e 84F83E30 		strb	r3, [r4, #62]
1683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 2490              		.loc 1 1683 0
 2491 0092 0020     		movs	r0, #0
 2492 0094 45E0     		b	.L144
 2493              	.L147:
1688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2494              		.loc 1 1688 0
 2495 0096 1A68     		ldr	r2, [r3]
 2496 0098 12F0200F 		tst	r2, #32
 2497 009c 1DD0     		beq	.L148
1690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 2498              		.loc 1 1690 0
 2499 009e 2EB9     		cbnz	r6, .L149
1692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pdata16bits++;
 2500              		.loc 1 1692 0
 2501 00a0 5B68     		ldr	r3, [r3, #4]
 2502 00a2 C3F30803 		ubfx	r3, r3, #0, #9
 2503 00a6 29F8023B 		strh	r3, [r9], #2	@ movhi
 2504              	.LVL267:
 2505 00aa 0EE0     		b	.L150
 2506              	.L149:
1697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
 2507              		.loc 1 1697 0
 2508 00ac A268     		ldr	r2, [r4, #8]
 2509 00ae B2F5805F 		cmp	r2, #4096
 2510 00b2 02D0     		beq	.L151
1697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
 2511              		.loc 1 1697 0 is_stmt 0 discriminator 1
 2512 00b4 22B9     		cbnz	r2, .L152
1697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
 2513              		.loc 1 1697 0 discriminator 2
 2514 00b6 2269     		ldr	r2, [r4, #16]
 2515 00b8 12B9     		cbnz	r2, .L152
 2516              	.L151:
1699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
 2517              		.loc 1 1699 0 is_stmt 1
 2518 00ba 5B68     		ldr	r3, [r3, #4]
 2519 00bc 3370     		strb	r3, [r6]
 2520 00be 03E0     		b	.L153
 2521              	.L152:
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
 2522              		.loc 1 1703 0
 2523 00c0 5B68     		ldr	r3, [r3, #4]
 2524 00c2 03F07F03 		and	r3, r3, #127
 2525 00c6 3370     		strb	r3, [r6]
 2526              	.L153:
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 2527              		.loc 1 1706 0
 2528 00c8 0136     		adds	r6, r6, #1
 2529              	.LVL268:
 2530              	.L150:
1709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxXferCount--;
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 136


 2531              		.loc 1 1709 0
 2532 00ca 3B88     		ldrh	r3, [r7]
 2533 00cc 0133     		adds	r3, r3, #1
 2534 00ce 3B80     		strh	r3, [r7]	@ movhi
1710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 2535              		.loc 1 1710 0
 2536 00d0 E38D     		ldrh	r3, [r4, #46]
 2537 00d2 9BB2     		uxth	r3, r3
 2538 00d4 013B     		subs	r3, r3, #1
 2539 00d6 9BB2     		uxth	r3, r3
 2540 00d8 E385     		strh	r3, [r4, #46]	@ movhi
 2541              	.L148:
1714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2542              		.loc 1 1714 0
 2543 00da B5F1FF3F 		cmp	r5, #-1
 2544 00de 0BD0     		beq	.L146
1716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 2545              		.loc 1 1716 0
 2546 00e0 FFF7FEFF 		bl	HAL_GetTick
 2547              	.LVL269:
 2548 00e4 C8EB0000 		rsb	r0, r8, r0
 2549 00e8 8542     		cmp	r5, r0
 2550 00ea 00D3     		bcc	.L155
1716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 2551              		.loc 1 1716 0 is_stmt 0 discriminator 1
 2552 00ec 25B9     		cbnz	r5, .L146
 2553              	.L155:
1718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2554              		.loc 1 1718 0 is_stmt 1
 2555 00ee 2023     		movs	r3, #32
 2556 00f0 84F83E30 		strb	r3, [r4, #62]
1720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 2557              		.loc 1 1720 0
 2558 00f4 0320     		movs	r0, #3
 2559 00f6 14E0     		b	.L144
 2560              	.L146:
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2561              		.loc 1 1669 0
 2562 00f8 E38D     		ldrh	r3, [r4, #46]
 2563 00fa 9BB2     		uxth	r3, r3
 2564 00fc 002B     		cmp	r3, #0
 2565 00fe B7D1     		bne	.L156
1726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 2566              		.loc 1 1726 0
 2567 0100 A38D     		ldrh	r3, [r4, #44]
 2568 0102 E28D     		ldrh	r2, [r4, #46]
 2569 0104 92B2     		uxth	r2, r2
 2570 0106 9B1A     		subs	r3, r3, r2
 2571 0108 3B80     		strh	r3, [r7]	@ movhi
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2572              		.loc 1 1728 0
 2573 010a 2023     		movs	r3, #32
 2574 010c 84F83E30 		strb	r3, [r4, #62]
1730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2575              		.loc 1 1730 0
 2576 0110 0020     		movs	r0, #0
 2577 0112 06E0     		b	.L144
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 137


 2578              	.LVL270:
 2579              	.L157:
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2580              		.loc 1 1734 0
 2581 0114 0220     		movs	r0, #2
 2582              	.LVL271:
 2583 0116 04E0     		b	.L144
 2584              	.LVL272:
 2585              	.L158:
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2586              		.loc 1 1636 0
 2587 0118 0120     		movs	r0, #1
 2588              	.LVL273:
 2589 011a 02E0     		b	.L144
 2590              	.LVL274:
 2591              	.L159:
 2592 011c 0120     		movs	r0, #1
 2593              	.LVL275:
 2594 011e 00E0     		b	.L144
 2595              	.LVL276:
 2596              	.L160:
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2597              		.loc 1 1639 0
 2598 0120 0220     		movs	r0, #2
 2599              	.LVL277:
 2600              	.L144:
1736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2601              		.loc 1 1736 0
 2602 0122 03B0     		add	sp, sp, #12
 2603              	.LCFI26:
 2604              		.cfi_def_cfa_offset 28
 2605              		@ sp needed
 2606 0124 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 2607              		.cfi_endproc
 2608              	.LFE251:
 2610              		.section	.text.HAL_UART_Abort,"ax",%progbits
 2611              		.align	2
 2612              		.global	HAL_UART_Abort
 2613              		.thumb
 2614              		.thumb_func
 2616              	HAL_UART_Abort:
 2617              	.LFB254:
1870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2618              		.loc 1 1870 0
 2619              		.cfi_startproc
 2620              		@ args = 0, pretend = 0, frame = 0
 2621              		@ frame_needed = 0, uses_anonymous_args = 0
 2622              	.LVL278:
 2623 0000 10B5     		push	{r4, lr}
 2624              	.LCFI27:
 2625              		.cfi_def_cfa_offset 8
 2626              		.cfi_offset 4, -8
 2627              		.cfi_offset 14, -4
 2628 0002 0446     		mov	r4, r0
 2629              	.L165:
 2630              	.LBB408:
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 138


 2631              		.loc 1 1872 0 discriminator 1
 2632 0004 2268     		ldr	r2, [r4]
 2633              	.LVL279:
 2634              	.LBB409:
 2635              	.LBB410:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2636              		.loc 2 1072 0 discriminator 1
 2637 0006 02F10C03 		add	r3, r2, #12
 2638              	.LVL280:
 2639              		.syntax unified
 2640              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2641 000a 53E8003F 		ldrex r3, [r3]
 2642              	@ 0 "" 2
 2643              	.LVL281:
 2644              		.thumb
 2645              		.syntax unified
 2646              	.LBE410:
 2647              	.LBE409:
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2648              		.loc 1 1872 0 discriminator 1
 2649 000e 23F4F073 		bic	r3, r3, #480
 2650              	.LVL282:
 2651              	.LBB411:
 2652              	.LBB412:
 2653              		.loc 2 1123 0 discriminator 1
 2654 0012 0C32     		adds	r2, r2, #12
 2655              	.LVL283:
 2656              		.syntax unified
 2657              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2658 0014 42E80031 		strex r1, r3, [r2]
 2659              	@ 0 "" 2
 2660              	.LVL284:
 2661              		.thumb
 2662              		.syntax unified
 2663              	.LBE412:
 2664              	.LBE411:
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2665              		.loc 1 1872 0 discriminator 1
 2666 0018 0029     		cmp	r1, #0
 2667 001a F3D1     		bne	.L165
 2668              	.LVL285:
 2669              	.L166:
 2670              	.LBE408:
 2671              	.LBB413:
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2672              		.loc 1 1873 0 discriminator 1
 2673 001c 2268     		ldr	r2, [r4]
 2674              	.LVL286:
 2675              	.LBB414:
 2676              	.LBB415:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2677              		.loc 2 1072 0 discriminator 1
 2678 001e 02F11403 		add	r3, r2, #20
 2679              	.LVL287:
 2680              		.syntax unified
 2681              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2682 0022 53E8003F 		ldrex r3, [r3]
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 139


 2683              	@ 0 "" 2
 2684              	.LVL288:
 2685              		.thumb
 2686              		.syntax unified
 2687              	.LBE415:
 2688              	.LBE414:
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2689              		.loc 1 1873 0 discriminator 1
 2690 0026 23F00103 		bic	r3, r3, #1
 2691              	.LVL289:
 2692              	.LBB416:
 2693              	.LBB417:
 2694              		.loc 2 1123 0 discriminator 1
 2695 002a 1432     		adds	r2, r2, #20
 2696              	.LVL290:
 2697              		.syntax unified
 2698              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2699 002c 42E80031 		strex r1, r3, [r2]
 2700              	@ 0 "" 2
 2701              	.LVL291:
 2702              		.thumb
 2703              		.syntax unified
 2704              	.LBE417:
 2705              	.LBE416:
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2706              		.loc 1 1873 0 discriminator 1
 2707 0030 0029     		cmp	r1, #0
 2708 0032 F3D1     		bne	.L166
 2709              	.LBE413:
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2710              		.loc 1 1876 0
 2711 0034 236B     		ldr	r3, [r4, #48]
 2712              	.LVL292:
 2713 0036 012B     		cmp	r3, #1
 2714 0038 0BD1     		bne	.L167
 2715              	.L168:
 2716              	.LBB418:
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2717              		.loc 1 1878 0 discriminator 1
 2718 003a 2268     		ldr	r2, [r4]
 2719              	.LVL293:
 2720              	.LBB419:
 2721              	.LBB420:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2722              		.loc 2 1072 0 discriminator 1
 2723 003c 02F10C03 		add	r3, r2, #12
 2724              	.LVL294:
 2725              		.syntax unified
 2726              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2727 0040 53E8003F 		ldrex r3, [r3]
 2728              	@ 0 "" 2
 2729              	.LVL295:
 2730              		.thumb
 2731              		.syntax unified
 2732              	.LBE420:
 2733              	.LBE419:
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 140


 2734              		.loc 1 1878 0 discriminator 1
 2735 0044 23F01003 		bic	r3, r3, #16
 2736              	.LVL296:
 2737              	.LBB421:
 2738              	.LBB422:
 2739              		.loc 2 1123 0 discriminator 1
 2740 0048 0C32     		adds	r2, r2, #12
 2741              	.LVL297:
 2742              		.syntax unified
 2743              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2744 004a 42E80031 		strex r1, r3, [r2]
 2745              	@ 0 "" 2
 2746              	.LVL298:
 2747              		.thumb
 2748              		.syntax unified
 2749              	.LBE422:
 2750              	.LBE421:
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2751              		.loc 1 1878 0 discriminator 1
 2752 004e 0029     		cmp	r1, #0
 2753 0050 F3D1     		bne	.L168
 2754              	.LVL299:
 2755              	.L167:
 2756              	.LBE418:
1882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2757              		.loc 1 1882 0
 2758 0052 2368     		ldr	r3, [r4]
 2759 0054 5B69     		ldr	r3, [r3, #20]
 2760 0056 13F0800F 		tst	r3, #128
 2761 005a 1CD0     		beq	.L169
 2762              	.L170:
 2763              	.LBB423:
1884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2764              		.loc 1 1884 0 discriminator 1
 2765 005c 2268     		ldr	r2, [r4]
 2766              	.LVL300:
 2767              	.LBB424:
 2768              	.LBB425:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2769              		.loc 2 1072 0 discriminator 1
 2770 005e 02F11403 		add	r3, r2, #20
 2771              	.LVL301:
 2772              		.syntax unified
 2773              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2774 0062 53E8003F 		ldrex r3, [r3]
 2775              	@ 0 "" 2
 2776              	.LVL302:
 2777              		.thumb
 2778              		.syntax unified
 2779              	.LBE425:
 2780              	.LBE424:
1884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2781              		.loc 1 1884 0 discriminator 1
 2782 0066 23F08003 		bic	r3, r3, #128
 2783              	.LVL303:
 2784              	.LBB426:
 2785              	.LBB427:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 141


 2786              		.loc 2 1123 0 discriminator 1
 2787 006a 1432     		adds	r2, r2, #20
 2788              	.LVL304:
 2789              		.syntax unified
 2790              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2791 006c 42E80031 		strex r1, r3, [r2]
 2792              	@ 0 "" 2
 2793              	.LVL305:
 2794              		.thumb
 2795              		.syntax unified
 2796              	.LBE427:
 2797              	.LBE426:
1884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2798              		.loc 1 1884 0 discriminator 1
 2799 0070 0029     		cmp	r1, #0
 2800 0072 F3D1     		bne	.L170
 2801              	.LBE423:
1887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2802              		.loc 1 1887 0
 2803 0074 636B     		ldr	r3, [r4, #52]
 2804              	.LVL306:
 2805 0076 73B1     		cbz	r3, .L169
1891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2806              		.loc 1 1891 0
 2807 0078 0022     		movs	r2, #0
 2808 007a 1A65     		str	r2, [r3, #80]
1893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2809              		.loc 1 1893 0
 2810 007c 606B     		ldr	r0, [r4, #52]
 2811              	.LVL307:
 2812 007e FFF7FEFF 		bl	HAL_DMA_Abort
 2813              	.LVL308:
 2814 0082 40B1     		cbz	r0, .L169
1895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 2815              		.loc 1 1895 0
 2816 0084 606B     		ldr	r0, [r4, #52]
 2817 0086 FFF7FEFF 		bl	HAL_DMA_GetError
 2818              	.LVL309:
 2819 008a 2028     		cmp	r0, #32
 2820 008c 03D1     		bne	.L169
1898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2821              		.loc 1 1898 0
 2822 008e 1023     		movs	r3, #16
 2823 0090 2364     		str	r3, [r4, #64]
1900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 2824              		.loc 1 1900 0
 2825 0092 0320     		movs	r0, #3
 2826 0094 10BD     		pop	{r4, pc}
 2827              	.LVL310:
 2828              	.L169:
1907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2829              		.loc 1 1907 0
 2830 0096 2368     		ldr	r3, [r4]
 2831 0098 5B69     		ldr	r3, [r3, #20]
 2832 009a 13F0400F 		tst	r3, #64
 2833 009e 1CD0     		beq	.L172
 2834              	.L173:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 142


 2835              	.LBB428:
1909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2836              		.loc 1 1909 0 discriminator 1
 2837 00a0 2268     		ldr	r2, [r4]
 2838              	.LVL311:
 2839              	.LBB429:
 2840              	.LBB430:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2841              		.loc 2 1072 0 discriminator 1
 2842 00a2 02F11403 		add	r3, r2, #20
 2843              	.LVL312:
 2844              		.syntax unified
 2845              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2846 00a6 53E8003F 		ldrex r3, [r3]
 2847              	@ 0 "" 2
 2848              	.LVL313:
 2849              		.thumb
 2850              		.syntax unified
 2851              	.LBE430:
 2852              	.LBE429:
1909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2853              		.loc 1 1909 0 discriminator 1
 2854 00aa 23F04003 		bic	r3, r3, #64
 2855              	.LVL314:
 2856              	.LBB431:
 2857              	.LBB432:
 2858              		.loc 2 1123 0 discriminator 1
 2859 00ae 1432     		adds	r2, r2, #20
 2860              	.LVL315:
 2861              		.syntax unified
 2862              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2863 00b0 42E80031 		strex r1, r3, [r2]
 2864              	@ 0 "" 2
 2865              	.LVL316:
 2866              		.thumb
 2867              		.syntax unified
 2868              	.LBE432:
 2869              	.LBE431:
1909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2870              		.loc 1 1909 0 discriminator 1
 2871 00b4 0029     		cmp	r1, #0
 2872 00b6 F3D1     		bne	.L173
 2873              	.LBE428:
1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2874              		.loc 1 1912 0
 2875 00b8 A36B     		ldr	r3, [r4, #56]
 2876              	.LVL317:
 2877 00ba 73B1     		cbz	r3, .L172
1916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2878              		.loc 1 1916 0
 2879 00bc 0022     		movs	r2, #0
 2880 00be 1A65     		str	r2, [r3, #80]
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 2881              		.loc 1 1918 0
 2882 00c0 A06B     		ldr	r0, [r4, #56]
 2883 00c2 FFF7FEFF 		bl	HAL_DMA_Abort
 2884              	.LVL318:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 143


 2885 00c6 40B1     		cbz	r0, .L172
1920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 2886              		.loc 1 1920 0
 2887 00c8 A06B     		ldr	r0, [r4, #56]
 2888 00ca FFF7FEFF 		bl	HAL_DMA_GetError
 2889              	.LVL319:
 2890 00ce 2028     		cmp	r0, #32
 2891 00d0 03D1     		bne	.L172
1923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2892              		.loc 1 1923 0
 2893 00d2 1023     		movs	r3, #16
 2894 00d4 2364     		str	r3, [r4, #64]
1925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 2895              		.loc 1 1925 0
 2896 00d6 0320     		movs	r0, #3
 2897 00d8 10BD     		pop	{r4, pc}
 2898              	.LVL320:
 2899              	.L172:
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 2900              		.loc 1 1932 0
 2901 00da 0020     		movs	r0, #0
 2902 00dc E084     		strh	r0, [r4, #38]	@ movhi
1933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2903              		.loc 1 1933 0
 2904 00de E085     		strh	r0, [r4, #46]	@ movhi
1936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2905              		.loc 1 1936 0
 2906 00e0 2064     		str	r0, [r4, #64]
1939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2907              		.loc 1 1939 0
 2908 00e2 2023     		movs	r3, #32
 2909 00e4 84F83E30 		strb	r3, [r4, #62]
1940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 2910              		.loc 1 1940 0
 2911 00e8 84F83D30 		strb	r3, [r4, #61]
1941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2912              		.loc 1 1941 0
 2913 00ec 2063     		str	r0, [r4, #48]
1944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2914              		.loc 1 1944 0
 2915 00ee 10BD     		pop	{r4, pc}
 2916              		.cfi_endproc
 2917              	.LFE254:
 2919              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2920              		.align	2
 2921              		.global	HAL_UART_AbortTransmit
 2922              		.thumb
 2923              		.thumb_func
 2925              	HAL_UART_AbortTransmit:
 2926              	.LFB255:
1959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 2927              		.loc 1 1959 0
 2928              		.cfi_startproc
 2929              		@ args = 0, pretend = 0, frame = 0
 2930              		@ frame_needed = 0, uses_anonymous_args = 0
 2931              	.LVL321:
 2932 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 144


 2933              	.LCFI28:
 2934              		.cfi_def_cfa_offset 8
 2935              		.cfi_offset 4, -8
 2936              		.cfi_offset 14, -4
 2937 0002 0446     		mov	r4, r0
 2938              	.L176:
 2939              	.LBB433:
1961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2940              		.loc 1 1961 0 discriminator 1
 2941 0004 2268     		ldr	r2, [r4]
 2942              	.LVL322:
 2943              	.LBB434:
 2944              	.LBB435:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2945              		.loc 2 1072 0 discriminator 1
 2946 0006 02F10C03 		add	r3, r2, #12
 2947              	.LVL323:
 2948              		.syntax unified
 2949              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2950 000a 53E8003F 		ldrex r3, [r3]
 2951              	@ 0 "" 2
 2952              	.LVL324:
 2953              		.thumb
 2954              		.syntax unified
 2955              	.LBE435:
 2956              	.LBE434:
1961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2957              		.loc 1 1961 0 discriminator 1
 2958 000e 23F0C003 		bic	r3, r3, #192
 2959              	.LVL325:
 2960              	.LBB436:
 2961              	.LBB437:
 2962              		.loc 2 1123 0 discriminator 1
 2963 0012 0C32     		adds	r2, r2, #12
 2964              	.LVL326:
 2965              		.syntax unified
 2966              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2967 0014 42E80031 		strex r1, r3, [r2]
 2968              	@ 0 "" 2
 2969              	.LVL327:
 2970              		.thumb
 2971              		.syntax unified
 2972              	.LBE437:
 2973              	.LBE436:
1961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2974              		.loc 1 1961 0 discriminator 1
 2975 0018 0029     		cmp	r1, #0
 2976 001a F3D1     		bne	.L176
 2977              	.LBE433:
1964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2978              		.loc 1 1964 0
 2979 001c 2368     		ldr	r3, [r4]
 2980              	.LVL328:
 2981 001e 5B69     		ldr	r3, [r3, #20]
 2982 0020 13F0800F 		tst	r3, #128
 2983 0024 1CD0     		beq	.L177
 2984              	.L178:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 145


 2985              	.LBB438:
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2986              		.loc 1 1966 0 discriminator 1
 2987 0026 2268     		ldr	r2, [r4]
 2988              	.LVL329:
 2989              	.LBB439:
 2990              	.LBB440:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2991              		.loc 2 1072 0 discriminator 1
 2992 0028 02F11403 		add	r3, r2, #20
 2993              	.LVL330:
 2994              		.syntax unified
 2995              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2996 002c 53E8003F 		ldrex r3, [r3]
 2997              	@ 0 "" 2
 2998              	.LVL331:
 2999              		.thumb
 3000              		.syntax unified
 3001              	.LBE440:
 3002              	.LBE439:
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3003              		.loc 1 1966 0 discriminator 1
 3004 0030 23F08003 		bic	r3, r3, #128
 3005              	.LVL332:
 3006              	.LBB441:
 3007              	.LBB442:
 3008              		.loc 2 1123 0 discriminator 1
 3009 0034 1432     		adds	r2, r2, #20
 3010              	.LVL333:
 3011              		.syntax unified
 3012              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3013 0036 42E80031 		strex r1, r3, [r2]
 3014              	@ 0 "" 2
 3015              	.LVL334:
 3016              		.thumb
 3017              		.syntax unified
 3018              	.LBE442:
 3019              	.LBE441:
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3020              		.loc 1 1966 0 discriminator 1
 3021 003a 0029     		cmp	r1, #0
 3022 003c F3D1     		bne	.L178
 3023              	.LBE438:
1969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3024              		.loc 1 1969 0
 3025 003e 636B     		ldr	r3, [r4, #52]
 3026              	.LVL335:
 3027 0040 73B1     		cbz	r3, .L177
1973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3028              		.loc 1 1973 0
 3029 0042 0022     		movs	r2, #0
 3030 0044 1A65     		str	r2, [r3, #80]
1975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3031              		.loc 1 1975 0
 3032 0046 606B     		ldr	r0, [r4, #52]
 3033              	.LVL336:
 3034 0048 FFF7FEFF 		bl	HAL_DMA_Abort
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 146


 3035              	.LVL337:
 3036 004c 40B1     		cbz	r0, .L177
1977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 3037              		.loc 1 1977 0
 3038 004e 606B     		ldr	r0, [r4, #52]
 3039 0050 FFF7FEFF 		bl	HAL_DMA_GetError
 3040              	.LVL338:
 3041 0054 2028     		cmp	r0, #32
 3042 0056 03D1     		bne	.L177
1980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3043              		.loc 1 1980 0
 3044 0058 1023     		movs	r3, #16
 3045 005a 2364     		str	r3, [r4, #64]
1982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 3046              		.loc 1 1982 0
 3047 005c 0320     		movs	r0, #3
 3048 005e 10BD     		pop	{r4, pc}
 3049              	.LVL339:
 3050              	.L177:
1989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3051              		.loc 1 1989 0
 3052 0060 0020     		movs	r0, #0
 3053 0062 E084     		strh	r0, [r4, #38]	@ movhi
1992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3054              		.loc 1 1992 0
 3055 0064 2023     		movs	r3, #32
 3056 0066 84F83D30 		strb	r3, [r4, #61]
1995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3057              		.loc 1 1995 0
 3058 006a 10BD     		pop	{r4, pc}
 3059              		.cfi_endproc
 3060              	.LFE255:
 3062              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 3063              		.align	2
 3064              		.global	HAL_UART_AbortReceive
 3065              		.thumb
 3066              		.thumb_func
 3068              	HAL_UART_AbortReceive:
 3069              	.LFB256:
2010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3070              		.loc 1 2010 0
 3071              		.cfi_startproc
 3072              		@ args = 0, pretend = 0, frame = 0
 3073              		@ frame_needed = 0, uses_anonymous_args = 0
 3074              	.LVL340:
 3075 0000 10B5     		push	{r4, lr}
 3076              	.LCFI29:
 3077              		.cfi_def_cfa_offset 8
 3078              		.cfi_offset 4, -8
 3079              		.cfi_offset 14, -4
 3080 0002 0446     		mov	r4, r0
 3081              	.L182:
 3082              	.LBB443:
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3083              		.loc 1 2012 0 discriminator 1
 3084 0004 2268     		ldr	r2, [r4]
 3085              	.LVL341:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 147


 3086              	.LBB444:
 3087              	.LBB445:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3088              		.loc 2 1072 0 discriminator 1
 3089 0006 02F10C03 		add	r3, r2, #12
 3090              	.LVL342:
 3091              		.syntax unified
 3092              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3093 000a 53E8003F 		ldrex r3, [r3]
 3094              	@ 0 "" 2
 3095              	.LVL343:
 3096              		.thumb
 3097              		.syntax unified
 3098              	.LBE445:
 3099              	.LBE444:
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3100              		.loc 1 2012 0 discriminator 1
 3101 000e 23F49073 		bic	r3, r3, #288
 3102              	.LVL344:
 3103              	.LBB446:
 3104              	.LBB447:
 3105              		.loc 2 1123 0 discriminator 1
 3106 0012 0C32     		adds	r2, r2, #12
 3107              	.LVL345:
 3108              		.syntax unified
 3109              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3110 0014 42E80031 		strex r1, r3, [r2]
 3111              	@ 0 "" 2
 3112              	.LVL346:
 3113              		.thumb
 3114              		.syntax unified
 3115              	.LBE447:
 3116              	.LBE446:
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3117              		.loc 1 2012 0 discriminator 1
 3118 0018 0029     		cmp	r1, #0
 3119 001a F3D1     		bne	.L182
 3120              	.LVL347:
 3121              	.L183:
 3122              	.LBE443:
 3123              	.LBB448:
2013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3124              		.loc 1 2013 0 discriminator 1
 3125 001c 2268     		ldr	r2, [r4]
 3126              	.LVL348:
 3127              	.LBB449:
 3128              	.LBB450:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3129              		.loc 2 1072 0 discriminator 1
 3130 001e 02F11403 		add	r3, r2, #20
 3131              	.LVL349:
 3132              		.syntax unified
 3133              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3134 0022 53E8003F 		ldrex r3, [r3]
 3135              	@ 0 "" 2
 3136              	.LVL350:
 3137              		.thumb
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 148


 3138              		.syntax unified
 3139              	.LBE450:
 3140              	.LBE449:
2013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3141              		.loc 1 2013 0 discriminator 1
 3142 0026 23F00103 		bic	r3, r3, #1
 3143              	.LVL351:
 3144              	.LBB451:
 3145              	.LBB452:
 3146              		.loc 2 1123 0 discriminator 1
 3147 002a 1432     		adds	r2, r2, #20
 3148              	.LVL352:
 3149              		.syntax unified
 3150              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3151 002c 42E80031 		strex r1, r3, [r2]
 3152              	@ 0 "" 2
 3153              	.LVL353:
 3154              		.thumb
 3155              		.syntax unified
 3156              	.LBE452:
 3157              	.LBE451:
2013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3158              		.loc 1 2013 0 discriminator 1
 3159 0030 0029     		cmp	r1, #0
 3160 0032 F3D1     		bne	.L183
 3161              	.LBE448:
2016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3162              		.loc 1 2016 0
 3163 0034 236B     		ldr	r3, [r4, #48]
 3164              	.LVL354:
 3165 0036 012B     		cmp	r3, #1
 3166 0038 0BD1     		bne	.L184
 3167              	.L185:
 3168              	.LBB453:
2018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3169              		.loc 1 2018 0 discriminator 1
 3170 003a 2268     		ldr	r2, [r4]
 3171              	.LVL355:
 3172              	.LBB454:
 3173              	.LBB455:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3174              		.loc 2 1072 0 discriminator 1
 3175 003c 02F10C03 		add	r3, r2, #12
 3176              	.LVL356:
 3177              		.syntax unified
 3178              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3179 0040 53E8003F 		ldrex r3, [r3]
 3180              	@ 0 "" 2
 3181              	.LVL357:
 3182              		.thumb
 3183              		.syntax unified
 3184              	.LBE455:
 3185              	.LBE454:
2018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3186              		.loc 1 2018 0 discriminator 1
 3187 0044 23F01003 		bic	r3, r3, #16
 3188              	.LVL358:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 149


 3189              	.LBB456:
 3190              	.LBB457:
 3191              		.loc 2 1123 0 discriminator 1
 3192 0048 0C32     		adds	r2, r2, #12
 3193              	.LVL359:
 3194              		.syntax unified
 3195              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3196 004a 42E80031 		strex r1, r3, [r2]
 3197              	@ 0 "" 2
 3198              	.LVL360:
 3199              		.thumb
 3200              		.syntax unified
 3201              	.LBE457:
 3202              	.LBE456:
2018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3203              		.loc 1 2018 0 discriminator 1
 3204 004e 0029     		cmp	r1, #0
 3205 0050 F3D1     		bne	.L185
 3206              	.LVL361:
 3207              	.L184:
 3208              	.LBE453:
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3209              		.loc 1 2022 0
 3210 0052 2368     		ldr	r3, [r4]
 3211 0054 5B69     		ldr	r3, [r3, #20]
 3212 0056 13F0400F 		tst	r3, #64
 3213 005a 1CD0     		beq	.L186
 3214              	.L187:
 3215              	.LBB458:
2024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3216              		.loc 1 2024 0 discriminator 1
 3217 005c 2268     		ldr	r2, [r4]
 3218              	.LVL362:
 3219              	.LBB459:
 3220              	.LBB460:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3221              		.loc 2 1072 0 discriminator 1
 3222 005e 02F11403 		add	r3, r2, #20
 3223              	.LVL363:
 3224              		.syntax unified
 3225              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3226 0062 53E8003F 		ldrex r3, [r3]
 3227              	@ 0 "" 2
 3228              	.LVL364:
 3229              		.thumb
 3230              		.syntax unified
 3231              	.LBE460:
 3232              	.LBE459:
2024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3233              		.loc 1 2024 0 discriminator 1
 3234 0066 23F04003 		bic	r3, r3, #64
 3235              	.LVL365:
 3236              	.LBB461:
 3237              	.LBB462:
 3238              		.loc 2 1123 0 discriminator 1
 3239 006a 1432     		adds	r2, r2, #20
 3240              	.LVL366:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 150


 3241              		.syntax unified
 3242              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3243 006c 42E80031 		strex r1, r3, [r2]
 3244              	@ 0 "" 2
 3245              	.LVL367:
 3246              		.thumb
 3247              		.syntax unified
 3248              	.LBE462:
 3249              	.LBE461:
2024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3250              		.loc 1 2024 0 discriminator 1
 3251 0070 0029     		cmp	r1, #0
 3252 0072 F3D1     		bne	.L187
 3253              	.LBE458:
2027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3254              		.loc 1 2027 0
 3255 0074 A36B     		ldr	r3, [r4, #56]
 3256              	.LVL368:
 3257 0076 73B1     		cbz	r3, .L186
2031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3258              		.loc 1 2031 0
 3259 0078 0022     		movs	r2, #0
 3260 007a 1A65     		str	r2, [r3, #80]
2033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3261              		.loc 1 2033 0
 3262 007c A06B     		ldr	r0, [r4, #56]
 3263              	.LVL369:
 3264 007e FFF7FEFF 		bl	HAL_DMA_Abort
 3265              	.LVL370:
 3266 0082 40B1     		cbz	r0, .L186
2035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 3267              		.loc 1 2035 0
 3268 0084 A06B     		ldr	r0, [r4, #56]
 3269 0086 FFF7FEFF 		bl	HAL_DMA_GetError
 3270              	.LVL371:
 3271 008a 2028     		cmp	r0, #32
 3272 008c 03D1     		bne	.L186
2038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3273              		.loc 1 2038 0
 3274 008e 1023     		movs	r3, #16
 3275 0090 2364     		str	r3, [r4, #64]
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 3276              		.loc 1 2040 0
 3277 0092 0320     		movs	r0, #3
 3278 0094 10BD     		pop	{r4, pc}
 3279              	.LVL372:
 3280              	.L186:
2047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3281              		.loc 1 2047 0
 3282 0096 0020     		movs	r0, #0
 3283 0098 E085     		strh	r0, [r4, #46]	@ movhi
2050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3284              		.loc 1 2050 0
 3285 009a 2023     		movs	r3, #32
 3286 009c 84F83E30 		strb	r3, [r4, #62]
2051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3287              		.loc 1 2051 0
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 151


 3288 00a0 2063     		str	r0, [r4, #48]
2054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3289              		.loc 1 2054 0
 3290 00a2 10BD     		pop	{r4, pc}
 3291              		.cfi_endproc
 3292              	.LFE256:
 3294              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 3295              		.align	2
 3296              		.weak	HAL_UART_TxCpltCallback
 3297              		.thumb
 3298              		.thumb_func
 3300              	HAL_UART_TxCpltCallback:
 3301              	.LFB261:
2593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3302              		.loc 1 2593 0
 3303              		.cfi_startproc
 3304              		@ args = 0, pretend = 0, frame = 0
 3305              		@ frame_needed = 0, uses_anonymous_args = 0
 3306              		@ link register save eliminated.
 3307              	.LVL373:
 3308 0000 7047     		bx	lr
 3309              		.cfi_endproc
 3310              	.LFE261:
 3312 0002 00BF     		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 3313              		.align	2
 3314              		.thumb
 3315              		.thumb_func
 3317              	UART_DMATransmitCplt:
 3318              	.LFB277:
2987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3319              		.loc 1 2987 0
 3320              		.cfi_startproc
 3321              		@ args = 0, pretend = 0, frame = 0
 3322              		@ frame_needed = 0, uses_anonymous_args = 0
 3323              	.LVL374:
2987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3324              		.loc 1 2987 0
 3325 0000 08B5     		push	{r3, lr}
 3326              	.LCFI30:
 3327              		.cfi_def_cfa_offset 8
 3328              		.cfi_offset 3, -8
 3329              		.cfi_offset 14, -4
2988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
 3330              		.loc 1 2988 0
 3331 0002 816B     		ldr	r1, [r0, #56]
 3332              	.LVL375:
2990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3333              		.loc 1 2990 0
 3334 0004 0368     		ldr	r3, [r0]
 3335 0006 1B68     		ldr	r3, [r3]
 3336 0008 13F4807F 		tst	r3, #256
 3337 000c 1AD1     		bne	.L192
2992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3338              		.loc 1 2992 0
 3339 000e 0023     		movs	r3, #0
 3340 0010 CB84     		strh	r3, [r1, #38]	@ movhi
 3341              	.LVL376:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 152


 3342              	.L193:
 3343              	.LBB463:
2996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3344              		.loc 1 2996 0 discriminator 1
 3345 0012 0A68     		ldr	r2, [r1]
 3346              	.LVL377:
 3347              	.LBB464:
 3348              	.LBB465:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3349              		.loc 2 1072 0 discriminator 1
 3350 0014 02F11403 		add	r3, r2, #20
 3351              	.LVL378:
 3352              		.syntax unified
 3353              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3354 0018 53E8003F 		ldrex r3, [r3]
 3355              	@ 0 "" 2
 3356              	.LVL379:
 3357              		.thumb
 3358              		.syntax unified
 3359              	.LBE465:
 3360              	.LBE464:
2996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3361              		.loc 1 2996 0 discriminator 1
 3362 001c 23F08003 		bic	r3, r3, #128
 3363              	.LVL380:
 3364              	.LBB466:
 3365              	.LBB467:
 3366              		.loc 2 1123 0 discriminator 1
 3367 0020 1432     		adds	r2, r2, #20
 3368              	.LVL381:
 3369              		.syntax unified
 3370              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3371 0022 42E80030 		strex r0, r3, [r2]
 3372              	@ 0 "" 2
 3373              	.LVL382:
 3374              		.thumb
 3375              		.syntax unified
 3376              	.LBE467:
 3377              	.LBE466:
2996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3378              		.loc 1 2996 0 discriminator 1
 3379 0026 0028     		cmp	r0, #0
 3380 0028 F3D1     		bne	.L193
 3381              	.LVL383:
 3382              	.L194:
 3383              	.LBE463:
 3384              	.LBB468:
2999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3385              		.loc 1 2999 0 discriminator 1
 3386 002a 0A68     		ldr	r2, [r1]
 3387              	.LVL384:
 3388              	.LBB469:
 3389              	.LBB470:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3390              		.loc 2 1072 0 discriminator 1
 3391 002c 02F10C03 		add	r3, r2, #12
 3392              	.LVL385:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 153


 3393              		.syntax unified
 3394              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3395 0030 53E8003F 		ldrex r3, [r3]
 3396              	@ 0 "" 2
 3397              	.LVL386:
 3398              		.thumb
 3399              		.syntax unified
 3400              	.LBE470:
 3401              	.LBE469:
2999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3402              		.loc 1 2999 0 discriminator 1
 3403 0034 43F04003 		orr	r3, r3, #64
 3404              	.LVL387:
 3405              	.LBB471:
 3406              	.LBB472:
 3407              		.loc 2 1123 0 discriminator 1
 3408 0038 0C32     		adds	r2, r2, #12
 3409              	.LVL388:
 3410              		.syntax unified
 3411              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3412 003a 42E80030 		strex r0, r3, [r2]
 3413              	@ 0 "" 2
 3414              	.LVL389:
 3415              		.thumb
 3416              		.syntax unified
 3417              	.LBE472:
 3418              	.LBE471:
2999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3419              		.loc 1 2999 0 discriminator 1
 3420 003e 0028     		cmp	r0, #0
 3421 0040 F3D1     		bne	.L194
 3422 0042 08BD     		pop	{r3, pc}
 3423              	.LVL390:
 3424              	.L192:
 3425              	.LBE468:
3010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3426              		.loc 1 3010 0
 3427 0044 0846     		mov	r0, r1
 3428              	.LVL391:
 3429 0046 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 3430              	.LVL392:
 3431 004a 08BD     		pop	{r3, pc}
 3432              		.cfi_endproc
 3433              	.LFE277:
 3435              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 3436              		.align	2
 3437              		.thumb
 3438              		.thumb_func
 3440              	UART_EndTransmit_IT:
 3441              	.LFB293:
3553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
 3442              		.loc 1 3553 0
 3443              		.cfi_startproc
 3444              		@ args = 0, pretend = 0, frame = 0
 3445              		@ frame_needed = 0, uses_anonymous_args = 0
 3446              	.LVL393:
 3447 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 154


 3448              	.LCFI31:
 3449              		.cfi_def_cfa_offset 8
 3450              		.cfi_offset 3, -8
 3451              		.cfi_offset 14, -4
3555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3452              		.loc 1 3555 0
 3453 0002 0168     		ldr	r1, [r0]
 3454 0004 CB68     		ldr	r3, [r1, #12]
 3455 0006 23F04003 		bic	r3, r3, #64
 3456 000a CB60     		str	r3, [r1, #12]
3558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3457              		.loc 1 3558 0
 3458 000c 2023     		movs	r3, #32
 3459 000e 80F83D30 		strb	r3, [r0, #61]
3565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3460              		.loc 1 3565 0
 3461 0012 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 3462              	.LVL394:
3569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3463              		.loc 1 3569 0
 3464 0016 0020     		movs	r0, #0
 3465 0018 08BD     		pop	{r3, pc}
 3466              		.cfi_endproc
 3467              	.LFE293:
 3469 001a 00BF     		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 3470              		.align	2
 3471              		.weak	HAL_UART_TxHalfCpltCallback
 3472              		.thumb
 3473              		.thumb_func
 3475              	HAL_UART_TxHalfCpltCallback:
 3476              	.LFB262:
2608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3477              		.loc 1 2608 0
 3478              		.cfi_startproc
 3479              		@ args = 0, pretend = 0, frame = 0
 3480              		@ frame_needed = 0, uses_anonymous_args = 0
 3481              		@ link register save eliminated.
 3482              	.LVL395:
 3483 0000 7047     		bx	lr
 3484              		.cfi_endproc
 3485              	.LFE262:
 3487 0002 00BF     		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 3488              		.align	2
 3489              		.thumb
 3490              		.thumb_func
 3492              	UART_DMATxHalfCplt:
 3493              	.LFB278:
3022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3494              		.loc 1 3022 0
 3495              		.cfi_startproc
 3496              		@ args = 0, pretend = 0, frame = 0
 3497              		@ frame_needed = 0, uses_anonymous_args = 0
 3498              	.LVL396:
3022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3499              		.loc 1 3022 0
 3500 0000 08B5     		push	{r3, lr}
 3501              	.LCFI32:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 155


 3502              		.cfi_def_cfa_offset 8
 3503              		.cfi_offset 3, -8
 3504              		.cfi_offset 14, -4
 3505              	.LVL397:
3030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3506              		.loc 1 3030 0
 3507 0002 806B     		ldr	r0, [r0, #56]
 3508              	.LVL398:
 3509 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 3510              	.LVL399:
 3511 0008 08BD     		pop	{r3, pc}
 3512              		.cfi_endproc
 3513              	.LFE278:
 3515 000a 00BF     		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 3516              		.align	2
 3517              		.weak	HAL_UART_RxCpltCallback
 3518              		.thumb
 3519              		.thumb_func
 3521              	HAL_UART_RxCpltCallback:
 3522              	.LFB263:
2623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3523              		.loc 1 2623 0
 3524              		.cfi_startproc
 3525              		@ args = 0, pretend = 0, frame = 0
 3526              		@ frame_needed = 0, uses_anonymous_args = 0
 3527              		@ link register save eliminated.
 3528              	.LVL400:
 3529 0000 7047     		bx	lr
 3530              		.cfi_endproc
 3531              	.LFE263:
 3533 0002 00BF     		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 3534              		.align	2
 3535              		.weak	HAL_UART_RxHalfCpltCallback
 3536              		.thumb
 3537              		.thumb_func
 3539              	HAL_UART_RxHalfCpltCallback:
 3540              	.LFB264:
2638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3541              		.loc 1 2638 0
 3542              		.cfi_startproc
 3543              		@ args = 0, pretend = 0, frame = 0
 3544              		@ frame_needed = 0, uses_anonymous_args = 0
 3545              		@ link register save eliminated.
 3546              	.LVL401:
 3547 0000 7047     		bx	lr
 3548              		.cfi_endproc
 3549              	.LFE264:
 3551 0002 00BF     		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 3552              		.align	2
 3553              		.weak	HAL_UART_ErrorCallback
 3554              		.thumb
 3555              		.thumb_func
 3557              	HAL_UART_ErrorCallback:
 3558              	.LFB265:
2653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3559              		.loc 1 2653 0
 3560              		.cfi_startproc
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 156


 3561              		@ args = 0, pretend = 0, frame = 0
 3562              		@ frame_needed = 0, uses_anonymous_args = 0
 3563              		@ link register save eliminated.
 3564              	.LVL402:
 3565 0000 7047     		bx	lr
 3566              		.cfi_endproc
 3567              	.LFE265:
 3569 0002 00BF     		.section	.text.UART_DMAError,"ax",%progbits
 3570              		.align	2
 3571              		.thumb
 3572              		.thumb_func
 3574              	UART_DMAError:
 3575              	.LFB281:
3133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 3576              		.loc 1 3133 0
 3577              		.cfi_startproc
 3578              		@ args = 0, pretend = 0, frame = 0
 3579              		@ frame_needed = 0, uses_anonymous_args = 0
 3580              	.LVL403:
3133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 3581              		.loc 1 3133 0
 3582 0000 10B5     		push	{r4, lr}
 3583              	.LCFI33:
 3584              		.cfi_def_cfa_offset 8
 3585              		.cfi_offset 4, -8
 3586              		.cfi_offset 14, -4
 3587              	.LVL404:
3135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3588              		.loc 1 3135 0
 3589 0002 846B     		ldr	r4, [r0, #56]
 3590              	.LVL405:
3138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 3591              		.loc 1 3138 0
 3592 0004 2368     		ldr	r3, [r4]
 3593 0006 5B69     		ldr	r3, [r3, #20]
 3594 0008 03F08002 		and	r2, r3, #128
 3595              	.LVL406:
3139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3596              		.loc 1 3139 0
 3597 000c 94F83D30 		ldrb	r3, [r4, #61]	@ zero_extendqisi2
 3598 0010 DBB2     		uxtb	r3, r3
 3599 0012 212B     		cmp	r3, #33
 3600 0014 05D1     		bne	.L206
3139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3601              		.loc 1 3139 0 is_stmt 0 discriminator 1
 3602 0016 22B1     		cbz	r2, .L206
3141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 3603              		.loc 1 3141 0 is_stmt 1
 3604 0018 0023     		movs	r3, #0
 3605 001a E384     		strh	r3, [r4, #38]	@ movhi
3142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3606              		.loc 1 3142 0
 3607 001c 2046     		mov	r0, r4
 3608              	.LVL407:
 3609 001e FFF7FEFF 		bl	UART_EndTxTransfer
 3610              	.LVL408:
 3611              	.L206:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 157


3146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 3612              		.loc 1 3146 0
 3613 0022 2368     		ldr	r3, [r4]
 3614 0024 5B69     		ldr	r3, [r3, #20]
 3615 0026 03F04002 		and	r2, r3, #64
 3616              	.LVL409:
3147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3617              		.loc 1 3147 0
 3618 002a 94F83E30 		ldrb	r3, [r4, #62]	@ zero_extendqisi2
 3619 002e DBB2     		uxtb	r3, r3
 3620 0030 222B     		cmp	r3, #34
 3621 0032 05D1     		bne	.L207
3147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3622              		.loc 1 3147 0 is_stmt 0 discriminator 1
 3623 0034 22B1     		cbz	r2, .L207
3149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 3624              		.loc 1 3149 0 is_stmt 1
 3625 0036 0023     		movs	r3, #0
 3626 0038 E385     		strh	r3, [r4, #46]	@ movhi
3150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3627              		.loc 1 3150 0
 3628 003a 2046     		mov	r0, r4
 3629 003c FFF7FEFF 		bl	UART_EndRxTransfer
 3630              	.LVL410:
 3631              	.L207:
3153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 3632              		.loc 1 3153 0
 3633 0040 236C     		ldr	r3, [r4, #64]
 3634 0042 43F01003 		orr	r3, r3, #16
 3635 0046 2364     		str	r3, [r4, #64]
3159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3636              		.loc 1 3159 0
 3637 0048 2046     		mov	r0, r4
 3638 004a FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3639              	.LVL411:
 3640 004e 10BD     		pop	{r4, pc}
 3641              		.cfi_endproc
 3642              	.LFE281:
 3644              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 3645              		.align	2
 3646              		.thumb
 3647              		.thumb_func
 3649              	UART_DMAAbortOnError:
 3650              	.LFB287:
3343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3651              		.loc 1 3343 0
 3652              		.cfi_startproc
 3653              		@ args = 0, pretend = 0, frame = 0
 3654              		@ frame_needed = 0, uses_anonymous_args = 0
 3655              	.LVL412:
 3656 0000 08B5     		push	{r3, lr}
 3657              	.LCFI34:
 3658              		.cfi_def_cfa_offset 8
 3659              		.cfi_offset 3, -8
 3660              		.cfi_offset 14, -4
3344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3661              		.loc 1 3344 0
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 158


 3662 0002 806B     		ldr	r0, [r0, #56]
 3663              	.LVL413:
3345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 3664              		.loc 1 3345 0
 3665 0004 0023     		movs	r3, #0
 3666 0006 C385     		strh	r3, [r0, #46]	@ movhi
3346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3667              		.loc 1 3346 0
 3668 0008 C384     		strh	r3, [r0, #38]	@ movhi
3353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3669              		.loc 1 3353 0
 3670 000a FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3671              	.LVL414:
 3672 000e 08BD     		pop	{r3, pc}
 3673              		.cfi_endproc
 3674              	.LFE287:
 3676              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 3677              		.align	2
 3678              		.weak	HAL_UART_AbortCpltCallback
 3679              		.thumb
 3680              		.thumb_func
 3682              	HAL_UART_AbortCpltCallback:
 3683              	.LFB266:
2667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3684              		.loc 1 2667 0
 3685              		.cfi_startproc
 3686              		@ args = 0, pretend = 0, frame = 0
 3687              		@ frame_needed = 0, uses_anonymous_args = 0
 3688              		@ link register save eliminated.
 3689              	.LVL415:
 3690 0000 7047     		bx	lr
 3691              		.cfi_endproc
 3692              	.LFE266:
 3694 0002 00BF     		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 3695              		.align	2
 3696              		.global	HAL_UART_Abort_IT
 3697              		.thumb
 3698              		.thumb_func
 3700              	HAL_UART_Abort_IT:
 3701              	.LFB257:
2071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 3702              		.loc 1 2071 0
 3703              		.cfi_startproc
 3704              		@ args = 0, pretend = 0, frame = 0
 3705              		@ frame_needed = 0, uses_anonymous_args = 0
 3706              	.LVL416:
2071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 3707              		.loc 1 2071 0
 3708 0000 38B5     		push	{r3, r4, r5, lr}
 3709              	.LCFI35:
 3710              		.cfi_def_cfa_offset 16
 3711              		.cfi_offset 3, -16
 3712              		.cfi_offset 4, -12
 3713              		.cfi_offset 5, -8
 3714              		.cfi_offset 14, -4
 3715 0002 0446     		mov	r4, r0
 3716              	.LVL417:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 159


 3717              	.L213:
 3718              	.LBB473:
2075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3719              		.loc 1 2075 0 discriminator 1
 3720 0004 2268     		ldr	r2, [r4]
 3721              	.LVL418:
 3722              	.LBB474:
 3723              	.LBB475:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3724              		.loc 2 1072 0 discriminator 1
 3725 0006 02F10C03 		add	r3, r2, #12
 3726              	.LVL419:
 3727              		.syntax unified
 3728              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3729 000a 53E8003F 		ldrex r3, [r3]
 3730              	@ 0 "" 2
 3731              	.LVL420:
 3732              		.thumb
 3733              		.syntax unified
 3734              	.LBE475:
 3735              	.LBE474:
2075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3736              		.loc 1 2075 0 discriminator 1
 3737 000e 23F4F073 		bic	r3, r3, #480
 3738              	.LVL421:
 3739              	.LBB476:
 3740              	.LBB477:
 3741              		.loc 2 1123 0 discriminator 1
 3742 0012 0C32     		adds	r2, r2, #12
 3743              	.LVL422:
 3744              		.syntax unified
 3745              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3746 0014 42E80031 		strex r1, r3, [r2]
 3747              	@ 0 "" 2
 3748              	.LVL423:
 3749              		.thumb
 3750              		.syntax unified
 3751              	.LBE477:
 3752              	.LBE476:
2075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3753              		.loc 1 2075 0 discriminator 1
 3754 0018 0029     		cmp	r1, #0
 3755 001a F3D1     		bne	.L213
 3756              	.LVL424:
 3757              	.L214:
 3758              	.LBE473:
 3759              	.LBB478:
2076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3760              		.loc 1 2076 0 discriminator 1
 3761 001c 2268     		ldr	r2, [r4]
 3762              	.LVL425:
 3763              	.LBB479:
 3764              	.LBB480:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3765              		.loc 2 1072 0 discriminator 1
 3766 001e 02F11403 		add	r3, r2, #20
 3767              	.LVL426:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 160


 3768              		.syntax unified
 3769              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3770 0022 53E8003F 		ldrex r3, [r3]
 3771              	@ 0 "" 2
 3772              	.LVL427:
 3773              		.thumb
 3774              		.syntax unified
 3775              	.LBE480:
 3776              	.LBE479:
2076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3777              		.loc 1 2076 0 discriminator 1
 3778 0026 23F00103 		bic	r3, r3, #1
 3779              	.LVL428:
 3780              	.LBB481:
 3781              	.LBB482:
 3782              		.loc 2 1123 0 discriminator 1
 3783 002a 1432     		adds	r2, r2, #20
 3784              	.LVL429:
 3785              		.syntax unified
 3786              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3787 002c 42E80031 		strex r1, r3, [r2]
 3788              	@ 0 "" 2
 3789              	.LVL430:
 3790              		.thumb
 3791              		.syntax unified
 3792              	.LBE482:
 3793              	.LBE481:
2076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3794              		.loc 1 2076 0 discriminator 1
 3795 0030 0029     		cmp	r1, #0
 3796 0032 F3D1     		bne	.L214
 3797              	.LBE478:
2079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3798              		.loc 1 2079 0
 3799 0034 236B     		ldr	r3, [r4, #48]
 3800              	.LVL431:
 3801 0036 012B     		cmp	r3, #1
 3802 0038 0BD1     		bne	.L215
 3803              	.L216:
 3804              	.LBB483:
2081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3805              		.loc 1 2081 0 discriminator 1
 3806 003a 2268     		ldr	r2, [r4]
 3807              	.LVL432:
 3808              	.LBB484:
 3809              	.LBB485:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3810              		.loc 2 1072 0 discriminator 1
 3811 003c 02F10C03 		add	r3, r2, #12
 3812              	.LVL433:
 3813              		.syntax unified
 3814              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3815 0040 53E8003F 		ldrex r3, [r3]
 3816              	@ 0 "" 2
 3817              	.LVL434:
 3818              		.thumb
 3819              		.syntax unified
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 161


 3820              	.LBE485:
 3821              	.LBE484:
2081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3822              		.loc 1 2081 0 discriminator 1
 3823 0044 23F01003 		bic	r3, r3, #16
 3824              	.LVL435:
 3825              	.LBB486:
 3826              	.LBB487:
 3827              		.loc 2 1123 0 discriminator 1
 3828 0048 0C32     		adds	r2, r2, #12
 3829              	.LVL436:
 3830              		.syntax unified
 3831              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3832 004a 42E80031 		strex r1, r3, [r2]
 3833              	@ 0 "" 2
 3834              	.LVL437:
 3835              		.thumb
 3836              		.syntax unified
 3837              	.LBE487:
 3838              	.LBE486:
2081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3839              		.loc 1 2081 0 discriminator 1
 3840 004e 0029     		cmp	r1, #0
 3841 0050 F3D1     		bne	.L216
 3842              	.LVL438:
 3843              	.L215:
 3844              	.LBE483:
2087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3845              		.loc 1 2087 0
 3846 0052 636B     		ldr	r3, [r4, #52]
 3847 0054 4BB1     		cbz	r3, .L217
2091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3848              		.loc 1 2091 0
 3849 0056 2268     		ldr	r2, [r4]
 3850 0058 5269     		ldr	r2, [r2, #20]
 3851 005a 12F0800F 		tst	r2, #128
 3852 005e 02D0     		beq	.L218
2093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3853              		.loc 1 2093 0
 3854 0060 2E4A     		ldr	r2, .L231
 3855 0062 1A65     		str	r2, [r3, #80]
 3856 0064 01E0     		b	.L217
 3857              	.L218:
2097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3858              		.loc 1 2097 0
 3859 0066 0022     		movs	r2, #0
 3860 0068 1A65     		str	r2, [r3, #80]
 3861              	.L217:
2101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3862              		.loc 1 2101 0
 3863 006a A36B     		ldr	r3, [r4, #56]
 3864 006c 4BB1     		cbz	r3, .L219
2105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3865              		.loc 1 2105 0
 3866 006e 2268     		ldr	r2, [r4]
 3867 0070 5269     		ldr	r2, [r2, #20]
 3868 0072 12F0400F 		tst	r2, #64
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 162


 3869 0076 02D0     		beq	.L220
2107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3870              		.loc 1 2107 0
 3871 0078 294A     		ldr	r2, .L231+4
 3872 007a 1A65     		str	r2, [r3, #80]
 3873 007c 01E0     		b	.L219
 3874              	.L220:
2111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3875              		.loc 1 2111 0
 3876 007e 0022     		movs	r2, #0
 3877 0080 1A65     		str	r2, [r3, #80]
 3878              	.L219:
2116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3879              		.loc 1 2116 0
 3880 0082 2368     		ldr	r3, [r4]
 3881 0084 5B69     		ldr	r3, [r3, #20]
 3882 0086 13F0800F 		tst	r3, #128
 3883 008a 15D0     		beq	.L226
 3884              	.L222:
 3885              	.LBB488:
2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3886              		.loc 1 2119 0 discriminator 1
 3887 008c 2268     		ldr	r2, [r4]
 3888              	.LVL439:
 3889              	.LBB489:
 3890              	.LBB490:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3891              		.loc 2 1072 0 discriminator 1
 3892 008e 02F11403 		add	r3, r2, #20
 3893              	.LVL440:
 3894              		.syntax unified
 3895              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3896 0092 53E8003F 		ldrex r3, [r3]
 3897              	@ 0 "" 2
 3898              	.LVL441:
 3899              		.thumb
 3900              		.syntax unified
 3901              	.LBE490:
 3902              	.LBE489:
2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3903              		.loc 1 2119 0 discriminator 1
 3904 0096 23F08003 		bic	r3, r3, #128
 3905              	.LVL442:
 3906              	.LBB491:
 3907              	.LBB492:
 3908              		.loc 2 1123 0 discriminator 1
 3909 009a 1432     		adds	r2, r2, #20
 3910              	.LVL443:
 3911              		.syntax unified
 3912              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3913 009c 42E80031 		strex r1, r3, [r2]
 3914              	@ 0 "" 2
 3915              	.LVL444:
 3916              		.thumb
 3917              		.syntax unified
 3918              	.LBE492:
 3919              	.LBE491:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 163


2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3920              		.loc 1 2119 0 discriminator 1
 3921 00a0 0029     		cmp	r1, #0
 3922 00a2 F3D1     		bne	.L222
 3923              	.LBE488:
2122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3924              		.loc 1 2122 0
 3925 00a4 606B     		ldr	r0, [r4, #52]
 3926              	.LVL445:
 3927 00a6 48B1     		cbz	r0, .L227
2128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3928              		.loc 1 2128 0
 3929 00a8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3930              	.LVL446:
 3931 00ac 40B1     		cbz	r0, .L228
2130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3932              		.loc 1 2130 0
 3933 00ae 636B     		ldr	r3, [r4, #52]
 3934 00b0 0022     		movs	r2, #0
 3935 00b2 1A65     		str	r2, [r3, #80]
2072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3936              		.loc 1 2072 0
 3937 00b4 0125     		movs	r5, #1
 3938 00b6 04E0     		b	.L221
 3939              	.LVL447:
 3940              	.L226:
 3941 00b8 0125     		movs	r5, #1
 3942 00ba 02E0     		b	.L221
 3943              	.LVL448:
 3944              	.L227:
 3945 00bc 0125     		movs	r5, #1
 3946 00be 00E0     		b	.L221
 3947              	.LVL449:
 3948              	.L228:
2134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3949              		.loc 1 2134 0
 3950 00c0 0025     		movs	r5, #0
 3951              	.L221:
 3952              	.LVL450:
2140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3953              		.loc 1 2140 0
 3954 00c2 2368     		ldr	r3, [r4]
 3955 00c4 5B69     		ldr	r3, [r3, #20]
 3956 00c6 13F0400F 		tst	r3, #64
 3957 00ca 16D0     		beq	.L223
 3958              	.L224:
 3959              	.LBB493:
2142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3960              		.loc 1 2142 0 discriminator 1
 3961 00cc 2268     		ldr	r2, [r4]
 3962              	.LVL451:
 3963              	.LBB494:
 3964              	.LBB495:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3965              		.loc 2 1072 0 discriminator 1
 3966 00ce 02F11403 		add	r3, r2, #20
 3967              	.LVL452:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 164


 3968              		.syntax unified
 3969              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3970 00d2 53E8003F 		ldrex r3, [r3]
 3971              	@ 0 "" 2
 3972              	.LVL453:
 3973              		.thumb
 3974              		.syntax unified
 3975              	.LBE495:
 3976              	.LBE494:
2142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3977              		.loc 1 2142 0 discriminator 1
 3978 00d6 23F04003 		bic	r3, r3, #64
 3979              	.LVL454:
 3980              	.LBB496:
 3981              	.LBB497:
 3982              		.loc 2 1123 0 discriminator 1
 3983 00da 1432     		adds	r2, r2, #20
 3984              	.LVL455:
 3985              		.syntax unified
 3986              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3987 00dc 42E80031 		strex r1, r3, [r2]
 3988              	@ 0 "" 2
 3989              	.LVL456:
 3990              		.thumb
 3991              		.syntax unified
 3992              	.LBE497:
 3993              	.LBE496:
2142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3994              		.loc 1 2142 0 discriminator 1
 3995 00e0 0029     		cmp	r1, #0
 3996 00e2 F3D1     		bne	.L224
 3997              	.LBE493:
2145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3998              		.loc 1 2145 0
 3999 00e4 A06B     		ldr	r0, [r4, #56]
 4000 00e6 40B1     		cbz	r0, .L223
2151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 4001              		.loc 1 2151 0
 4002 00e8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4003              	.LVL457:
 4004 00ec 20B1     		cbz	r0, .L229
2153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x01U;
 4005              		.loc 1 2153 0
 4006 00ee A36B     		ldr	r3, [r4, #56]
 4007 00f0 0022     		movs	r2, #0
 4008 00f2 1A65     		str	r2, [r3, #80]
 4009              	.LVL458:
2154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 4010              		.loc 1 2154 0
 4011 00f4 0125     		movs	r5, #1
 4012 00f6 00E0     		b	.L223
 4013              	.LVL459:
 4014              	.L229:
2158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 4015              		.loc 1 2158 0
 4016 00f8 0025     		movs	r5, #0
 4017              	.LVL460:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 165


 4018              	.L223:
2164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4019              		.loc 1 2164 0
 4020 00fa 65B1     		cbz	r5, .L225
2167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 4021              		.loc 1 2167 0
 4022 00fc 0023     		movs	r3, #0
 4023 00fe E384     		strh	r3, [r4, #38]	@ movhi
2168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4024              		.loc 1 2168 0
 4025 0100 E385     		strh	r3, [r4, #46]	@ movhi
2171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4026              		.loc 1 2171 0
 4027 0102 2364     		str	r3, [r4, #64]
2174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 4028              		.loc 1 2174 0
 4029 0104 2022     		movs	r2, #32
 4030 0106 84F83D20 		strb	r2, [r4, #61]
2175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4031              		.loc 1 2175 0
 4032 010a 84F83E20 		strb	r2, [r4, #62]
2176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4033              		.loc 1 2176 0
 4034 010e 2363     		str	r3, [r4, #48]
2184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4035              		.loc 1 2184 0
 4036 0110 2046     		mov	r0, r4
 4037 0112 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 4038              	.LVL461:
 4039              	.L225:
2189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4040              		.loc 1 2189 0
 4041 0116 0020     		movs	r0, #0
 4042 0118 38BD     		pop	{r3, r4, r5, pc}
 4043              	.LVL462:
 4044              	.L232:
 4045 011a 00BF     		.align	2
 4046              	.L231:
 4047 011c 00000000 		.word	UART_DMATxAbortCallback
 4048 0120 00000000 		.word	UART_DMARxAbortCallback
 4049              		.cfi_endproc
 4050              	.LFE257:
 4052              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 4053              		.align	2
 4054              		.thumb
 4055              		.thumb_func
 4057              	UART_DMARxAbortCallback:
 4058              	.LFB289:
3413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4059              		.loc 1 3413 0
 4060              		.cfi_startproc
 4061              		@ args = 0, pretend = 0, frame = 0
 4062              		@ frame_needed = 0, uses_anonymous_args = 0
 4063              	.LVL463:
 4064 0000 08B5     		push	{r3, lr}
 4065              	.LCFI36:
 4066              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 166


 4067              		.cfi_offset 3, -8
 4068              		.cfi_offset 14, -4
3414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4069              		.loc 1 3414 0
 4070 0002 806B     		ldr	r0, [r0, #56]
 4071              	.LVL464:
3416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4072              		.loc 1 3416 0
 4073 0004 836B     		ldr	r3, [r0, #56]
 4074 0006 0022     		movs	r2, #0
 4075 0008 1A65     		str	r2, [r3, #80]
3419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4076              		.loc 1 3419 0
 4077 000a 436B     		ldr	r3, [r0, #52]
 4078 000c 0BB1     		cbz	r3, .L234
3421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4079              		.loc 1 3421 0
 4080 000e 1B6D     		ldr	r3, [r3, #80]
 4081 0010 5BB9     		cbnz	r3, .L233
 4082              	.L234:
3428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 4083              		.loc 1 3428 0
 4084 0012 0023     		movs	r3, #0
 4085 0014 C384     		strh	r3, [r0, #38]	@ movhi
3429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4086              		.loc 1 3429 0
 4087 0016 C385     		strh	r3, [r0, #46]	@ movhi
3432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4088              		.loc 1 3432 0
 4089 0018 0364     		str	r3, [r0, #64]
3435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4090              		.loc 1 3435 0
 4091 001a 2022     		movs	r2, #32
 4092 001c 80F83D20 		strb	r2, [r0, #61]
3436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4093              		.loc 1 3436 0
 4094 0020 80F83E20 		strb	r2, [r0, #62]
3437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4095              		.loc 1 3437 0
 4096 0024 0363     		str	r3, [r0, #48]
3445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4097              		.loc 1 3445 0
 4098 0026 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 4099              	.LVL465:
 4100              	.L233:
 4101 002a 08BD     		pop	{r3, pc}
 4102              		.cfi_endproc
 4103              	.LFE289:
 4105              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 4106              		.align	2
 4107              		.thumb
 4108              		.thumb_func
 4110              	UART_DMATxAbortCallback:
 4111              	.LFB288:
3367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4112              		.loc 1 3367 0
 4113              		.cfi_startproc
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 167


 4114              		@ args = 0, pretend = 0, frame = 0
 4115              		@ frame_needed = 0, uses_anonymous_args = 0
 4116              	.LVL466:
 4117 0000 08B5     		push	{r3, lr}
 4118              	.LCFI37:
 4119              		.cfi_def_cfa_offset 8
 4120              		.cfi_offset 3, -8
 4121              		.cfi_offset 14, -4
3368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4122              		.loc 1 3368 0
 4123 0002 806B     		ldr	r0, [r0, #56]
 4124              	.LVL467:
3370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4125              		.loc 1 3370 0
 4126 0004 436B     		ldr	r3, [r0, #52]
 4127 0006 0022     		movs	r2, #0
 4128 0008 1A65     		str	r2, [r3, #80]
3373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4129              		.loc 1 3373 0
 4130 000a 836B     		ldr	r3, [r0, #56]
 4131 000c 0BB1     		cbz	r3, .L238
3375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4132              		.loc 1 3375 0
 4133 000e 1B6D     		ldr	r3, [r3, #80]
 4134 0010 5BB9     		cbnz	r3, .L237
 4135              	.L238:
3382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 4136              		.loc 1 3382 0
 4137 0012 0023     		movs	r3, #0
 4138 0014 C384     		strh	r3, [r0, #38]	@ movhi
3383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4139              		.loc 1 3383 0
 4140 0016 C385     		strh	r3, [r0, #46]	@ movhi
3386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4141              		.loc 1 3386 0
 4142 0018 0364     		str	r3, [r0, #64]
3389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4143              		.loc 1 3389 0
 4144 001a 2022     		movs	r2, #32
 4145 001c 80F83D20 		strb	r2, [r0, #61]
3390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4146              		.loc 1 3390 0
 4147 0020 80F83E20 		strb	r2, [r0, #62]
3391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4148              		.loc 1 3391 0
 4149 0024 0363     		str	r3, [r0, #48]
3399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4150              		.loc 1 3399 0
 4151 0026 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 4152              	.LVL468:
 4153              	.L237:
 4154 002a 08BD     		pop	{r3, pc}
 4155              		.cfi_endproc
 4156              	.LFE288:
 4158              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 4159              		.align	2
 4160              		.weak	HAL_UART_AbortTransmitCpltCallback
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 168


 4161              		.thumb
 4162              		.thumb_func
 4164              	HAL_UART_AbortTransmitCpltCallback:
 4165              	.LFB267:
2682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 4166              		.loc 1 2682 0
 4167              		.cfi_startproc
 4168              		@ args = 0, pretend = 0, frame = 0
 4169              		@ frame_needed = 0, uses_anonymous_args = 0
 4170              		@ link register save eliminated.
 4171              	.LVL469:
 4172 0000 7047     		bx	lr
 4173              		.cfi_endproc
 4174              	.LFE267:
 4176 0002 00BF     		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 4177              		.align	2
 4178              		.global	HAL_UART_AbortTransmit_IT
 4179              		.thumb
 4180              		.thumb_func
 4182              	HAL_UART_AbortTransmit_IT:
 4183              	.LFB258:
2206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 4184              		.loc 1 2206 0
 4185              		.cfi_startproc
 4186              		@ args = 0, pretend = 0, frame = 0
 4187              		@ frame_needed = 0, uses_anonymous_args = 0
 4188              	.LVL470:
2206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 4189              		.loc 1 2206 0
 4190 0000 10B5     		push	{r4, lr}
 4191              	.LCFI38:
 4192              		.cfi_def_cfa_offset 8
 4193              		.cfi_offset 4, -8
 4194              		.cfi_offset 14, -4
 4195 0002 0446     		mov	r4, r0
 4196              	.L243:
 4197              	.LBB498:
2208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4198              		.loc 1 2208 0 discriminator 1
 4199 0004 2268     		ldr	r2, [r4]
 4200              	.LVL471:
 4201              	.LBB499:
 4202              	.LBB500:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4203              		.loc 2 1072 0 discriminator 1
 4204 0006 02F10C03 		add	r3, r2, #12
 4205              	.LVL472:
 4206              		.syntax unified
 4207              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4208 000a 53E8003F 		ldrex r3, [r3]
 4209              	@ 0 "" 2
 4210              	.LVL473:
 4211              		.thumb
 4212              		.syntax unified
 4213              	.LBE500:
 4214              	.LBE499:
2208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 169


 4215              		.loc 1 2208 0 discriminator 1
 4216 000e 23F0C003 		bic	r3, r3, #192
 4217              	.LVL474:
 4218              	.LBB501:
 4219              	.LBB502:
 4220              		.loc 2 1123 0 discriminator 1
 4221 0012 0C32     		adds	r2, r2, #12
 4222              	.LVL475:
 4223              		.syntax unified
 4224              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4225 0014 42E80031 		strex r1, r3, [r2]
 4226              	@ 0 "" 2
 4227              	.LVL476:
 4228              		.thumb
 4229              		.syntax unified
 4230              	.LBE502:
 4231              	.LBE501:
2208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4232              		.loc 1 2208 0 discriminator 1
 4233 0018 0029     		cmp	r1, #0
 4234 001a F3D1     		bne	.L243
 4235              	.LBE498:
2211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4236              		.loc 1 2211 0
 4237 001c 2368     		ldr	r3, [r4]
 4238              	.LVL477:
 4239 001e 5B69     		ldr	r3, [r3, #20]
 4240 0020 13F0800F 		tst	r3, #128
 4241 0024 20D0     		beq	.L244
 4242              	.L245:
 4243              	.LBB503:
2213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4244              		.loc 1 2213 0 discriminator 1
 4245 0026 2268     		ldr	r2, [r4]
 4246              	.LVL478:
 4247              	.LBB504:
 4248              	.LBB505:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4249              		.loc 2 1072 0 discriminator 1
 4250 0028 02F11403 		add	r3, r2, #20
 4251              	.LVL479:
 4252              		.syntax unified
 4253              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4254 002c 53E8003F 		ldrex r3, [r3]
 4255              	@ 0 "" 2
 4256              	.LVL480:
 4257              		.thumb
 4258              		.syntax unified
 4259              	.LBE505:
 4260              	.LBE504:
2213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4261              		.loc 1 2213 0 discriminator 1
 4262 0030 23F08003 		bic	r3, r3, #128
 4263              	.LVL481:
 4264              	.LBB506:
 4265              	.LBB507:
 4266              		.loc 2 1123 0 discriminator 1
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 170


 4267 0034 1432     		adds	r2, r2, #20
 4268              	.LVL482:
 4269              		.syntax unified
 4270              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4271 0036 42E80031 		strex r1, r3, [r2]
 4272              	@ 0 "" 2
 4273              	.LVL483:
 4274              		.thumb
 4275              		.syntax unified
 4276              	.LBE507:
 4277              	.LBE506:
2213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4278              		.loc 1 2213 0 discriminator 1
 4279 003a 0029     		cmp	r1, #0
 4280 003c F3D1     		bne	.L245
 4281              	.LBE503:
2216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4282              		.loc 1 2216 0
 4283 003e 636B     		ldr	r3, [r4, #52]
 4284              	.LVL484:
 4285 0040 4BB1     		cbz	r3, .L246
2220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4286              		.loc 1 2220 0
 4287 0042 0E4A     		ldr	r2, .L249
 4288 0044 1A65     		str	r2, [r3, #80]
2223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 4289              		.loc 1 2223 0
 4290 0046 606B     		ldr	r0, [r4, #52]
 4291              	.LVL485:
 4292 0048 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4293              	.LVL486:
 4294 004c A0B1     		cbz	r0, .L247
2226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 4295              		.loc 1 2226 0
 4296 004e 606B     		ldr	r0, [r4, #52]
 4297 0050 036D     		ldr	r3, [r0, #80]
 4298 0052 9847     		blx	r3
 4299              	.LVL487:
 4300 0054 10E0     		b	.L247
 4301              	.LVL488:
 4302              	.L246:
2232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4303              		.loc 1 2232 0
 4304 0056 0023     		movs	r3, #0
 4305 0058 E384     		strh	r3, [r4, #38]	@ movhi
2235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4306              		.loc 1 2235 0
 4307 005a 2023     		movs	r3, #32
 4308 005c 84F83D30 		strb	r3, [r4, #61]
2243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4309              		.loc 1 2243 0
 4310 0060 2046     		mov	r0, r4
 4311              	.LVL489:
 4312 0062 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4313              	.LVL490:
 4314 0066 07E0     		b	.L247
 4315              	.LVL491:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 171


 4316              	.L244:
2250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4317              		.loc 1 2250 0
 4318 0068 0023     		movs	r3, #0
 4319 006a E384     		strh	r3, [r4, #38]	@ movhi
2253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4320              		.loc 1 2253 0
 4321 006c 2023     		movs	r3, #32
 4322 006e 84F83D30 		strb	r3, [r4, #61]
2261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4323              		.loc 1 2261 0
 4324 0072 2046     		mov	r0, r4
 4325              	.LVL492:
 4326 0074 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4327              	.LVL493:
 4328              	.L247:
2266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4329              		.loc 1 2266 0
 4330 0078 0020     		movs	r0, #0
 4331 007a 10BD     		pop	{r4, pc}
 4332              	.LVL494:
 4333              	.L250:
 4334              		.align	2
 4335              	.L249:
 4336 007c 00000000 		.word	UART_DMATxOnlyAbortCallback
 4337              		.cfi_endproc
 4338              	.LFE258:
 4340              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 4341              		.align	2
 4342              		.thumb
 4343              		.thumb_func
 4345              	UART_DMATxOnlyAbortCallback:
 4346              	.LFB290:
3459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4347              		.loc 1 3459 0
 4348              		.cfi_startproc
 4349              		@ args = 0, pretend = 0, frame = 0
 4350              		@ frame_needed = 0, uses_anonymous_args = 0
 4351              	.LVL495:
 4352 0000 08B5     		push	{r3, lr}
 4353              	.LCFI39:
 4354              		.cfi_def_cfa_offset 8
 4355              		.cfi_offset 3, -8
 4356              		.cfi_offset 14, -4
3460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4357              		.loc 1 3460 0
 4358 0002 806B     		ldr	r0, [r0, #56]
 4359              	.LVL496:
3462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4360              		.loc 1 3462 0
 4361 0004 0023     		movs	r3, #0
 4362 0006 C384     		strh	r3, [r0, #38]	@ movhi
3465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4363              		.loc 1 3465 0
 4364 0008 2023     		movs	r3, #32
 4365 000a 80F83D30 		strb	r3, [r0, #61]
3473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 172


 4366              		.loc 1 3473 0
 4367 000e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4368              	.LVL497:
 4369 0012 08BD     		pop	{r3, pc}
 4370              		.cfi_endproc
 4371              	.LFE290:
 4373              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 4374              		.align	2
 4375              		.weak	HAL_UART_AbortReceiveCpltCallback
 4376              		.thumb
 4377              		.thumb_func
 4379              	HAL_UART_AbortReceiveCpltCallback:
 4380              	.LFB268:
2697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 4381              		.loc 1 2697 0
 4382              		.cfi_startproc
 4383              		@ args = 0, pretend = 0, frame = 0
 4384              		@ frame_needed = 0, uses_anonymous_args = 0
 4385              		@ link register save eliminated.
 4386              	.LVL498:
 4387 0000 7047     		bx	lr
 4388              		.cfi_endproc
 4389              	.LFE268:
 4391 0002 00BF     		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 4392              		.align	2
 4393              		.global	HAL_UART_AbortReceive_IT
 4394              		.thumb
 4395              		.thumb_func
 4397              	HAL_UART_AbortReceive_IT:
 4398              	.LFB259:
2283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 4399              		.loc 1 2283 0
 4400              		.cfi_startproc
 4401              		@ args = 0, pretend = 0, frame = 0
 4402              		@ frame_needed = 0, uses_anonymous_args = 0
 4403              	.LVL499:
2283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 4404              		.loc 1 2283 0
 4405 0000 10B5     		push	{r4, lr}
 4406              	.LCFI40:
 4407              		.cfi_def_cfa_offset 8
 4408              		.cfi_offset 4, -8
 4409              		.cfi_offset 14, -4
 4410 0002 0446     		mov	r4, r0
 4411              	.L255:
 4412              	.LBB508:
2285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4413              		.loc 1 2285 0 discriminator 1
 4414 0004 2268     		ldr	r2, [r4]
 4415              	.LVL500:
 4416              	.LBB509:
 4417              	.LBB510:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4418              		.loc 2 1072 0 discriminator 1
 4419 0006 02F10C03 		add	r3, r2, #12
 4420              	.LVL501:
 4421              		.syntax unified
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 173


 4422              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4423 000a 53E8003F 		ldrex r3, [r3]
 4424              	@ 0 "" 2
 4425              	.LVL502:
 4426              		.thumb
 4427              		.syntax unified
 4428              	.LBE510:
 4429              	.LBE509:
2285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4430              		.loc 1 2285 0 discriminator 1
 4431 000e 23F49073 		bic	r3, r3, #288
 4432              	.LVL503:
 4433              	.LBB511:
 4434              	.LBB512:
 4435              		.loc 2 1123 0 discriminator 1
 4436 0012 0C32     		adds	r2, r2, #12
 4437              	.LVL504:
 4438              		.syntax unified
 4439              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4440 0014 42E80031 		strex r1, r3, [r2]
 4441              	@ 0 "" 2
 4442              	.LVL505:
 4443              		.thumb
 4444              		.syntax unified
 4445              	.LBE512:
 4446              	.LBE511:
2285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4447              		.loc 1 2285 0 discriminator 1
 4448 0018 0029     		cmp	r1, #0
 4449 001a F3D1     		bne	.L255
 4450              	.LVL506:
 4451              	.L256:
 4452              	.LBE508:
 4453              	.LBB513:
2286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4454              		.loc 1 2286 0 discriminator 1
 4455 001c 2268     		ldr	r2, [r4]
 4456              	.LVL507:
 4457              	.LBB514:
 4458              	.LBB515:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4459              		.loc 2 1072 0 discriminator 1
 4460 001e 02F11403 		add	r3, r2, #20
 4461              	.LVL508:
 4462              		.syntax unified
 4463              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4464 0022 53E8003F 		ldrex r3, [r3]
 4465              	@ 0 "" 2
 4466              	.LVL509:
 4467              		.thumb
 4468              		.syntax unified
 4469              	.LBE515:
 4470              	.LBE514:
2286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4471              		.loc 1 2286 0 discriminator 1
 4472 0026 23F00103 		bic	r3, r3, #1
 4473              	.LVL510:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 174


 4474              	.LBB516:
 4475              	.LBB517:
 4476              		.loc 2 1123 0 discriminator 1
 4477 002a 1432     		adds	r2, r2, #20
 4478              	.LVL511:
 4479              		.syntax unified
 4480              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4481 002c 42E80031 		strex r1, r3, [r2]
 4482              	@ 0 "" 2
 4483              	.LVL512:
 4484              		.thumb
 4485              		.syntax unified
 4486              	.LBE517:
 4487              	.LBE516:
2286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4488              		.loc 1 2286 0 discriminator 1
 4489 0030 0029     		cmp	r1, #0
 4490 0032 F3D1     		bne	.L256
 4491              	.LBE513:
2289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4492              		.loc 1 2289 0
 4493 0034 236B     		ldr	r3, [r4, #48]
 4494              	.LVL513:
 4495 0036 012B     		cmp	r3, #1
 4496 0038 0BD1     		bne	.L257
 4497              	.L258:
 4498              	.LBB518:
2291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 4499              		.loc 1 2291 0 discriminator 1
 4500 003a 2268     		ldr	r2, [r4]
 4501              	.LVL514:
 4502              	.LBB519:
 4503              	.LBB520:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4504              		.loc 2 1072 0 discriminator 1
 4505 003c 02F10C03 		add	r3, r2, #12
 4506              	.LVL515:
 4507              		.syntax unified
 4508              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4509 0040 53E8003F 		ldrex r3, [r3]
 4510              	@ 0 "" 2
 4511              	.LVL516:
 4512              		.thumb
 4513              		.syntax unified
 4514              	.LBE520:
 4515              	.LBE519:
2291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 4516              		.loc 1 2291 0 discriminator 1
 4517 0044 23F01003 		bic	r3, r3, #16
 4518              	.LVL517:
 4519              	.LBB521:
 4520              	.LBB522:
 4521              		.loc 2 1123 0 discriminator 1
 4522 0048 0C32     		adds	r2, r2, #12
 4523              	.LVL518:
 4524              		.syntax unified
 4525              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 175


 4526 004a 42E80031 		strex r1, r3, [r2]
 4527              	@ 0 "" 2
 4528              	.LVL519:
 4529              		.thumb
 4530              		.syntax unified
 4531              	.LBE522:
 4532              	.LBE521:
2291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 4533              		.loc 1 2291 0 discriminator 1
 4534 004e 0029     		cmp	r1, #0
 4535 0050 F3D1     		bne	.L258
 4536              	.LVL520:
 4537              	.L257:
 4538              	.LBE518:
2295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4539              		.loc 1 2295 0
 4540 0052 2368     		ldr	r3, [r4]
 4541 0054 5B69     		ldr	r3, [r3, #20]
 4542 0056 13F0400F 		tst	r3, #64
 4543 005a 21D0     		beq	.L259
 4544              	.L260:
 4545              	.LBB523:
2297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4546              		.loc 1 2297 0 discriminator 1
 4547 005c 2268     		ldr	r2, [r4]
 4548              	.LVL521:
 4549              	.LBB524:
 4550              	.LBB525:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4551              		.loc 2 1072 0 discriminator 1
 4552 005e 02F11403 		add	r3, r2, #20
 4553              	.LVL522:
 4554              		.syntax unified
 4555              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4556 0062 53E8003F 		ldrex r3, [r3]
 4557              	@ 0 "" 2
 4558              	.LVL523:
 4559              		.thumb
 4560              		.syntax unified
 4561              	.LBE525:
 4562              	.LBE524:
2297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4563              		.loc 1 2297 0 discriminator 1
 4564 0066 23F04003 		bic	r3, r3, #64
 4565              	.LVL524:
 4566              	.LBB526:
 4567              	.LBB527:
 4568              		.loc 2 1123 0 discriminator 1
 4569 006a 1432     		adds	r2, r2, #20
 4570              	.LVL525:
 4571              		.syntax unified
 4572              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4573 006c 42E80031 		strex r1, r3, [r2]
 4574              	@ 0 "" 2
 4575              	.LVL526:
 4576              		.thumb
 4577              		.syntax unified
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 176


 4578              	.LBE527:
 4579              	.LBE526:
2297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4580              		.loc 1 2297 0 discriminator 1
 4581 0070 0029     		cmp	r1, #0
 4582 0072 F3D1     		bne	.L260
 4583              	.LBE523:
2300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4584              		.loc 1 2300 0
 4585 0074 A36B     		ldr	r3, [r4, #56]
 4586              	.LVL527:
 4587 0076 4BB1     		cbz	r3, .L261
2304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4588              		.loc 1 2304 0
 4589 0078 0F4A     		ldr	r2, .L264
 4590 007a 1A65     		str	r2, [r3, #80]
2307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 4591              		.loc 1 2307 0
 4592 007c A06B     		ldr	r0, [r4, #56]
 4593              	.LVL528:
 4594 007e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4595              	.LVL529:
 4596 0082 B0B1     		cbz	r0, .L262
2310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 4597              		.loc 1 2310 0
 4598 0084 A06B     		ldr	r0, [r4, #56]
 4599 0086 036D     		ldr	r3, [r0, #80]
 4600 0088 9847     		blx	r3
 4601              	.LVL530:
 4602 008a 12E0     		b	.L262
 4603              	.LVL531:
 4604              	.L261:
2316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4605              		.loc 1 2316 0
 4606 008c 0023     		movs	r3, #0
 4607 008e E385     		strh	r3, [r4, #46]	@ movhi
2319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4608              		.loc 1 2319 0
 4609 0090 2022     		movs	r2, #32
 4610 0092 84F83E20 		strb	r2, [r4, #62]
2320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4611              		.loc 1 2320 0
 4612 0096 2363     		str	r3, [r4, #48]
2328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4613              		.loc 1 2328 0
 4614 0098 2046     		mov	r0, r4
 4615              	.LVL532:
 4616 009a FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 4617              	.LVL533:
 4618 009e 08E0     		b	.L262
 4619              	.LVL534:
 4620              	.L259:
2335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4621              		.loc 1 2335 0
 4622 00a0 0023     		movs	r3, #0
 4623 00a2 E385     		strh	r3, [r4, #46]	@ movhi
2338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 177


 4624              		.loc 1 2338 0
 4625 00a4 2022     		movs	r2, #32
 4626 00a6 84F83E20 		strb	r2, [r4, #62]
2339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4627              		.loc 1 2339 0
 4628 00aa 2363     		str	r3, [r4, #48]
2347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4629              		.loc 1 2347 0
 4630 00ac 2046     		mov	r0, r4
 4631              	.LVL535:
 4632 00ae FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 4633              	.LVL536:
 4634              	.L262:
2352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4635              		.loc 1 2352 0
 4636 00b2 0020     		movs	r0, #0
 4637 00b4 10BD     		pop	{r4, pc}
 4638              	.LVL537:
 4639              	.L265:
 4640 00b6 00BF     		.align	2
 4641              	.L264:
 4642 00b8 00000000 		.word	UART_DMARxOnlyAbortCallback
 4643              		.cfi_endproc
 4644              	.LFE259:
 4646              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 4647              		.align	2
 4648              		.thumb
 4649              		.thumb_func
 4651              	UART_DMARxOnlyAbortCallback:
 4652              	.LFB291:
3487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 4653              		.loc 1 3487 0
 4654              		.cfi_startproc
 4655              		@ args = 0, pretend = 0, frame = 0
 4656              		@ frame_needed = 0, uses_anonymous_args = 0
 4657              	.LVL538:
 4658 0000 08B5     		push	{r3, lr}
 4659              	.LCFI41:
 4660              		.cfi_def_cfa_offset 8
 4661              		.cfi_offset 3, -8
 4662              		.cfi_offset 14, -4
3488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4663              		.loc 1 3488 0
 4664 0002 806B     		ldr	r0, [r0, #56]
 4665              	.LVL539:
3490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4666              		.loc 1 3490 0
 4667 0004 0023     		movs	r3, #0
 4668 0006 C385     		strh	r3, [r0, #46]	@ movhi
3493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4669              		.loc 1 3493 0
 4670 0008 2022     		movs	r2, #32
 4671 000a 80F83E20 		strb	r2, [r0, #62]
3494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4672              		.loc 1 3494 0
 4673 000e 0363     		str	r3, [r0, #48]
3502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 178


 4674              		.loc 1 3502 0
 4675 0010 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 4676              	.LVL540:
 4677 0014 08BD     		pop	{r3, pc}
 4678              		.cfi_endproc
 4679              	.LFE291:
 4681 0016 00BF     		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 4682              		.align	2
 4683              		.weak	HAL_UARTEx_RxEventCallback
 4684              		.thumb
 4685              		.thumb_func
 4687              	HAL_UARTEx_RxEventCallback:
 4688              	.LFB269:
2714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 4689              		.loc 1 2714 0
 4690              		.cfi_startproc
 4691              		@ args = 0, pretend = 0, frame = 0
 4692              		@ frame_needed = 0, uses_anonymous_args = 0
 4693              		@ link register save eliminated.
 4694              	.LVL541:
 4695 0000 7047     		bx	lr
 4696              		.cfi_endproc
 4697              	.LFE269:
 4699 0002 00BF     		.section	.text.UART_Receive_IT,"ax",%progbits
 4700              		.align	2
 4701              		.thumb
 4702              		.thumb_func
 4704              	UART_Receive_IT:
 4705              	.LFB294:
3578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint8_t  *pdata8bits;
 4706              		.loc 1 3578 0
 4707              		.cfi_startproc
 4708              		@ args = 0, pretend = 0, frame = 8
 4709              		@ frame_needed = 0, uses_anonymous_args = 0
 4710              	.LVL542:
3578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint8_t  *pdata8bits;
 4711              		.loc 1 3578 0
 4712 0000 00B5     		push	{lr}
 4713              	.LCFI42:
 4714              		.cfi_def_cfa_offset 4
 4715              		.cfi_offset 14, -4
 4716 0002 83B0     		sub	sp, sp, #12
 4717              	.LCFI43:
 4718              		.cfi_def_cfa_offset 16
3583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4719              		.loc 1 3583 0
 4720 0004 90F83E30 		ldrb	r3, [r0, #62]	@ zero_extendqisi2
 4721 0008 DBB2     		uxtb	r3, r3
 4722 000a 222B     		cmp	r3, #34
 4723 000c 61D1     		bne	.L279
3585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4724              		.loc 1 3585 0
 4725 000e 8368     		ldr	r3, [r0, #8]
 4726 0010 B3F5805F 		cmp	r3, #4096
 4727 0014 0BD1     		bne	.L271
3585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4728              		.loc 1 3585 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 179


 4729 0016 0269     		ldr	r2, [r0, #16]
 4730 0018 4AB9     		cbnz	r2, .L271
 4731              	.LVL543:
3588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 4732              		.loc 1 3588 0 is_stmt 1
 4733 001a 826A     		ldr	r2, [r0, #40]
 4734              	.LVL544:
3589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->pRxBuffPtr += 2U;
 4735              		.loc 1 3589 0
 4736 001c 0368     		ldr	r3, [r0]
 4737 001e 5B68     		ldr	r3, [r3, #4]
 4738 0020 C3F30803 		ubfx	r3, r3, #0, #9
 4739 0024 1380     		strh	r3, [r2]	@ movhi
3590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 4740              		.loc 1 3590 0
 4741 0026 836A     		ldr	r3, [r0, #40]
 4742 0028 0233     		adds	r3, r3, #2
 4743 002a 8362     		str	r3, [r0, #40]
 4744 002c 12E0     		b	.L272
 4745              	.LVL545:
 4746              	.L271:
3594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits  = NULL;
 4747              		.loc 1 3594 0
 4748 002e 826A     		ldr	r2, [r0, #40]
 4749              	.LVL546:
3597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 4750              		.loc 1 3597 0
 4751 0030 B3F5805F 		cmp	r3, #4096
 4752 0034 02D0     		beq	.L273
3597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 4753              		.loc 1 3597 0 is_stmt 0 discriminator 1
 4754 0036 2BB9     		cbnz	r3, .L274
3597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 4755              		.loc 1 3597 0 discriminator 2
 4756 0038 0369     		ldr	r3, [r0, #16]
 4757 003a 1BB9     		cbnz	r3, .L274
 4758              	.L273:
3599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 4759              		.loc 1 3599 0 is_stmt 1
 4760 003c 0368     		ldr	r3, [r0]
 4761 003e 5B68     		ldr	r3, [r3, #4]
 4762 0040 1370     		strb	r3, [r2]
 4763 0042 04E0     		b	.L275
 4764              	.L274:
3603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 4765              		.loc 1 3603 0
 4766 0044 0368     		ldr	r3, [r0]
 4767 0046 5B68     		ldr	r3, [r3, #4]
 4768 0048 03F07F03 		and	r3, r3, #127
 4769 004c 1370     		strb	r3, [r2]
 4770              	.L275:
3605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 4771              		.loc 1 3605 0
 4772 004e 836A     		ldr	r3, [r0, #40]
 4773 0050 0133     		adds	r3, r3, #1
 4774 0052 8362     		str	r3, [r0, #40]
 4775              	.LVL547:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 180


 4776              	.L272:
3608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4777              		.loc 1 3608 0
 4778 0054 C38D     		ldrh	r3, [r0, #46]
 4779 0056 9BB2     		uxth	r3, r3
 4780 0058 013B     		subs	r3, r3, #1
 4781 005a 9BB2     		uxth	r3, r3
 4782 005c C385     		strh	r3, [r0, #46]	@ movhi
 4783 005e 002B     		cmp	r3, #0
 4784 0060 39D1     		bne	.L280
3611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4785              		.loc 1 3611 0
 4786 0062 0268     		ldr	r2, [r0]
 4787 0064 D368     		ldr	r3, [r2, #12]
 4788 0066 23F02003 		bic	r3, r3, #32
 4789 006a D360     		str	r3, [r2, #12]
3614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4790              		.loc 1 3614 0
 4791 006c 0268     		ldr	r2, [r0]
 4792 006e D368     		ldr	r3, [r2, #12]
 4793 0070 23F48073 		bic	r3, r3, #256
 4794 0074 D360     		str	r3, [r2, #12]
3617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4795              		.loc 1 3617 0
 4796 0076 0268     		ldr	r2, [r0]
 4797 0078 5369     		ldr	r3, [r2, #20]
 4798 007a 23F00103 		bic	r3, r3, #1
 4799 007e 5361     		str	r3, [r2, #20]
3620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4800              		.loc 1 3620 0
 4801 0080 2023     		movs	r3, #32
 4802 0082 80F83E30 		strb	r3, [r0, #62]
3624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 4803              		.loc 1 3624 0
 4804 0086 036B     		ldr	r3, [r0, #48]
 4805 0088 012B     		cmp	r3, #1
 4806 008a 1ED1     		bne	.L276
3627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4807              		.loc 1 3627 0
 4808 008c 0023     		movs	r3, #0
 4809 008e 0363     		str	r3, [r0, #48]
 4810              	.L277:
 4811              	.LBB528:
3630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4812              		.loc 1 3630 0 discriminator 1
 4813 0090 0268     		ldr	r2, [r0]
 4814              	.LVL548:
 4815              	.LBB529:
 4816              	.LBB530:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4817              		.loc 2 1072 0 discriminator 1
 4818 0092 02F10C03 		add	r3, r2, #12
 4819              	.LVL549:
 4820              		.syntax unified
 4821              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4822 0096 53E8003F 		ldrex r3, [r3]
 4823              	@ 0 "" 2
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 181


 4824              	.LVL550:
 4825              		.thumb
 4826              		.syntax unified
 4827              	.LBE530:
 4828              	.LBE529:
3630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4829              		.loc 1 3630 0 discriminator 1
 4830 009a 23F01003 		bic	r3, r3, #16
 4831              	.LVL551:
 4832              	.LBB531:
 4833              	.LBB532:
 4834              		.loc 2 1123 0 discriminator 1
 4835 009e 0C32     		adds	r2, r2, #12
 4836              	.LVL552:
 4837              		.syntax unified
 4838              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4839 00a0 42E80031 		strex r1, r3, [r2]
 4840              	@ 0 "" 2
 4841              	.LVL553:
 4842              		.thumb
 4843              		.syntax unified
 4844              	.LBE532:
 4845              	.LBE531:
3630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4846              		.loc 1 3630 0 discriminator 1
 4847 00a4 0029     		cmp	r1, #0
 4848 00a6 F3D1     		bne	.L277
 4849              	.LBE528:
3633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 4850              		.loc 1 3633 0
 4851 00a8 0368     		ldr	r3, [r0]
 4852              	.LVL554:
 4853 00aa 1A68     		ldr	r2, [r3]
 4854 00ac 12F0100F 		tst	r2, #16
 4855 00b0 06D0     		beq	.L278
 4856              	.LBB533:
3636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 4857              		.loc 1 3636 0
 4858 00b2 0022     		movs	r2, #0
 4859 00b4 0192     		str	r2, [sp, #4]
 4860 00b6 1A68     		ldr	r2, [r3]
 4861 00b8 0192     		str	r2, [sp, #4]
 4862 00ba 5B68     		ldr	r3, [r3, #4]
 4863 00bc 0193     		str	r3, [sp, #4]
 4864 00be 019B     		ldr	r3, [sp, #4]
 4865              	.L278:
 4866              	.LBE533:
3644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4867              		.loc 1 3644 0
 4868 00c0 818D     		ldrh	r1, [r0, #44]
 4869 00c2 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 4870              	.LVL555:
3659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 4871              		.loc 1 3659 0
 4872 00c6 0020     		movs	r0, #0
 4873 00c8 06E0     		b	.L270
 4874              	.LVL556:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 182


 4875              	.L276:
3655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 4876              		.loc 1 3655 0
 4877 00ca FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 4878              	.LVL557:
3659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 4879              		.loc 1 3659 0
 4880 00ce 0020     		movs	r0, #0
 4881 00d0 02E0     		b	.L270
 4882              	.LVL558:
 4883              	.L279:
3665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 4884              		.loc 1 3665 0
 4885 00d2 0220     		movs	r0, #2
 4886              	.LVL559:
 4887 00d4 00E0     		b	.L270
 4888              	.LVL560:
 4889              	.L280:
3661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 4890              		.loc 1 3661 0
 4891 00d6 0020     		movs	r0, #0
 4892              	.LVL561:
 4893              	.L270:
3667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4894              		.loc 1 3667 0
 4895 00d8 03B0     		add	sp, sp, #12
 4896              	.LCFI44:
 4897              		.cfi_def_cfa_offset 4
 4898              		@ sp needed
 4899 00da 5DF804FB 		ldr	pc, [sp], #4
 4900              		.cfi_endproc
 4901              	.LFE294:
 4903 00de 00BF     		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 4904              		.align	2
 4905              		.global	HAL_UART_IRQHandler
 4906              		.thumb
 4907              		.thumb_func
 4909              	HAL_UART_IRQHandler:
 4910              	.LFB260:
2361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->SR);
 4911              		.loc 1 2361 0
 4912              		.cfi_startproc
 4913              		@ args = 0, pretend = 0, frame = 8
 4914              		@ frame_needed = 0, uses_anonymous_args = 0
 4915              	.LVL562:
 4916 0000 30B5     		push	{r4, r5, lr}
 4917              	.LCFI45:
 4918              		.cfi_def_cfa_offset 12
 4919              		.cfi_offset 4, -12
 4920              		.cfi_offset 5, -8
 4921              		.cfi_offset 14, -4
 4922 0002 83B0     		sub	sp, sp, #12
 4923              	.LCFI46:
 4924              		.cfi_def_cfa_offset 24
 4925 0004 0446     		mov	r4, r0
2362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 4926              		.loc 1 2362 0
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 183


 4927 0006 0268     		ldr	r2, [r0]
 4928 0008 1368     		ldr	r3, [r2]
 4929              	.LVL563:
2363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 4930              		.loc 1 2363 0
 4931 000a D068     		ldr	r0, [r2, #12]
 4932              	.LVL564:
2364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t errorflags = 0x00U;
 4933              		.loc 1 2364 0
 4934 000c 5169     		ldr	r1, [r2, #20]
 4935              	.LVL565:
2370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4936              		.loc 1 2370 0
 4937 000e 13F00F05 		ands	r5, r3, #15
 4938              	.LVL566:
 4939 0012 09D1     		bne	.L283
2373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4940              		.loc 1 2373 0
 4941 0014 13F0200F 		tst	r3, #32
 4942 0018 06D0     		beq	.L283
2373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4943              		.loc 1 2373 0 is_stmt 0 discriminator 1
 4944 001a 10F0200F 		tst	r0, #32
 4945 001e 03D0     		beq	.L283
2375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
 4946              		.loc 1 2375 0 is_stmt 1
 4947 0020 2046     		mov	r0, r4
 4948              	.LVL567:
 4949 0022 FFF7FEFF 		bl	UART_Receive_IT
 4950              	.LVL568:
2376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 4951              		.loc 1 2376 0
 4952 0026 25E1     		b	.L282
 4953              	.LVL569:
 4954              	.L283:
2381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                 || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 4955              		.loc 1 2381 0
 4956 0028 002D     		cmp	r5, #0
 4957 002a 70D0     		beq	.L285
2381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                 || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 4958              		.loc 1 2381 0 is_stmt 0 discriminator 1
 4959 002c 11F00101 		ands	r1, r1, #1
 4960              	.LVL570:
 4961 0030 02D1     		bne	.L286
2382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4962              		.loc 1 2382 0 is_stmt 1
 4963 0032 10F4907F 		tst	r0, #288
 4964 0036 6AD0     		beq	.L285
 4965              	.L286:
2385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4966              		.loc 1 2385 0
 4967 0038 13F0010F 		tst	r3, #1
 4968 003c 06D0     		beq	.L287
2385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4969              		.loc 1 2385 0 is_stmt 0 discriminator 1
 4970 003e 10F4807F 		tst	r0, #256
 4971 0042 03D0     		beq	.L287
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 184


2387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 4972              		.loc 1 2387 0 is_stmt 1
 4973 0044 226C     		ldr	r2, [r4, #64]
 4974 0046 42F00102 		orr	r2, r2, #1
 4975 004a 2264     		str	r2, [r4, #64]
 4976              	.L287:
2391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4977              		.loc 1 2391 0
 4978 004c 13F0040F 		tst	r3, #4
 4979 0050 04D0     		beq	.L288
2391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4980              		.loc 1 2391 0 is_stmt 0 discriminator 1
 4981 0052 19B1     		cbz	r1, .L288
2393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 4982              		.loc 1 2393 0 is_stmt 1
 4983 0054 226C     		ldr	r2, [r4, #64]
 4984 0056 42F00202 		orr	r2, r2, #2
 4985 005a 2264     		str	r2, [r4, #64]
 4986              	.L288:
2397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4987              		.loc 1 2397 0
 4988 005c 13F0020F 		tst	r3, #2
 4989 0060 04D0     		beq	.L289
2397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4990              		.loc 1 2397 0 is_stmt 0 discriminator 1
 4991 0062 19B1     		cbz	r1, .L289
2399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 4992              		.loc 1 2399 0 is_stmt 1
 4993 0064 226C     		ldr	r2, [r4, #64]
 4994 0066 42F00402 		orr	r2, r2, #4
 4995 006a 2264     		str	r2, [r4, #64]
 4996              	.L289:
2403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                                  || ((cr3its & USART_CR3_EIE) != RESET)))
 4997              		.loc 1 2403 0
 4998 006c 13F0080F 		tst	r3, #8
 4999 0070 07D0     		beq	.L290
2403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                                  || ((cr3its & USART_CR3_EIE) != RESET)))
 5000              		.loc 1 2403 0 is_stmt 0 discriminator 1
 5001 0072 10F0200F 		tst	r0, #32
 5002 0076 00D1     		bne	.L291
2404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 5003              		.loc 1 2404 0 is_stmt 1
 5004 0078 19B1     		cbz	r1, .L290
 5005              	.L291:
2406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 5006              		.loc 1 2406 0
 5007 007a 226C     		ldr	r2, [r4, #64]
 5008 007c 42F00802 		orr	r2, r2, #8
 5009 0080 2264     		str	r2, [r4, #64]
 5010              	.L290:
2410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 5011              		.loc 1 2410 0
 5012 0082 226C     		ldr	r2, [r4, #64]
 5013 0084 002A     		cmp	r2, #0
 5014 0086 00F0F580 		beq	.L282
2413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 5015              		.loc 1 2413 0
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 185


 5016 008a 13F0200F 		tst	r3, #32
 5017 008e 05D0     		beq	.L292
2413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 5018              		.loc 1 2413 0 is_stmt 0 discriminator 1
 5019 0090 10F0200F 		tst	r0, #32
 5020 0094 02D0     		beq	.L292
2415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 5021              		.loc 1 2415 0 is_stmt 1
 5022 0096 2046     		mov	r0, r4
 5023              	.LVL571:
 5024 0098 FFF7FEFF 		bl	UART_Receive_IT
 5025              	.LVL572:
 5026              	.L292:
2420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 5027              		.loc 1 2420 0
 5028 009c 2368     		ldr	r3, [r4]
 5029 009e 5B69     		ldr	r3, [r3, #20]
 5030 00a0 03F04003 		and	r3, r3, #64
 5031              	.LVL573:
2421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 5032              		.loc 1 2421 0
 5033 00a4 226C     		ldr	r2, [r4, #64]
 5034 00a6 12F0080F 		tst	r2, #8
 5035 00aa 00D1     		bne	.L293
2421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 5036              		.loc 1 2421 0 is_stmt 0 discriminator 1
 5037 00ac 4BB3     		cbz	r3, .L294
 5038              	.L293:
2426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5039              		.loc 1 2426 0 is_stmt 1
 5040 00ae 2046     		mov	r0, r4
 5041 00b0 FFF7FEFF 		bl	UART_EndRxTransfer
 5042              	.LVL574:
2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 5043              		.loc 1 2429 0
 5044 00b4 2368     		ldr	r3, [r4]
 5045 00b6 5B69     		ldr	r3, [r3, #20]
 5046 00b8 13F0400F 		tst	r3, #64
 5047 00bc 1DD0     		beq	.L295
 5048              	.L296:
 5049              	.LBB534:
2431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5050              		.loc 1 2431 0 discriminator 1
 5051 00be 2268     		ldr	r2, [r4]
 5052              	.LVL575:
 5053              	.LBB535:
 5054              	.LBB536:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5055              		.loc 2 1072 0 discriminator 1
 5056 00c0 02F11403 		add	r3, r2, #20
 5057              	.LVL576:
 5058              		.syntax unified
 5059              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5060 00c4 53E8003F 		ldrex r3, [r3]
 5061              	@ 0 "" 2
 5062              	.LVL577:
 5063              		.thumb
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 186


 5064              		.syntax unified
 5065              	.LBE536:
 5066              	.LBE535:
2431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5067              		.loc 1 2431 0 discriminator 1
 5068 00c8 23F04003 		bic	r3, r3, #64
 5069              	.LVL578:
 5070              	.LBB537:
 5071              	.LBB538:
 5072              		.loc 2 1123 0 discriminator 1
 5073 00cc 1432     		adds	r2, r2, #20
 5074              	.LVL579:
 5075              		.syntax unified
 5076              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5077 00ce 42E80031 		strex r1, r3, [r2]
 5078              	@ 0 "" 2
 5079              	.LVL580:
 5080              		.thumb
 5081              		.syntax unified
 5082              	.LBE538:
 5083              	.LBE537:
2431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5084              		.loc 1 2431 0 discriminator 1
 5085 00d2 0029     		cmp	r1, #0
 5086 00d4 F3D1     		bne	.L296
 5087              	.LBE534:
2434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
 5088              		.loc 1 2434 0
 5089 00d6 A36B     		ldr	r3, [r4, #56]
 5090              	.LVL581:
 5091 00d8 5BB1     		cbz	r3, .L297
2438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 5092              		.loc 1 2438 0
 5093 00da 674A     		ldr	r2, .L310
 5094 00dc 1A65     		str	r2, [r3, #80]
2439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             {
 5095              		.loc 1 2439 0
 5096 00de A06B     		ldr	r0, [r4, #56]
 5097 00e0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5098              	.LVL582:
 5099 00e4 0028     		cmp	r0, #0
 5100 00e6 00F0C580 		beq	.L282
2442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             }
 5101              		.loc 1 2442 0
 5102 00ea A06B     		ldr	r0, [r4, #56]
 5103 00ec 036D     		ldr	r3, [r0, #80]
 5104 00ee 9847     		blx	r3
 5105              	.LVL583:
 5106 00f0 C0E0     		b	.L282
 5107              	.L297:
2453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5108              		.loc 1 2453 0
 5109 00f2 2046     		mov	r0, r4
 5110 00f4 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 5111              	.LVL584:
 5112 00f8 BCE0     		b	.L282
 5113              	.L295:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 187


2465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5114              		.loc 1 2465 0
 5115 00fa 2046     		mov	r0, r4
 5116 00fc FFF7FEFF 		bl	HAL_UART_ErrorCallback
 5117              	.LVL585:
 5118 0100 B8E0     		b	.L282
 5119              	.LVL586:
 5120              	.L294:
2478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5121              		.loc 1 2478 0
 5122 0102 2046     		mov	r0, r4
 5123 0104 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 5124              	.LVL587:
2481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 5125              		.loc 1 2481 0
 5126 0108 0023     		movs	r3, #0
 5127 010a 2364     		str	r3, [r4, #64]
 5128 010c B2E0     		b	.L282
 5129              	.LVL588:
 5130              	.L285:
2489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       && ((isrflags & USART_SR_IDLE) != 0U)
 5131              		.loc 1 2489 0
 5132 010e 216B     		ldr	r1, [r4, #48]
 5133 0110 0129     		cmp	r1, #1
 5134 0112 40F09C80 		bne	.L298
2490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       && ((cr1its & USART_SR_IDLE) != 0U))
 5135              		.loc 1 2490 0
 5136 0116 13F0100F 		tst	r3, #16
 5137 011a 00F09880 		beq	.L298
2491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 5138              		.loc 1 2491 0
 5139 011e 10F0100F 		tst	r0, #16
 5140 0122 00F09480 		beq	.L298
 5141              	.LBB539:
2493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5142              		.loc 1 2493 0
 5143 0126 0023     		movs	r3, #0
 5144              	.LVL589:
 5145 0128 0193     		str	r3, [sp, #4]
 5146 012a 1368     		ldr	r3, [r2]
 5147 012c 0193     		str	r3, [sp, #4]
 5148 012e 5368     		ldr	r3, [r2, #4]
 5149 0130 0193     		str	r3, [sp, #4]
 5150 0132 019B     		ldr	r3, [sp, #4]
 5151              	.LBE539:
2496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 5152              		.loc 1 2496 0
 5153 0134 5369     		ldr	r3, [r2, #20]
 5154 0136 13F0400F 		tst	r3, #64
 5155 013a 50D0     		beq	.L299
 5156              	.LBB540:
2502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if ((nb_remaining_rx_data > 0U)
 5157              		.loc 1 2502 0
 5158 013c A26B     		ldr	r2, [r4, #56]
 5159 013e 1368     		ldr	r3, [r2]
 5160 0140 5B68     		ldr	r3, [r3, #4]
 5161 0142 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 188


 5162              	.LVL590:
2503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           && (nb_remaining_rx_data < huart->RxXferSize))
 5163              		.loc 1 2503 0
 5164 0144 002B     		cmp	r3, #0
 5165 0146 00F09580 		beq	.L282
2504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 5166              		.loc 1 2504 0
 5167 014a A18D     		ldrh	r1, [r4, #44]
 5168 014c 8B42     		cmp	r3, r1
 5169 014e 80F09180 		bcs	.L282
2507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5170              		.loc 1 2507 0
 5171 0152 E385     		strh	r3, [r4, #46]	@ movhi
2510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 5172              		.loc 1 2510 0
 5173 0154 D369     		ldr	r3, [r2, #28]
 5174              	.LVL591:
 5175 0156 B3F5807F 		cmp	r3, #256
 5176 015a 37D0     		beq	.L300
 5177              	.L301:
 5178              	.LBB541:
2513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5179              		.loc 1 2513 0 discriminator 1
 5180 015c 2268     		ldr	r2, [r4]
 5181              	.LVL592:
 5182              	.LBB542:
 5183              	.LBB543:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5184              		.loc 2 1072 0 discriminator 1
 5185 015e 02F10C03 		add	r3, r2, #12
 5186              	.LVL593:
 5187              		.syntax unified
 5188              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5189 0162 53E8003F 		ldrex r3, [r3]
 5190              	@ 0 "" 2
 5191              	.LVL594:
 5192              		.thumb
 5193              		.syntax unified
 5194              	.LBE543:
 5195              	.LBE542:
2513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5196              		.loc 1 2513 0 discriminator 1
 5197 0166 23F48073 		bic	r3, r3, #256
 5198              	.LVL595:
 5199              	.LBB544:
 5200              	.LBB545:
 5201              		.loc 2 1123 0 discriminator 1
 5202 016a 0C32     		adds	r2, r2, #12
 5203              	.LVL596:
 5204              		.syntax unified
 5205              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5206 016c 42E80031 		strex r1, r3, [r2]
 5207              	@ 0 "" 2
 5208              	.LVL597:
 5209              		.thumb
 5210              		.syntax unified
 5211              	.LBE545:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 189


 5212              	.LBE544:
2513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5213              		.loc 1 2513 0 discriminator 1
 5214 0170 0029     		cmp	r1, #0
 5215 0172 F3D1     		bne	.L301
 5216              	.LVL598:
 5217              	.L302:
 5218              	.LBE541:
 5219              	.LBB546:
2514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5220              		.loc 1 2514 0 discriminator 1
 5221 0174 2268     		ldr	r2, [r4]
 5222              	.LVL599:
 5223              	.LBB547:
 5224              	.LBB548:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5225              		.loc 2 1072 0 discriminator 1
 5226 0176 02F11403 		add	r3, r2, #20
 5227              	.LVL600:
 5228              		.syntax unified
 5229              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5230 017a 53E8003F 		ldrex r3, [r3]
 5231              	@ 0 "" 2
 5232              	.LVL601:
 5233              		.thumb
 5234              		.syntax unified
 5235              	.LBE548:
 5236              	.LBE547:
2514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5237              		.loc 1 2514 0 discriminator 1
 5238 017e 23F00103 		bic	r3, r3, #1
 5239              	.LVL602:
 5240              	.LBB549:
 5241              	.LBB550:
 5242              		.loc 2 1123 0 discriminator 1
 5243 0182 1432     		adds	r2, r2, #20
 5244              	.LVL603:
 5245              		.syntax unified
 5246              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5247 0184 42E80031 		strex r1, r3, [r2]
 5248              	@ 0 "" 2
 5249              	.LVL604:
 5250              		.thumb
 5251              		.syntax unified
 5252              	.LBE550:
 5253              	.LBE549:
2514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5254              		.loc 1 2514 0 discriminator 1
 5255 0188 0029     		cmp	r1, #0
 5256 018a F3D1     		bne	.L302
 5257              	.LVL605:
 5258              	.L303:
 5259              	.LBE546:
 5260              	.LBB551:
2518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5261              		.loc 1 2518 0 discriminator 1
 5262 018c 2268     		ldr	r2, [r4]
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 190


 5263              	.LVL606:
 5264              	.LBB552:
 5265              	.LBB553:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5266              		.loc 2 1072 0 discriminator 1
 5267 018e 02F11403 		add	r3, r2, #20
 5268              	.LVL607:
 5269              		.syntax unified
 5270              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5271 0192 53E8003F 		ldrex r3, [r3]
 5272              	@ 0 "" 2
 5273              	.LVL608:
 5274              		.thumb
 5275              		.syntax unified
 5276              	.LBE553:
 5277              	.LBE552:
2518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5278              		.loc 1 2518 0 discriminator 1
 5279 0196 23F04003 		bic	r3, r3, #64
 5280              	.LVL609:
 5281              	.LBB554:
 5282              	.LBB555:
 5283              		.loc 2 1123 0 discriminator 1
 5284 019a 1432     		adds	r2, r2, #20
 5285              	.LVL610:
 5286              		.syntax unified
 5287              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5288 019c 42E80031 		strex r1, r3, [r2]
 5289              	@ 0 "" 2
 5290              	.LVL611:
 5291              		.thumb
 5292              		.syntax unified
 5293              	.LBE555:
 5294              	.LBE554:
2518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5295              		.loc 1 2518 0 discriminator 1
 5296 01a0 0029     		cmp	r1, #0
 5297 01a2 F3D1     		bne	.L303
 5298              	.LBE551:
2521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5299              		.loc 1 2521 0
 5300 01a4 2023     		movs	r3, #32
 5301              	.LVL612:
 5302 01a6 84F83E30 		strb	r3, [r4, #62]
 5303              	.LVL613:
2522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5304              		.loc 1 2522 0
 5305 01aa 0023     		movs	r3, #0
 5306 01ac 2363     		str	r3, [r4, #48]
 5307              	.L304:
 5308              	.LBB556:
2524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5309              		.loc 1 2524 0 discriminator 1
 5310 01ae 2268     		ldr	r2, [r4]
 5311              	.LVL614:
 5312              	.LBB557:
 5313              	.LBB558:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 191


1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5314              		.loc 2 1072 0 discriminator 1
 5315 01b0 02F10C03 		add	r3, r2, #12
 5316              	.LVL615:
 5317              		.syntax unified
 5318              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5319 01b4 53E8003F 		ldrex r3, [r3]
 5320              	@ 0 "" 2
 5321              	.LVL616:
 5322              		.thumb
 5323              		.syntax unified
 5324              	.LBE558:
 5325              	.LBE557:
2524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5326              		.loc 1 2524 0 discriminator 1
 5327 01b8 23F01003 		bic	r3, r3, #16
 5328              	.LVL617:
 5329              	.LBB559:
 5330              	.LBB560:
 5331              		.loc 2 1123 0 discriminator 1
 5332 01bc 0C32     		adds	r2, r2, #12
 5333              	.LVL618:
 5334              		.syntax unified
 5335              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5336 01be 42E80031 		strex r1, r3, [r2]
 5337              	@ 0 "" 2
 5338              	.LVL619:
 5339              		.thumb
 5340              		.syntax unified
 5341              	.LBE560:
 5342              	.LBE559:
2524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5343              		.loc 1 2524 0 discriminator 1
 5344 01c2 0029     		cmp	r1, #0
 5345 01c4 F3D1     		bne	.L304
 5346              	.LBE556:
2527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 5347              		.loc 1 2527 0
 5348 01c6 A06B     		ldr	r0, [r4, #56]
 5349              	.LVL620:
 5350 01c8 FFF7FEFF 		bl	HAL_DMA_Abort
 5351              	.LVL621:
 5352              	.L300:
2534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5353              		.loc 1 2534 0
 5354 01cc A38D     		ldrh	r3, [r4, #44]
 5355 01ce E18D     		ldrh	r1, [r4, #46]
 5356 01d0 89B2     		uxth	r1, r1
 5357 01d2 591A     		subs	r1, r3, r1
 5358 01d4 89B2     		uxth	r1, r1
 5359 01d6 2046     		mov	r0, r4
 5360 01d8 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 5361              	.LVL622:
 5362 01dc 4AE0     		b	.L282
 5363              	.LVL623:
 5364              	.L299:
 5365              	.LBE540:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 192


 5366              	.LBB561:
2544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if ((huart->RxXferCount > 0U)
 5367              		.loc 1 2544 0
 5368 01de A38D     		ldrh	r3, [r4, #44]
 5369 01e0 E18D     		ldrh	r1, [r4, #46]
 5370 01e2 89B2     		uxth	r1, r1
 5371 01e4 591A     		subs	r1, r3, r1
 5372 01e6 89B2     		uxth	r1, r1
 5373              	.LVL624:
2545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           && (nb_rx_data > 0U))
 5374              		.loc 1 2545 0
 5375 01e8 E38D     		ldrh	r3, [r4, #46]
 5376 01ea 9BB2     		uxth	r3, r3
 5377 01ec 002B     		cmp	r3, #0
 5378 01ee 41D0     		beq	.L282
2546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 5379              		.loc 1 2546 0
 5380 01f0 0029     		cmp	r1, #0
 5381 01f2 3FD0     		beq	.L282
 5382              	.LVL625:
 5383              	.L305:
 5384              	.LBB562:
2549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5385              		.loc 1 2549 0 discriminator 1
 5386 01f4 2268     		ldr	r2, [r4]
 5387              	.LVL626:
 5388              	.LBB563:
 5389              	.LBB564:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5390              		.loc 2 1072 0 discriminator 1
 5391 01f6 02F10C03 		add	r3, r2, #12
 5392              	.LVL627:
 5393              		.syntax unified
 5394              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5395 01fa 53E8003F 		ldrex r3, [r3]
 5396              	@ 0 "" 2
 5397              	.LVL628:
 5398              		.thumb
 5399              		.syntax unified
 5400              	.LBE564:
 5401              	.LBE563:
2549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5402              		.loc 1 2549 0 discriminator 1
 5403 01fe 23F49073 		bic	r3, r3, #288
 5404              	.LVL629:
 5405              	.LBB565:
 5406              	.LBB566:
 5407              		.loc 2 1123 0 discriminator 1
 5408 0202 0C32     		adds	r2, r2, #12
 5409              	.LVL630:
 5410              		.syntax unified
 5411              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5412 0204 42E80030 		strex r0, r3, [r2]
 5413              	@ 0 "" 2
 5414              	.LVL631:
 5415              		.thumb
 5416              		.syntax unified
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 193


 5417              	.LBE566:
 5418              	.LBE565:
2549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5419              		.loc 1 2549 0 discriminator 1
 5420 0208 0028     		cmp	r0, #0
 5421 020a F3D1     		bne	.L305
 5422              	.LVL632:
 5423              	.L306:
 5424              	.LBE562:
 5425              	.LBB567:
2552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5426              		.loc 1 2552 0 discriminator 1
 5427 020c 2268     		ldr	r2, [r4]
 5428              	.LVL633:
 5429              	.LBB568:
 5430              	.LBB569:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5431              		.loc 2 1072 0 discriminator 1
 5432 020e 02F11403 		add	r3, r2, #20
 5433              	.LVL634:
 5434              		.syntax unified
 5435              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5436 0212 53E8003F 		ldrex r3, [r3]
 5437              	@ 0 "" 2
 5438              	.LVL635:
 5439              		.thumb
 5440              		.syntax unified
 5441              	.LBE569:
 5442              	.LBE568:
2552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5443              		.loc 1 2552 0 discriminator 1
 5444 0216 23F00103 		bic	r3, r3, #1
 5445              	.LVL636:
 5446              	.LBB570:
 5447              	.LBB571:
 5448              		.loc 2 1123 0 discriminator 1
 5449 021a 1432     		adds	r2, r2, #20
 5450              	.LVL637:
 5451              		.syntax unified
 5452              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5453 021c 42E80030 		strex r0, r3, [r2]
 5454              	@ 0 "" 2
 5455              	.LVL638:
 5456              		.thumb
 5457              		.syntax unified
 5458              	.LBE571:
 5459              	.LBE570:
2552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5460              		.loc 1 2552 0 discriminator 1
 5461 0220 0028     		cmp	r0, #0
 5462 0222 F3D1     		bne	.L306
 5463              	.LBE567:
2555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5464              		.loc 1 2555 0
 5465 0224 2023     		movs	r3, #32
 5466              	.LVL639:
 5467 0226 84F83E30 		strb	r3, [r4, #62]
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 194


2556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5468              		.loc 1 2556 0
 5469 022a 0023     		movs	r3, #0
 5470 022c 2363     		str	r3, [r4, #48]
 5471              	.L307:
 5472              	.LBB572:
2558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 5473              		.loc 1 2558 0 discriminator 1
 5474 022e 2268     		ldr	r2, [r4]
 5475              	.LVL640:
 5476              	.LBB573:
 5477              	.LBB574:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5478              		.loc 2 1072 0 discriminator 1
 5479 0230 02F10C03 		add	r3, r2, #12
 5480              	.LVL641:
 5481              		.syntax unified
 5482              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5483 0234 53E8003F 		ldrex r3, [r3]
 5484              	@ 0 "" 2
 5485              	.LVL642:
 5486              		.thumb
 5487              		.syntax unified
 5488              	.LBE574:
 5489              	.LBE573:
2558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 5490              		.loc 1 2558 0 discriminator 1
 5491 0238 23F01003 		bic	r3, r3, #16
 5492              	.LVL643:
 5493              	.LBB575:
 5494              	.LBB576:
 5495              		.loc 2 1123 0 discriminator 1
 5496 023c 0C32     		adds	r2, r2, #12
 5497              	.LVL644:
 5498              		.syntax unified
 5499              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5500 023e 42E80030 		strex r0, r3, [r2]
 5501              	@ 0 "" 2
 5502              	.LVL645:
 5503              		.thumb
 5504              		.syntax unified
 5505              	.LBE576:
 5506              	.LBE575:
2558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 5507              		.loc 1 2558 0 discriminator 1
 5508 0242 0028     		cmp	r0, #0
 5509 0244 F3D1     		bne	.L307
 5510              	.LBE572:
2564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5511              		.loc 1 2564 0
 5512 0246 2046     		mov	r0, r4
 5513 0248 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 5514              	.LVL646:
 5515 024c 12E0     		b	.L282
 5516              	.LVL647:
 5517              	.L298:
 5518              	.LBE561:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 195


2572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 5519              		.loc 1 2572 0
 5520 024e 13F0800F 		tst	r3, #128
 5521 0252 06D0     		beq	.L308
2572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 5522              		.loc 1 2572 0 is_stmt 0 discriminator 1
 5523 0254 10F0800F 		tst	r0, #128
 5524 0258 03D0     		beq	.L308
2574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 5525              		.loc 1 2574 0 is_stmt 1
 5526 025a 2046     		mov	r0, r4
 5527              	.LVL648:
 5528 025c FFF7FEFF 		bl	UART_Transmit_IT
 5529              	.LVL649:
2575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 5530              		.loc 1 2575 0
 5531 0260 08E0     		b	.L282
 5532              	.LVL650:
 5533              	.L308:
2579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 5534              		.loc 1 2579 0
 5535 0262 13F0400F 		tst	r3, #64
 5536 0266 05D0     		beq	.L282
2579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 5537              		.loc 1 2579 0 is_stmt 0 discriminator 1
 5538 0268 10F0400F 		tst	r0, #64
 5539 026c 02D0     		beq	.L282
2581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 5540              		.loc 1 2581 0 is_stmt 1
 5541 026e 2046     		mov	r0, r4
 5542              	.LVL651:
 5543 0270 FFF7FEFF 		bl	UART_EndTransmit_IT
 5544              	.LVL652:
 5545              	.L282:
2584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5546              		.loc 1 2584 0
 5547 0274 03B0     		add	sp, sp, #12
 5548              	.LCFI47:
 5549              		.cfi_def_cfa_offset 12
 5550              		@ sp needed
 5551 0276 30BD     		pop	{r4, r5, pc}
 5552              	.LVL653:
 5553              	.L311:
 5554              		.align	2
 5555              	.L310:
 5556 0278 00000000 		.word	UART_DMAAbortOnError
 5557              		.cfi_endproc
 5558              	.LFE260:
 5560              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 5561              		.align	2
 5562              		.thumb
 5563              		.thumb_func
 5565              	UART_DMARxHalfCplt:
 5566              	.LFB280:
3098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5567              		.loc 1 3098 0
 5568              		.cfi_startproc
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 196


 5569              		@ args = 0, pretend = 0, frame = 0
 5570              		@ frame_needed = 0, uses_anonymous_args = 0
 5571              	.LVL654:
 5572 0000 08B5     		push	{r3, lr}
 5573              	.LCFI48:
 5574              		.cfi_def_cfa_offset 8
 5575              		.cfi_offset 3, -8
 5576              		.cfi_offset 14, -4
3099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5577              		.loc 1 3099 0
 5578 0002 806B     		ldr	r0, [r0, #56]
 5579              	.LVL655:
3103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 5580              		.loc 1 3103 0
 5581 0004 036B     		ldr	r3, [r0, #48]
 5582 0006 012B     		cmp	r3, #1
 5583 0008 04D1     		bne	.L313
3110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5584              		.loc 1 3110 0
 5585 000a 818D     		ldrh	r1, [r0, #44]
 5586 000c 4908     		lsrs	r1, r1, #1
 5587 000e FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 5588              	.LVL656:
 5589 0012 08BD     		pop	{r3, pc}
 5590              	.LVL657:
 5591              	.L313:
3121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5592              		.loc 1 3121 0
 5593 0014 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 5594              	.LVL658:
 5595 0018 08BD     		pop	{r3, pc}
 5596              		.cfi_endproc
 5597              	.LFE280:
 5599 001a 00BF     		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 5600              		.align	2
 5601              		.thumb
 5602              		.thumb_func
 5604              	UART_DMAReceiveCplt:
 5605              	.LFB279:
3041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 5606              		.loc 1 3041 0
 5607              		.cfi_startproc
 5608              		@ args = 0, pretend = 0, frame = 0
 5609              		@ frame_needed = 0, uses_anonymous_args = 0
 5610              	.LVL659:
 5611 0000 08B5     		push	{r3, lr}
 5612              	.LCFI49:
 5613              		.cfi_def_cfa_offset 8
 5614              		.cfi_offset 3, -8
 5615              		.cfi_offset 14, -4
3042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
 5616              		.loc 1 3042 0
 5617 0002 826B     		ldr	r2, [r0, #56]
 5618              	.LVL660:
3044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 5619              		.loc 1 3044 0
 5620 0004 0368     		ldr	r3, [r0]
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 197


 5621 0006 1B68     		ldr	r3, [r3]
 5622 0008 13F4807F 		tst	r3, #256
 5623 000c 37D1     		bne	.L317
3046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5624              		.loc 1 3046 0
 5625 000e 0023     		movs	r3, #0
 5626 0010 D385     		strh	r3, [r2, #46]	@ movhi
 5627              	.LVL661:
 5628              	.L318:
 5629              	.LBB577:
3049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5630              		.loc 1 3049 0 discriminator 1
 5631 0012 1168     		ldr	r1, [r2]
 5632              	.LVL662:
 5633              	.LBB578:
 5634              	.LBB579:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5635              		.loc 2 1072 0 discriminator 1
 5636 0014 01F10C03 		add	r3, r1, #12
 5637              	.LVL663:
 5638              		.syntax unified
 5639              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5640 0018 53E8003F 		ldrex r3, [r3]
 5641              	@ 0 "" 2
 5642              	.LVL664:
 5643              		.thumb
 5644              		.syntax unified
 5645              	.LBE579:
 5646              	.LBE578:
3049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5647              		.loc 1 3049 0 discriminator 1
 5648 001c 23F48073 		bic	r3, r3, #256
 5649              	.LVL665:
 5650              	.LBB580:
 5651              	.LBB581:
 5652              		.loc 2 1123 0 discriminator 1
 5653 0020 0C31     		adds	r1, r1, #12
 5654              	.LVL666:
 5655              		.syntax unified
 5656              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5657 0022 41E80030 		strex r0, r3, [r1]
 5658              	@ 0 "" 2
 5659              	.LVL667:
 5660              		.thumb
 5661              		.syntax unified
 5662              	.LBE581:
 5663              	.LBE580:
3049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5664              		.loc 1 3049 0 discriminator 1
 5665 0026 0028     		cmp	r0, #0
 5666 0028 F3D1     		bne	.L318
 5667              	.LVL668:
 5668              	.L319:
 5669              	.LBE577:
 5670              	.LBB582:
3050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5671              		.loc 1 3050 0 discriminator 1
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 198


 5672 002a 1168     		ldr	r1, [r2]
 5673              	.LVL669:
 5674              	.LBB583:
 5675              	.LBB584:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5676              		.loc 2 1072 0 discriminator 1
 5677 002c 01F11403 		add	r3, r1, #20
 5678              	.LVL670:
 5679              		.syntax unified
 5680              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5681 0030 53E8003F 		ldrex r3, [r3]
 5682              	@ 0 "" 2
 5683              	.LVL671:
 5684              		.thumb
 5685              		.syntax unified
 5686              	.LBE584:
 5687              	.LBE583:
3050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5688              		.loc 1 3050 0 discriminator 1
 5689 0034 23F00103 		bic	r3, r3, #1
 5690              	.LVL672:
 5691              	.LBB585:
 5692              	.LBB586:
 5693              		.loc 2 1123 0 discriminator 1
 5694 0038 1431     		adds	r1, r1, #20
 5695              	.LVL673:
 5696              		.syntax unified
 5697              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5698 003a 41E80030 		strex r0, r3, [r1]
 5699              	@ 0 "" 2
 5700              	.LVL674:
 5701              		.thumb
 5702              		.syntax unified
 5703              	.LBE586:
 5704              	.LBE585:
3050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5705              		.loc 1 3050 0 discriminator 1
 5706 003e 0028     		cmp	r0, #0
 5707 0040 F3D1     		bne	.L319
 5708              	.LVL675:
 5709              	.L320:
 5710              	.LBE582:
 5711              	.LBB587:
3054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5712              		.loc 1 3054 0 discriminator 1
 5713 0042 1168     		ldr	r1, [r2]
 5714              	.LVL676:
 5715              	.LBB588:
 5716              	.LBB589:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5717              		.loc 2 1072 0 discriminator 1
 5718 0044 01F11403 		add	r3, r1, #20
 5719              	.LVL677:
 5720              		.syntax unified
 5721              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5722 0048 53E8003F 		ldrex r3, [r3]
 5723              	@ 0 "" 2
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 199


 5724              	.LVL678:
 5725              		.thumb
 5726              		.syntax unified
 5727              	.LBE589:
 5728              	.LBE588:
3054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5729              		.loc 1 3054 0 discriminator 1
 5730 004c 23F04003 		bic	r3, r3, #64
 5731              	.LVL679:
 5732              	.LBB590:
 5733              	.LBB591:
 5734              		.loc 2 1123 0 discriminator 1
 5735 0050 1431     		adds	r1, r1, #20
 5736              	.LVL680:
 5737              		.syntax unified
 5738              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5739 0052 41E80030 		strex r0, r3, [r1]
 5740              	@ 0 "" 2
 5741              	.LVL681:
 5742              		.thumb
 5743              		.syntax unified
 5744              	.LBE591:
 5745              	.LBE590:
3054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5746              		.loc 1 3054 0 discriminator 1
 5747 0056 0028     		cmp	r0, #0
 5748 0058 F3D1     		bne	.L320
 5749              	.LBE587:
3057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5750              		.loc 1 3057 0
 5751 005a 2023     		movs	r3, #32
 5752              	.LVL682:
 5753 005c 82F83E30 		strb	r3, [r2, #62]
3060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 5754              		.loc 1 3060 0
 5755 0060 136B     		ldr	r3, [r2, #48]
 5756 0062 012B     		cmp	r3, #1
 5757 0064 0BD1     		bne	.L317
 5758              	.L321:
 5759              	.LBB592:
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 5760              		.loc 1 3062 0 discriminator 1
 5761 0066 1168     		ldr	r1, [r2]
 5762              	.LVL683:
 5763              	.LBB593:
 5764              	.LBB594:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5765              		.loc 2 1072 0 discriminator 1
 5766 0068 01F10C03 		add	r3, r1, #12
 5767              	.LVL684:
 5768              		.syntax unified
 5769              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5770 006c 53E8003F 		ldrex r3, [r3]
 5771              	@ 0 "" 2
 5772              	.LVL685:
 5773              		.thumb
 5774              		.syntax unified
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 200


 5775              	.LBE594:
 5776              	.LBE593:
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 5777              		.loc 1 3062 0 discriminator 1
 5778 0070 23F01003 		bic	r3, r3, #16
 5779              	.LVL686:
 5780              	.LBB595:
 5781              	.LBB596:
 5782              		.loc 2 1123 0 discriminator 1
 5783 0074 0C31     		adds	r1, r1, #12
 5784              	.LVL687:
 5785              		.syntax unified
 5786              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5787 0076 41E80030 		strex r0, r3, [r1]
 5788              	@ 0 "" 2
 5789              	.LVL688:
 5790              		.thumb
 5791              		.syntax unified
 5792              	.LBE596:
 5793              	.LBE595:
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 5794              		.loc 1 3062 0 discriminator 1
 5795 007a 0028     		cmp	r0, #0
 5796 007c F3D1     		bne	.L321
 5797              	.LVL689:
 5798              	.L317:
 5799              	.LBE592:
3068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 5800              		.loc 1 3068 0
 5801 007e 136B     		ldr	r3, [r2, #48]
 5802 0080 012B     		cmp	r3, #1
 5803 0082 04D1     		bne	.L322
3075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5804              		.loc 1 3075 0
 5805 0084 918D     		ldrh	r1, [r2, #44]
 5806 0086 1046     		mov	r0, r2
 5807 0088 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 5808              	.LVL690:
 5809 008c 08BD     		pop	{r3, pc}
 5810              	.LVL691:
 5811              	.L322:
3086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 5812              		.loc 1 3086 0
 5813 008e 1046     		mov	r0, r2
 5814 0090 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 5815              	.LVL692:
 5816 0094 08BD     		pop	{r3, pc}
 5817              		.cfi_endproc
 5818              	.LFE279:
 5820 0096 00BF     		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 5821              		.align	2
 5822              		.global	HAL_LIN_SendBreak
 5823              		.thumb
 5824              		.thumb_func
 5826              	HAL_LIN_SendBreak:
 5827              	.LFB270:
2754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 201


 5828              		.loc 1 2754 0
 5829              		.cfi_startproc
 5830              		@ args = 0, pretend = 0, frame = 0
 5831              		@ frame_needed = 0, uses_anonymous_args = 0
 5832              		@ link register save eliminated.
 5833              	.LVL693:
2759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5834              		.loc 1 2759 0
 5835 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 5836 0004 012B     		cmp	r3, #1
 5837 0006 19D0     		beq	.L328
2759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5838              		.loc 1 2759 0 is_stmt 0 discriminator 2
 5839 0008 0123     		movs	r3, #1
 5840 000a 80F83C30 		strb	r3, [r0, #60]
2761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5841              		.loc 1 2761 0 is_stmt 1 discriminator 2
 5842 000e 2423     		movs	r3, #36
 5843 0010 80F83D30 		strb	r3, [r0, #61]
 5844              	.L327:
 5845              	.LBB597:
2764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5846              		.loc 1 2764 0 discriminator 1
 5847 0014 0268     		ldr	r2, [r0]
 5848              	.LVL694:
 5849              	.LBB598:
 5850              	.LBB599:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5851              		.loc 2 1072 0 discriminator 1
 5852 0016 02F10C03 		add	r3, r2, #12
 5853              	.LVL695:
 5854              		.syntax unified
 5855              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5856 001a 53E8003F 		ldrex r3, [r3]
 5857              	@ 0 "" 2
 5858              	.LVL696:
 5859              		.thumb
 5860              		.syntax unified
 5861              	.LBE599:
 5862              	.LBE598:
2764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5863              		.loc 1 2764 0 discriminator 1
 5864 001e 43F00103 		orr	r3, r3, #1
 5865              	.LVL697:
 5866              	.LBB600:
 5867              	.LBB601:
 5868              		.loc 2 1123 0 discriminator 1
 5869 0022 0C32     		adds	r2, r2, #12
 5870              	.LVL698:
 5871              		.syntax unified
 5872              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5873 0024 42E80031 		strex r1, r3, [r2]
 5874              	@ 0 "" 2
 5875              	.LVL699:
 5876              		.thumb
 5877              		.syntax unified
 5878              	.LBE601:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 202


 5879              	.LBE600:
2764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5880              		.loc 1 2764 0 discriminator 1
 5881 0028 0029     		cmp	r1, #0
 5882 002a F3D1     		bne	.L327
 5883              	.LBE597:
2766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5884              		.loc 1 2766 0
 5885 002c 2023     		movs	r3, #32
 5886              	.LVL700:
 5887 002e 80F83D30 		strb	r3, [r0, #61]
2769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5888              		.loc 1 2769 0
 5889 0032 0023     		movs	r3, #0
 5890 0034 80F83C30 		strb	r3, [r0, #60]
2771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5891              		.loc 1 2771 0
 5892 0038 1846     		mov	r0, r3
 5893              	.LVL701:
 5894 003a 7047     		bx	lr
 5895              	.LVL702:
 5896              	.L328:
2759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5897              		.loc 1 2759 0
 5898 003c 0220     		movs	r0, #2
 5899              	.LVL703:
2772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5900              		.loc 1 2772 0
 5901 003e 7047     		bx	lr
 5902              		.cfi_endproc
 5903              	.LFE270:
 5905              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 5906              		.align	2
 5907              		.global	HAL_MultiProcessor_EnterMuteMode
 5908              		.thumb
 5909              		.thumb_func
 5911              	HAL_MultiProcessor_EnterMuteMode:
 5912              	.LFB271:
2781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 5913              		.loc 1 2781 0
 5914              		.cfi_startproc
 5915              		@ args = 0, pretend = 0, frame = 0
 5916              		@ frame_needed = 0, uses_anonymous_args = 0
 5917              		@ link register save eliminated.
 5918              	.LVL704:
2786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5919              		.loc 1 2786 0
 5920 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 5921 0004 012B     		cmp	r3, #1
 5922 0006 19D0     		beq	.L332
2786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5923              		.loc 1 2786 0 is_stmt 0 discriminator 2
 5924 0008 0123     		movs	r3, #1
 5925 000a 80F83C30 		strb	r3, [r0, #60]
2788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5926              		.loc 1 2788 0 is_stmt 1 discriminator 2
 5927 000e 2423     		movs	r3, #36
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 203


 5928 0010 80F83D30 		strb	r3, [r0, #61]
 5929              	.L331:
 5930              	.LBB602:
2791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5931              		.loc 1 2791 0 discriminator 1
 5932 0014 0268     		ldr	r2, [r0]
 5933              	.LVL705:
 5934              	.LBB603:
 5935              	.LBB604:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5936              		.loc 2 1072 0 discriminator 1
 5937 0016 02F10C03 		add	r3, r2, #12
 5938              	.LVL706:
 5939              		.syntax unified
 5940              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5941 001a 53E8003F 		ldrex r3, [r3]
 5942              	@ 0 "" 2
 5943              	.LVL707:
 5944              		.thumb
 5945              		.syntax unified
 5946              	.LBE604:
 5947              	.LBE603:
2791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5948              		.loc 1 2791 0 discriminator 1
 5949 001e 43F00203 		orr	r3, r3, #2
 5950              	.LVL708:
 5951              	.LBB605:
 5952              	.LBB606:
 5953              		.loc 2 1123 0 discriminator 1
 5954 0022 0C32     		adds	r2, r2, #12
 5955              	.LVL709:
 5956              		.syntax unified
 5957              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5958 0024 42E80031 		strex r1, r3, [r2]
 5959              	@ 0 "" 2
 5960              	.LVL710:
 5961              		.thumb
 5962              		.syntax unified
 5963              	.LBE606:
 5964              	.LBE605:
2791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5965              		.loc 1 2791 0 discriminator 1
 5966 0028 0029     		cmp	r1, #0
 5967 002a F3D1     		bne	.L331
 5968              	.LBE602:
2793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5969              		.loc 1 2793 0
 5970 002c 2023     		movs	r3, #32
 5971              	.LVL711:
 5972 002e 80F83D30 		strb	r3, [r0, #61]
2796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5973              		.loc 1 2796 0
 5974 0032 0023     		movs	r3, #0
 5975 0034 80F83C30 		strb	r3, [r0, #60]
2798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5976              		.loc 1 2798 0
 5977 0038 1846     		mov	r0, r3
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 204


 5978              	.LVL712:
 5979 003a 7047     		bx	lr
 5980              	.LVL713:
 5981              	.L332:
2786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5982              		.loc 1 2786 0
 5983 003c 0220     		movs	r0, #2
 5984              	.LVL714:
2799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5985              		.loc 1 2799 0
 5986 003e 7047     		bx	lr
 5987              		.cfi_endproc
 5988              	.LFE271:
 5990              		.section	.text.HAL_MultiProcessor_ExitMuteMode,"ax",%progbits
 5991              		.align	2
 5992              		.global	HAL_MultiProcessor_ExitMuteMode
 5993              		.thumb
 5994              		.thumb_func
 5996              	HAL_MultiProcessor_ExitMuteMode:
 5997              	.LFB272:
2808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 5998              		.loc 1 2808 0
 5999              		.cfi_startproc
 6000              		@ args = 0, pretend = 0, frame = 0
 6001              		@ frame_needed = 0, uses_anonymous_args = 0
 6002              		@ link register save eliminated.
 6003              	.LVL715:
2813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6004              		.loc 1 2813 0
 6005 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 6006 0004 012B     		cmp	r3, #1
 6007 0006 19D0     		beq	.L336
2813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6008              		.loc 1 2813 0 is_stmt 0 discriminator 2
 6009 0008 0123     		movs	r3, #1
 6010 000a 80F83C30 		strb	r3, [r0, #60]
2815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6011              		.loc 1 2815 0 is_stmt 1 discriminator 2
 6012 000e 2423     		movs	r3, #36
 6013 0010 80F83D30 		strb	r3, [r0, #61]
 6014              	.L335:
 6015              	.LBB607:
2818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6016              		.loc 1 2818 0 discriminator 1
 6017 0014 0268     		ldr	r2, [r0]
 6018              	.LVL716:
 6019              	.LBB608:
 6020              	.LBB609:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6021              		.loc 2 1072 0 discriminator 1
 6022 0016 02F10C03 		add	r3, r2, #12
 6023              	.LVL717:
 6024              		.syntax unified
 6025              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6026 001a 53E8003F 		ldrex r3, [r3]
 6027              	@ 0 "" 2
 6028              	.LVL718:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 205


 6029              		.thumb
 6030              		.syntax unified
 6031              	.LBE609:
 6032              	.LBE608:
2818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6033              		.loc 1 2818 0 discriminator 1
 6034 001e 23F00203 		bic	r3, r3, #2
 6035              	.LVL719:
 6036              	.LBB610:
 6037              	.LBB611:
 6038              		.loc 2 1123 0 discriminator 1
 6039 0022 0C32     		adds	r2, r2, #12
 6040              	.LVL720:
 6041              		.syntax unified
 6042              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6043 0024 42E80031 		strex r1, r3, [r2]
 6044              	@ 0 "" 2
 6045              	.LVL721:
 6046              		.thumb
 6047              		.syntax unified
 6048              	.LBE611:
 6049              	.LBE610:
2818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6050              		.loc 1 2818 0 discriminator 1
 6051 0028 0029     		cmp	r1, #0
 6052 002a F3D1     		bne	.L335
 6053              	.LBE607:
2820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6054              		.loc 1 2820 0
 6055 002c 2023     		movs	r3, #32
 6056              	.LVL722:
 6057 002e 80F83D30 		strb	r3, [r0, #61]
2823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6058              		.loc 1 2823 0
 6059 0032 0023     		movs	r3, #0
 6060 0034 80F83C30 		strb	r3, [r0, #60]
2825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6061              		.loc 1 2825 0
 6062 0038 1846     		mov	r0, r3
 6063              	.LVL723:
 6064 003a 7047     		bx	lr
 6065              	.LVL724:
 6066              	.L336:
2813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6067              		.loc 1 2813 0
 6068 003c 0220     		movs	r0, #2
 6069              	.LVL725:
2826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6070              		.loc 1 2826 0
 6071 003e 7047     		bx	lr
 6072              		.cfi_endproc
 6073              	.LFE272:
 6075              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 6076              		.align	2
 6077              		.global	HAL_HalfDuplex_EnableTransmitter
 6078              		.thumb
 6079              		.thumb_func
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 206


 6081              	HAL_HalfDuplex_EnableTransmitter:
 6082              	.LFB273:
2835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 6083              		.loc 1 2835 0
 6084              		.cfi_startproc
 6085              		@ args = 0, pretend = 0, frame = 0
 6086              		@ frame_needed = 0, uses_anonymous_args = 0
 6087              		@ link register save eliminated.
 6088              	.LVL726:
2839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6089              		.loc 1 2839 0
 6090 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 6091 0004 012B     		cmp	r3, #1
 6092 0006 14D0     		beq	.L339
2839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6093              		.loc 1 2839 0 is_stmt 0 discriminator 2
 6094 0008 0123     		movs	r3, #1
 6095 000a 80F83C30 		strb	r3, [r0, #60]
2841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6096              		.loc 1 2841 0 is_stmt 1 discriminator 2
 6097 000e 2423     		movs	r3, #36
 6098 0010 80F83D30 		strb	r3, [r0, #61]
2844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6099              		.loc 1 2844 0 discriminator 2
 6100 0014 0268     		ldr	r2, [r0]
 6101 0016 D368     		ldr	r3, [r2, #12]
 6102              	.LVL727:
2847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6103              		.loc 1 2847 0 discriminator 2
 6104 0018 23F00C03 		bic	r3, r3, #12
 6105              	.LVL728:
2850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6106              		.loc 1 2850 0 discriminator 2
 6107 001c 43F00803 		orr	r3, r3, #8
 6108              	.LVL729:
2853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6109              		.loc 1 2853 0 discriminator 2
 6110 0020 D360     		str	r3, [r2, #12]
2855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6111              		.loc 1 2855 0 discriminator 2
 6112 0022 2023     		movs	r3, #32
 6113              	.LVL730:
 6114 0024 80F83D30 		strb	r3, [r0, #61]
 6115              	.LVL731:
2858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6116              		.loc 1 2858 0 discriminator 2
 6117 0028 0023     		movs	r3, #0
 6118 002a 80F83C30 		strb	r3, [r0, #60]
2860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6119              		.loc 1 2860 0 discriminator 2
 6120 002e 1846     		mov	r0, r3
 6121              	.LVL732:
 6122 0030 7047     		bx	lr
 6123              	.LVL733:
 6124              	.L339:
2839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6125              		.loc 1 2839 0
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 207


 6126 0032 0220     		movs	r0, #2
 6127              	.LVL734:
2861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6128              		.loc 1 2861 0
 6129 0034 7047     		bx	lr
 6130              		.cfi_endproc
 6131              	.LFE273:
 6133 0036 00BF     		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 6134              		.align	2
 6135              		.global	HAL_HalfDuplex_EnableReceiver
 6136              		.thumb
 6137              		.thumb_func
 6139              	HAL_HalfDuplex_EnableReceiver:
 6140              	.LFB274:
2870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 6141              		.loc 1 2870 0
 6142              		.cfi_startproc
 6143              		@ args = 0, pretend = 0, frame = 0
 6144              		@ frame_needed = 0, uses_anonymous_args = 0
 6145              		@ link register save eliminated.
 6146              	.LVL735:
2874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6147              		.loc 1 2874 0
 6148 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 6149 0004 012B     		cmp	r3, #1
 6150 0006 14D0     		beq	.L342
2874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6151              		.loc 1 2874 0 is_stmt 0 discriminator 2
 6152 0008 0123     		movs	r3, #1
 6153 000a 80F83C30 		strb	r3, [r0, #60]
2876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6154              		.loc 1 2876 0 is_stmt 1 discriminator 2
 6155 000e 2423     		movs	r3, #36
 6156 0010 80F83D30 		strb	r3, [r0, #61]
2879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6157              		.loc 1 2879 0 discriminator 2
 6158 0014 0268     		ldr	r2, [r0]
 6159 0016 D368     		ldr	r3, [r2, #12]
 6160              	.LVL736:
2882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6161              		.loc 1 2882 0 discriminator 2
 6162 0018 23F00C03 		bic	r3, r3, #12
 6163              	.LVL737:
2885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6164              		.loc 1 2885 0 discriminator 2
 6165 001c 43F00403 		orr	r3, r3, #4
 6166              	.LVL738:
2888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6167              		.loc 1 2888 0 discriminator 2
 6168 0020 D360     		str	r3, [r2, #12]
2890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6169              		.loc 1 2890 0 discriminator 2
 6170 0022 2023     		movs	r3, #32
 6171              	.LVL739:
 6172 0024 80F83D30 		strb	r3, [r0, #61]
 6173              	.LVL740:
2893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 208


 6174              		.loc 1 2893 0 discriminator 2
 6175 0028 0023     		movs	r3, #0
 6176 002a 80F83C30 		strb	r3, [r0, #60]
2895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6177              		.loc 1 2895 0 discriminator 2
 6178 002e 1846     		mov	r0, r3
 6179              	.LVL741:
 6180 0030 7047     		bx	lr
 6181              	.LVL742:
 6182              	.L342:
2874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6183              		.loc 1 2874 0
 6184 0032 0220     		movs	r0, #2
 6185              	.LVL743:
2896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6186              		.loc 1 2896 0
 6187 0034 7047     		bx	lr
 6188              		.cfi_endproc
 6189              	.LFE274:
 6191 0036 00BF     		.section	.text.HAL_UART_GetState,"ax",%progbits
 6192              		.align	2
 6193              		.global	HAL_UART_GetState
 6194              		.thumb
 6195              		.thumb_func
 6197              	HAL_UART_GetState:
 6198              	.LFB275:
2927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t temp1 = 0x00U, temp2 = 0x00U;
 6199              		.loc 1 2927 0
 6200              		.cfi_startproc
 6201              		@ args = 0, pretend = 0, frame = 0
 6202              		@ frame_needed = 0, uses_anonymous_args = 0
 6203              		@ link register save eliminated.
 6204              	.LVL744:
2929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp2 = huart->RxState;
 6205              		.loc 1 2929 0
 6206 0000 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 6207              	.LVL745:
2930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6208              		.loc 1 2930 0
 6209 0004 90F83E00 		ldrb	r0, [r0, #62]	@ zero_extendqisi2
 6210              	.LVL746:
2933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6211              		.loc 1 2933 0
 6212 0008 1843     		orrs	r0, r0, r3
 6213              	.LVL747:
 6214 000a 7047     		bx	lr
 6215              		.cfi_endproc
 6216              	.LFE275:
 6218              		.section	.text.HAL_UART_GetError,"ax",%progbits
 6219              		.align	2
 6220              		.global	HAL_UART_GetError
 6221              		.thumb
 6222              		.thumb_func
 6224              	HAL_UART_GetError:
 6225              	.LFB276:
2942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return huart->ErrorCode;
 6226              		.loc 1 2942 0
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 209


 6227              		.cfi_startproc
 6228              		@ args = 0, pretend = 0, frame = 0
 6229              		@ frame_needed = 0, uses_anonymous_args = 0
 6230              		@ link register save eliminated.
 6231              	.LVL748:
2943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6232              		.loc 1 2943 0
 6233 0000 006C     		ldr	r0, [r0, #64]
 6234              	.LVL749:
2944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6235              		.loc 1 2944 0
 6236 0002 7047     		bx	lr
 6237              		.cfi_endproc
 6238              	.LFE276:
 6240              		.section	.text.UART_Start_Receive_IT,"ax",%progbits
 6241              		.align	2
 6242              		.global	UART_Start_Receive_IT
 6243              		.thumb
 6244              		.thumb_func
 6246              	UART_Start_Receive_IT:
 6247              	.LFB283:
3214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
 6248              		.loc 1 3214 0
 6249              		.cfi_startproc
 6250              		@ args = 0, pretend = 0, frame = 0
 6251              		@ frame_needed = 0, uses_anonymous_args = 0
 6252              		@ link register save eliminated.
 6253              	.LVL750:
3215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferSize = Size;
 6254              		.loc 1 3215 0
 6255 0000 8162     		str	r1, [r0, #40]
3216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = Size;
 6256              		.loc 1 3216 0
 6257 0002 8285     		strh	r2, [r0, #44]	@ movhi
3217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6258              		.loc 1 3217 0
 6259 0004 C285     		strh	r2, [r0, #46]	@ movhi
3219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 6260              		.loc 1 3219 0
 6261 0006 0023     		movs	r3, #0
 6262 0008 0364     		str	r3, [r0, #64]
3220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6263              		.loc 1 3220 0
 6264 000a 2222     		movs	r2, #34
 6265              	.LVL751:
 6266 000c 80F83E20 		strb	r2, [r0, #62]
3223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6267              		.loc 1 3223 0
 6268 0010 80F83C30 		strb	r3, [r0, #60]
3225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 6269              		.loc 1 3225 0
 6270 0014 0369     		ldr	r3, [r0, #16]
 6271 0016 23B1     		cbz	r3, .L346
3228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 6272              		.loc 1 3228 0
 6273 0018 0268     		ldr	r2, [r0]
 6274 001a D368     		ldr	r3, [r2, #12]
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 210


 6275 001c 43F48073 		orr	r3, r3, #256
 6276 0020 D360     		str	r3, [r2, #12]
 6277              	.LVL752:
 6278              	.L346:
3232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6279              		.loc 1 3232 0
 6280 0022 0268     		ldr	r2, [r0]
 6281 0024 5369     		ldr	r3, [r2, #20]
 6282 0026 43F00103 		orr	r3, r3, #1
 6283 002a 5361     		str	r3, [r2, #20]
3235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6284              		.loc 1 3235 0
 6285 002c 0268     		ldr	r2, [r0]
 6286 002e D368     		ldr	r3, [r2, #12]
 6287 0030 43F02003 		orr	r3, r3, #32
 6288 0034 D360     		str	r3, [r2, #12]
3238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6289              		.loc 1 3238 0
 6290 0036 0020     		movs	r0, #0
 6291              	.LVL753:
 6292 0038 7047     		bx	lr
 6293              		.cfi_endproc
 6294              	.LFE283:
 6296 003a 00BF     		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 6297              		.align	2
 6298              		.global	HAL_UART_Receive_IT
 6299              		.thumb
 6300              		.thumb_func
 6302              	HAL_UART_Receive_IT:
 6303              	.LFB245:
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 6304              		.loc 1 1361 0
 6305              		.cfi_startproc
 6306              		@ args = 0, pretend = 0, frame = 0
 6307              		@ frame_needed = 0, uses_anonymous_args = 0
 6308              	.LVL754:
 6309 0000 08B5     		push	{r3, lr}
 6310              	.LCFI50:
 6311              		.cfi_def_cfa_offset 8
 6312              		.cfi_offset 3, -8
 6313              		.cfi_offset 14, -4
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 6314              		.loc 1 1363 0
 6315 0002 90F83E30 		ldrb	r3, [r0, #62]	@ zero_extendqisi2
 6316 0006 DBB2     		uxtb	r3, r3
 6317 0008 202B     		cmp	r3, #32
 6318 000a 0DD1     		bne	.L349
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 6319              		.loc 1 1365 0
 6320 000c 71B1     		cbz	r1, .L350
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 6321              		.loc 1 1365 0 is_stmt 0 discriminator 1
 6322 000e 7AB1     		cbz	r2, .L351
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6323              		.loc 1 1371 0 is_stmt 1
 6324 0010 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 6325 0014 012B     		cmp	r3, #1
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 211


 6326 0016 0DD0     		beq	.L352
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6327              		.loc 1 1371 0 is_stmt 0 discriminator 2
 6328 0018 0123     		movs	r3, #1
 6329 001a 80F83C30 		strb	r3, [r0, #60]
1374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6330              		.loc 1 1374 0 is_stmt 1 discriminator 2
 6331 001e 0023     		movs	r3, #0
 6332 0020 0363     		str	r3, [r0, #48]
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 6333              		.loc 1 1376 0 discriminator 2
 6334 0022 FFF7FEFF 		bl	UART_Start_Receive_IT
 6335              	.LVL755:
 6336 0026 08BD     		pop	{r3, pc}
 6337              	.LVL756:
 6338              	.L349:
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 6339              		.loc 1 1380 0
 6340 0028 0220     		movs	r0, #2
 6341              	.LVL757:
 6342 002a 08BD     		pop	{r3, pc}
 6343              	.LVL758:
 6344              	.L350:
1367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6345              		.loc 1 1367 0
 6346 002c 0120     		movs	r0, #1
 6347              	.LVL759:
 6348 002e 08BD     		pop	{r3, pc}
 6349              	.LVL760:
 6350              	.L351:
 6351 0030 0120     		movs	r0, #1
 6352              	.LVL761:
 6353 0032 08BD     		pop	{r3, pc}
 6354              	.LVL762:
 6355              	.L352:
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6356              		.loc 1 1371 0
 6357 0034 0220     		movs	r0, #2
 6358              	.LVL763:
1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6359              		.loc 1 1382 0
 6360 0036 08BD     		pop	{r3, pc}
 6361              		.cfi_endproc
 6362              	.LFE245:
 6364              		.section	.text.HAL_UARTEx_ReceiveToIdle_IT,"ax",%progbits
 6365              		.align	2
 6366              		.global	HAL_UARTEx_ReceiveToIdle_IT
 6367              		.thumb
 6368              		.thumb_func
 6370              	HAL_UARTEx_ReceiveToIdle_IT:
 6371              	.LFB252:
1752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status;
 6372              		.loc 1 1752 0
 6373              		.cfi_startproc
 6374              		@ args = 0, pretend = 0, frame = 8
 6375              		@ frame_needed = 0, uses_anonymous_args = 0
 6376              	.LVL764:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 212


1756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 6377              		.loc 1 1756 0
 6378 0000 90F83E30 		ldrb	r3, [r0, #62]	@ zero_extendqisi2
 6379 0004 DBB2     		uxtb	r3, r3
 6380 0006 202B     		cmp	r3, #32
 6381 0008 29D1     		bne	.L357
1758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 6382              		.loc 1 1758 0
 6383 000a 51B3     		cbz	r1, .L358
1758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 6384              		.loc 1 1758 0 is_stmt 0 discriminator 1
 6385 000c 5AB3     		cbz	r2, .L359
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6386              		.loc 1 1763 0 is_stmt 1
 6387 000e 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 6388 0012 012B     		cmp	r3, #1
 6389 0014 29D0     		beq	.L360
1752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status;
 6390              		.loc 1 1752 0 discriminator 2
 6391 0016 10B5     		push	{r4, lr}
 6392              	.LCFI51:
 6393              		.cfi_def_cfa_offset 8
 6394              		.cfi_offset 4, -8
 6395              		.cfi_offset 14, -4
 6396 0018 82B0     		sub	sp, sp, #8
 6397              	.LCFI52:
 6398              		.cfi_def_cfa_offset 16
 6399 001a 0446     		mov	r4, r0
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6400              		.loc 1 1763 0 discriminator 2
 6401 001c 0123     		movs	r3, #1
 6402 001e 80F83C30 		strb	r3, [r0, #60]
1766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6403              		.loc 1 1766 0 discriminator 2
 6404 0022 0363     		str	r3, [r0, #48]
1768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6405              		.loc 1 1768 0 discriminator 2
 6406 0024 FFF7FEFF 		bl	UART_Start_Receive_IT
 6407              	.LVL765:
1771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 6408              		.loc 1 1771 0 discriminator 2
 6409 0028 0346     		mov	r3, r0
 6410 002a 00BB     		cbnz	r0, .L361
1773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 6411              		.loc 1 1773 0
 6412 002c 226B     		ldr	r2, [r4, #48]
 6413 002e 012A     		cmp	r2, #1
 6414 0030 1ED1     		bne	.L362
 6415              	.LBB612:
1775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 6416              		.loc 1 1775 0
 6417 0032 0022     		movs	r2, #0
 6418 0034 0192     		str	r2, [sp, #4]
 6419 0036 2268     		ldr	r2, [r4]
 6420 0038 1168     		ldr	r1, [r2]
 6421 003a 0191     		str	r1, [sp, #4]
 6422 003c 5268     		ldr	r2, [r2, #4]
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 213


 6423 003e 0192     		str	r2, [sp, #4]
 6424 0040 019A     		ldr	r2, [sp, #4]
 6425              	.LVL766:
 6426              	.L356:
 6427              	.LBE612:
 6428              	.LBB613:
1776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 6429              		.loc 1 1776 0 discriminator 1
 6430 0042 2168     		ldr	r1, [r4]
 6431              	.LVL767:
 6432              	.LBB614:
 6433              	.LBB615:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6434              		.loc 2 1072 0 discriminator 1
 6435 0044 01F10C02 		add	r2, r1, #12
 6436              	.LVL768:
 6437              		.syntax unified
 6438              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6439 0048 52E8002F 		ldrex r2, [r2]
 6440              	@ 0 "" 2
 6441              	.LVL769:
 6442              		.thumb
 6443              		.syntax unified
 6444              	.LBE615:
 6445              	.LBE614:
1776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 6446              		.loc 1 1776 0 discriminator 1
 6447 004c 42F01002 		orr	r2, r2, #16
 6448              	.LVL770:
 6449              	.LBB616:
 6450              	.LBB617:
 6451              		.loc 2 1123 0 discriminator 1
 6452 0050 0C31     		adds	r1, r1, #12
 6453              	.LVL771:
 6454              		.syntax unified
 6455              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6456 0052 41E80020 		strex r0, r2, [r1]
 6457              	@ 0 "" 2
 6458              	.LVL772:
 6459              		.thumb
 6460              		.syntax unified
 6461              	.LBE617:
 6462              	.LBE616:
1776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 6463              		.loc 1 1776 0 discriminator 1
 6464 0056 0028     		cmp	r0, #0
 6465 0058 F3D1     		bne	.L356
 6466              	.LBE613:
1768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6467              		.loc 1 1768 0
 6468 005a 1846     		mov	r0, r3
 6469              	.LBB618:
 6470 005c 09E0     		b	.L355
 6471              	.LVL773:
 6472              	.L357:
 6473              	.LCFI53:
 6474              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 214


 6475              		.cfi_restore 4
 6476              		.cfi_restore 14
 6477              	.LBE618:
1792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 6478              		.loc 1 1792 0
 6479 005e 0220     		movs	r0, #2
 6480              	.LVL774:
1794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6481              		.loc 1 1794 0
 6482 0060 7047     		bx	lr
 6483              	.LVL775:
 6484              	.L358:
1760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6485              		.loc 1 1760 0
 6486 0062 0120     		movs	r0, #1
 6487              	.LVL776:
 6488 0064 7047     		bx	lr
 6489              	.LVL777:
 6490              	.L359:
 6491 0066 0120     		movs	r0, #1
 6492              	.LVL778:
 6493 0068 7047     		bx	lr
 6494              	.LVL779:
 6495              	.L360:
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6496              		.loc 1 1763 0
 6497 006a 0220     		movs	r0, #2
 6498              	.LVL780:
 6499 006c 7047     		bx	lr
 6500              	.LVL781:
 6501              	.L361:
 6502              	.LCFI54:
 6503              		.cfi_def_cfa_offset 16
 6504              		.cfi_offset 4, -8
 6505              		.cfi_offset 14, -4
 6506 006e 00E0     		b	.L355
 6507              	.L362:
1784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 6508              		.loc 1 1784 0
 6509 0070 0120     		movs	r0, #1
 6510              	.LVL782:
 6511              	.L355:
1794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6512              		.loc 1 1794 0
 6513 0072 02B0     		add	sp, sp, #8
 6514              	.LCFI55:
 6515              		.cfi_def_cfa_offset 8
 6516              		@ sp needed
 6517 0074 10BD     		pop	{r4, pc}
 6518              		.cfi_endproc
 6519              	.LFE252:
 6521 0076 00BF     		.section	.text.UART_Start_Receive_DMA,"ax",%progbits
 6522              		.align	2
 6523              		.global	UART_Start_Receive_DMA
 6524              		.thumb
 6525              		.thumb_func
 6527              	UART_Start_Receive_DMA:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 215


 6528              	.LFB284:
3252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 6529              		.loc 1 3252 0
 6530              		.cfi_startproc
 6531              		@ args = 0, pretend = 0, frame = 8
 6532              		@ frame_needed = 0, uses_anonymous_args = 0
 6533              	.LVL783:
 6534 0000 30B5     		push	{r4, r5, lr}
 6535              	.LCFI56:
 6536              		.cfi_def_cfa_offset 12
 6537              		.cfi_offset 4, -12
 6538              		.cfi_offset 5, -8
 6539              		.cfi_offset 14, -4
 6540 0002 83B0     		sub	sp, sp, #12
 6541              	.LCFI57:
 6542              		.cfi_def_cfa_offset 24
 6543 0004 0446     		mov	r4, r0
 6544 0006 1346     		mov	r3, r2
3255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferSize = Size;
 6545              		.loc 1 3255 0
 6546 0008 8162     		str	r1, [r0, #40]
3256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6547              		.loc 1 3256 0
 6548 000a 8285     		strh	r2, [r0, #44]	@ movhi
3258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 6549              		.loc 1 3258 0
 6550 000c 0025     		movs	r5, #0
 6551 000e 0564     		str	r5, [r0, #64]
3259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6552              		.loc 1 3259 0
 6553 0010 2222     		movs	r2, #34
 6554              	.LVL784:
 6555 0012 80F83E20 		strb	r2, [r0, #62]
3262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6556              		.loc 1 3262 0
 6557 0016 826B     		ldr	r2, [r0, #56]
 6558 0018 2048     		ldr	r0, .L371
 6559              	.LVL785:
 6560 001a D063     		str	r0, [r2, #60]
 6561              	.LVL786:
3265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6562              		.loc 1 3265 0
 6563 001c A26B     		ldr	r2, [r4, #56]
 6564 001e 2048     		ldr	r0, .L371+4
 6565 0020 1064     		str	r0, [r2, #64]
3268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6566              		.loc 1 3268 0
 6567 0022 A26B     		ldr	r2, [r4, #56]
 6568 0024 1F48     		ldr	r0, .L371+8
 6569 0026 D064     		str	r0, [r2, #76]
3271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6570              		.loc 1 3271 0
 6571 0028 A26B     		ldr	r2, [r4, #56]
 6572 002a 1565     		str	r5, [r2, #80]
 6573              	.LVL787:
3275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6574              		.loc 1 3275 0
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 216


 6575 002c 2068     		ldr	r0, [r4]
 6576 002e 0A46     		mov	r2, r1
 6577 0030 011D     		adds	r1, r0, #4
 6578              	.LVL788:
 6579 0032 A06B     		ldr	r0, [r4, #56]
 6580 0034 FFF7FEFF 		bl	HAL_DMA_Start_IT
 6581              	.LVL789:
 6582              	.LBB619:
3278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6583              		.loc 1 3278 0
 6584 0038 0195     		str	r5, [sp, #4]
 6585 003a 2368     		ldr	r3, [r4]
 6586 003c 1A68     		ldr	r2, [r3]
 6587 003e 0192     		str	r2, [sp, #4]
 6588 0040 5B68     		ldr	r3, [r3, #4]
 6589 0042 0193     		str	r3, [sp, #4]
 6590 0044 019B     		ldr	r3, [sp, #4]
 6591              	.LBE619:
3281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6592              		.loc 1 3281 0
 6593 0046 84F83C50 		strb	r5, [r4, #60]
3283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 6594              		.loc 1 3283 0
 6595 004a 2369     		ldr	r3, [r4, #16]
 6596 004c 5BB1     		cbz	r3, .L368
 6597              	.L367:
 6598              	.LBB620:
3286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 6599              		.loc 1 3286 0 discriminator 1
 6600 004e 2268     		ldr	r2, [r4]
 6601              	.LVL790:
 6602              	.LBB621:
 6603              	.LBB622:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6604              		.loc 2 1072 0 discriminator 1
 6605 0050 02F10C03 		add	r3, r2, #12
 6606              	.LVL791:
 6607              		.syntax unified
 6608              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6609 0054 53E8003F 		ldrex r3, [r3]
 6610              	@ 0 "" 2
 6611              	.LVL792:
 6612              		.thumb
 6613              		.syntax unified
 6614              	.LBE622:
 6615              	.LBE621:
3286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 6616              		.loc 1 3286 0 discriminator 1
 6617 0058 43F48073 		orr	r3, r3, #256
 6618              	.LVL793:
 6619              	.LBB623:
 6620              	.LBB624:
 6621              		.loc 2 1123 0 discriminator 1
 6622 005c 0C32     		adds	r2, r2, #12
 6623              	.LVL794:
 6624              		.syntax unified
 6625              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 217


 6626 005e 42E80031 		strex r1, r3, [r2]
 6627              	@ 0 "" 2
 6628              	.LVL795:
 6629              		.thumb
 6630              		.syntax unified
 6631              	.LBE624:
 6632              	.LBE623:
3286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 6633              		.loc 1 3286 0 discriminator 1
 6634 0062 0029     		cmp	r1, #0
 6635 0064 F3D1     		bne	.L367
 6636              	.LVL796:
 6637              	.L368:
 6638              	.LBE620:
 6639              	.LBB625:
3290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6640              		.loc 1 3290 0 discriminator 1
 6641 0066 2268     		ldr	r2, [r4]
 6642              	.LVL797:
 6643              	.LBB626:
 6644              	.LBB627:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6645              		.loc 2 1072 0 discriminator 1
 6646 0068 02F11403 		add	r3, r2, #20
 6647              	.LVL798:
 6648              		.syntax unified
 6649              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6650 006c 53E8003F 		ldrex r3, [r3]
 6651              	@ 0 "" 2
 6652              	.LVL799:
 6653              		.thumb
 6654              		.syntax unified
 6655              	.LBE627:
 6656              	.LBE626:
3290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6657              		.loc 1 3290 0 discriminator 1
 6658 0070 43F00103 		orr	r3, r3, #1
 6659              	.LVL800:
 6660              	.LBB628:
 6661              	.LBB629:
 6662              		.loc 2 1123 0 discriminator 1
 6663 0074 1432     		adds	r2, r2, #20
 6664              	.LVL801:
 6665              		.syntax unified
 6666              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6667 0076 42E80031 		strex r1, r3, [r2]
 6668              	@ 0 "" 2
 6669              	.LVL802:
 6670              		.thumb
 6671              		.syntax unified
 6672              	.LBE629:
 6673              	.LBE628:
3290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6674              		.loc 1 3290 0 discriminator 1
 6675 007a 0029     		cmp	r1, #0
 6676 007c F3D1     		bne	.L368
 6677              	.LVL803:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 218


 6678              	.L369:
 6679              	.LBE625:
 6680              	.LBB630:
3294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6681              		.loc 1 3294 0 discriminator 1
 6682 007e 2268     		ldr	r2, [r4]
 6683              	.LVL804:
 6684              	.LBB631:
 6685              	.LBB632:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6686              		.loc 2 1072 0 discriminator 1
 6687 0080 02F11403 		add	r3, r2, #20
 6688              	.LVL805:
 6689              		.syntax unified
 6690              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6691 0084 53E8003F 		ldrex r3, [r3]
 6692              	@ 0 "" 2
 6693              	.LVL806:
 6694              		.thumb
 6695              		.syntax unified
 6696              	.LBE632:
 6697              	.LBE631:
3294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6698              		.loc 1 3294 0 discriminator 1
 6699 0088 43F04003 		orr	r3, r3, #64
 6700              	.LVL807:
 6701              	.LBB633:
 6702              	.LBB634:
 6703              		.loc 2 1123 0 discriminator 1
 6704 008c 1432     		adds	r2, r2, #20
 6705              	.LVL808:
 6706              		.syntax unified
 6707              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6708 008e 42E80031 		strex r1, r3, [r2]
 6709              	@ 0 "" 2
 6710              	.LVL809:
 6711              		.thumb
 6712              		.syntax unified
 6713              	.LBE634:
 6714              	.LBE633:
3294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6715              		.loc 1 3294 0 discriminator 1
 6716 0092 0029     		cmp	r1, #0
 6717 0094 F3D1     		bne	.L369
 6718              	.LBE630:
3297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6719              		.loc 1 3297 0
 6720 0096 0020     		movs	r0, #0
 6721 0098 03B0     		add	sp, sp, #12
 6722              	.LCFI58:
 6723              		.cfi_def_cfa_offset 12
 6724              		@ sp needed
 6725 009a 30BD     		pop	{r4, r5, pc}
 6726              	.LVL810:
 6727              	.L372:
 6728              		.align	2
 6729              	.L371:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 219


 6730 009c 00000000 		.word	UART_DMAReceiveCplt
 6731 00a0 00000000 		.word	UART_DMARxHalfCplt
 6732 00a4 00000000 		.word	UART_DMAError
 6733              		.cfi_endproc
 6734              	.LFE284:
 6736              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 6737              		.align	2
 6738              		.global	HAL_UART_Receive_DMA
 6739              		.thumb
 6740              		.thumb_func
 6742              	HAL_UART_Receive_DMA:
 6743              	.LFB247:
1464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 6744              		.loc 1 1464 0
 6745              		.cfi_startproc
 6746              		@ args = 0, pretend = 0, frame = 0
 6747              		@ frame_needed = 0, uses_anonymous_args = 0
 6748              	.LVL811:
 6749 0000 08B5     		push	{r3, lr}
 6750              	.LCFI59:
 6751              		.cfi_def_cfa_offset 8
 6752              		.cfi_offset 3, -8
 6753              		.cfi_offset 14, -4
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 6754              		.loc 1 1466 0
 6755 0002 90F83E30 		ldrb	r3, [r0, #62]	@ zero_extendqisi2
 6756 0006 DBB2     		uxtb	r3, r3
 6757 0008 202B     		cmp	r3, #32
 6758 000a 0DD1     		bne	.L375
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 6759              		.loc 1 1468 0
 6760 000c 71B1     		cbz	r1, .L376
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 6761              		.loc 1 1468 0 is_stmt 0 discriminator 1
 6762 000e 7AB1     		cbz	r2, .L377
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6763              		.loc 1 1474 0 is_stmt 1
 6764 0010 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 6765 0014 012B     		cmp	r3, #1
 6766 0016 0DD0     		beq	.L378
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6767              		.loc 1 1474 0 is_stmt 0 discriminator 2
 6768 0018 0123     		movs	r3, #1
 6769 001a 80F83C30 		strb	r3, [r0, #60]
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6770              		.loc 1 1477 0 is_stmt 1 discriminator 2
 6771 001e 0023     		movs	r3, #0
 6772 0020 0363     		str	r3, [r0, #48]
1479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 6773              		.loc 1 1479 0 discriminator 2
 6774 0022 FFF7FEFF 		bl	UART_Start_Receive_DMA
 6775              	.LVL812:
 6776 0026 08BD     		pop	{r3, pc}
 6777              	.LVL813:
 6778              	.L375:
1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 6779              		.loc 1 1483 0
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 220


 6780 0028 0220     		movs	r0, #2
 6781              	.LVL814:
 6782 002a 08BD     		pop	{r3, pc}
 6783              	.LVL815:
 6784              	.L376:
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6785              		.loc 1 1470 0
 6786 002c 0120     		movs	r0, #1
 6787              	.LVL816:
 6788 002e 08BD     		pop	{r3, pc}
 6789              	.LVL817:
 6790              	.L377:
 6791 0030 0120     		movs	r0, #1
 6792              	.LVL818:
 6793 0032 08BD     		pop	{r3, pc}
 6794              	.LVL819:
 6795              	.L378:
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6796              		.loc 1 1474 0
 6797 0034 0220     		movs	r0, #2
 6798              	.LVL820:
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6799              		.loc 1 1485 0
 6800 0036 08BD     		pop	{r3, pc}
 6801              		.cfi_endproc
 6802              	.LFE247:
 6804              		.section	.text.HAL_UARTEx_ReceiveToIdle_DMA,"ax",%progbits
 6805              		.align	2
 6806              		.global	HAL_UARTEx_ReceiveToIdle_DMA
 6807              		.thumb
 6808              		.thumb_func
 6810              	HAL_UARTEx_ReceiveToIdle_DMA:
 6811              	.LFB253:
1813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status;
 6812              		.loc 1 1813 0
 6813              		.cfi_startproc
 6814              		@ args = 0, pretend = 0, frame = 8
 6815              		@ frame_needed = 0, uses_anonymous_args = 0
 6816              	.LVL821:
1817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 6817              		.loc 1 1817 0
 6818 0000 90F83E30 		ldrb	r3, [r0, #62]	@ zero_extendqisi2
 6819 0004 DBB2     		uxtb	r3, r3
 6820 0006 202B     		cmp	r3, #32
 6821 0008 29D1     		bne	.L383
1819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 6822              		.loc 1 1819 0
 6823 000a 51B3     		cbz	r1, .L384
1819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 6824              		.loc 1 1819 0 is_stmt 0 discriminator 1
 6825 000c 5AB3     		cbz	r2, .L385
1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6826              		.loc 1 1824 0 is_stmt 1
 6827 000e 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 6828 0012 012B     		cmp	r3, #1
 6829 0014 29D0     		beq	.L386
1813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status;
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 221


 6830              		.loc 1 1813 0 discriminator 2
 6831 0016 10B5     		push	{r4, lr}
 6832              	.LCFI60:
 6833              		.cfi_def_cfa_offset 8
 6834              		.cfi_offset 4, -8
 6835              		.cfi_offset 14, -4
 6836 0018 82B0     		sub	sp, sp, #8
 6837              	.LCFI61:
 6838              		.cfi_def_cfa_offset 16
 6839 001a 0446     		mov	r4, r0
1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6840              		.loc 1 1824 0 discriminator 2
 6841 001c 0123     		movs	r3, #1
 6842 001e 80F83C30 		strb	r3, [r0, #60]
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6843              		.loc 1 1827 0 discriminator 2
 6844 0022 0363     		str	r3, [r0, #48]
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6845              		.loc 1 1829 0 discriminator 2
 6846 0024 FFF7FEFF 		bl	UART_Start_Receive_DMA
 6847              	.LVL822:
1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 6848              		.loc 1 1832 0 discriminator 2
 6849 0028 0346     		mov	r3, r0
 6850 002a 00BB     		cbnz	r0, .L387
1834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 6851              		.loc 1 1834 0
 6852 002c 226B     		ldr	r2, [r4, #48]
 6853 002e 012A     		cmp	r2, #1
 6854 0030 1ED1     		bne	.L388
 6855              	.LBB635:
1836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 6856              		.loc 1 1836 0
 6857 0032 0022     		movs	r2, #0
 6858 0034 0192     		str	r2, [sp, #4]
 6859 0036 2268     		ldr	r2, [r4]
 6860 0038 1168     		ldr	r1, [r2]
 6861 003a 0191     		str	r1, [sp, #4]
 6862 003c 5268     		ldr	r2, [r2, #4]
 6863 003e 0192     		str	r2, [sp, #4]
 6864 0040 019A     		ldr	r2, [sp, #4]
 6865              	.LVL823:
 6866              	.L382:
 6867              	.LBE635:
 6868              	.LBB636:
1837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 6869              		.loc 1 1837 0 discriminator 1
 6870 0042 2168     		ldr	r1, [r4]
 6871              	.LVL824:
 6872              	.LBB637:
 6873              	.LBB638:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6874              		.loc 2 1072 0 discriminator 1
 6875 0044 01F10C02 		add	r2, r1, #12
 6876              	.LVL825:
 6877              		.syntax unified
 6878              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 222


 6879 0048 52E8002F 		ldrex r2, [r2]
 6880              	@ 0 "" 2
 6881              	.LVL826:
 6882              		.thumb
 6883              		.syntax unified
 6884              	.LBE638:
 6885              	.LBE637:
1837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 6886              		.loc 1 1837 0 discriminator 1
 6887 004c 42F01002 		orr	r2, r2, #16
 6888              	.LVL827:
 6889              	.LBB639:
 6890              	.LBB640:
 6891              		.loc 2 1123 0 discriminator 1
 6892 0050 0C31     		adds	r1, r1, #12
 6893              	.LVL828:
 6894              		.syntax unified
 6895              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6896 0052 41E80020 		strex r0, r2, [r1]
 6897              	@ 0 "" 2
 6898              	.LVL829:
 6899              		.thumb
 6900              		.syntax unified
 6901              	.LBE640:
 6902              	.LBE639:
1837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 6903              		.loc 1 1837 0 discriminator 1
 6904 0056 0028     		cmp	r0, #0
 6905 0058 F3D1     		bne	.L382
 6906              	.LBE636:
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6907              		.loc 1 1829 0
 6908 005a 1846     		mov	r0, r3
 6909              	.LBB641:
 6910 005c 09E0     		b	.L381
 6911              	.LVL830:
 6912              	.L383:
 6913              	.LCFI62:
 6914              		.cfi_def_cfa_offset 0
 6915              		.cfi_restore 4
 6916              		.cfi_restore 14
 6917              	.LBE641:
1853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 6918              		.loc 1 1853 0
 6919 005e 0220     		movs	r0, #2
 6920              	.LVL831:
1855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6921              		.loc 1 1855 0
 6922 0060 7047     		bx	lr
 6923              	.LVL832:
 6924              	.L384:
1821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6925              		.loc 1 1821 0
 6926 0062 0120     		movs	r0, #1
 6927              	.LVL833:
 6928 0064 7047     		bx	lr
 6929              	.LVL834:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 223


 6930              	.L385:
 6931 0066 0120     		movs	r0, #1
 6932              	.LVL835:
 6933 0068 7047     		bx	lr
 6934              	.LVL836:
 6935              	.L386:
1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6936              		.loc 1 1824 0
 6937 006a 0220     		movs	r0, #2
 6938              	.LVL837:
 6939 006c 7047     		bx	lr
 6940              	.LVL838:
 6941              	.L387:
 6942              	.LCFI63:
 6943              		.cfi_def_cfa_offset 16
 6944              		.cfi_offset 4, -8
 6945              		.cfi_offset 14, -4
 6946 006e 00E0     		b	.L381
 6947              	.L388:
1845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 6948              		.loc 1 1845 0
 6949 0070 0120     		movs	r0, #1
 6950              	.LVL839:
 6951              	.L381:
1855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 6952              		.loc 1 1855 0
 6953 0072 02B0     		add	sp, sp, #8
 6954              	.LCFI64:
 6955              		.cfi_def_cfa_offset 8
 6956              		@ sp needed
 6957 0074 10BD     		pop	{r4, pc}
 6958              		.cfi_endproc
 6959              	.LFE253:
 6961 0076 00BF     		.text
 6962              	.Letext0:
 6963              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\mach
 6964              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys\
 6965              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 6966              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 6967              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 6968              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 6969              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 6970              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 6971              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 6972              		.file 12 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 224


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal_uart.c
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:22     .text.UART_EndTxTransfer:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:26     .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:85     .text.UART_EndRxTransfer:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:89     .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:236    .text.UART_Transmit_IT:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:240    .text.UART_Transmit_IT:00000000 UART_Transmit_IT
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:323    .text.UART_SetConfig:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:327    .text.UART_SetConfig:00000000 UART_SetConfig
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:478    .text.UART_SetConfig:00000108 $d
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:484    .text.UART_WaitOnFlagUntilTimeout:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:488    .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:636    .text.HAL_UART_MspInit:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:641    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:654    .text.HAL_UART_Init:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:659    .text.HAL_UART_Init:00000000 HAL_UART_Init
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:737    .text.HAL_HalfDuplex_Init:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:742    .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:826    .text.HAL_LIN_Init:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:831    .text.HAL_LIN_Init:00000000 HAL_LIN_Init
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:931    .text.HAL_MultiProcessor_Init:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:936    .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:1042   .text.HAL_UART_MspDeInit:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:1047   .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:1060   .text.HAL_UART_DeInit:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:1065   .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:1119   .text.HAL_UART_Transmit:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:1124   .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:1300   .text.HAL_UART_Receive:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:1305   .text.HAL_UART_Receive:00000000 HAL_UART_Receive
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:1495   .text.HAL_UART_Transmit_IT:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:1500   .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:1575   .text.HAL_UART_Transmit_DMA:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:1580   .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:1728   .text.HAL_UART_Transmit_DMA:00000090 $d
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:3317   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:3492   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:3574   .text.UART_DMAError:00000000 UART_DMAError
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:1735   .text.HAL_UART_DMAPause:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:1740   .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:1965   .text.HAL_UART_DMAResume:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:1970   .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:2216   .text.HAL_UART_DMAStop:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:2221   .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:2373   .text.HAL_UARTEx_ReceiveToIdle:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:2378   .text.HAL_UARTEx_ReceiveToIdle:00000000 HAL_UARTEx_ReceiveToIdle
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:2611   .text.HAL_UART_Abort:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:2616   .text.HAL_UART_Abort:00000000 HAL_UART_Abort
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:2920   .text.HAL_UART_AbortTransmit:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:2925   .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:3063   .text.HAL_UART_AbortReceive:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:3068   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:3295   .text.HAL_UART_TxCpltCallback:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:3300   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:3313   .text.UART_DMATransmitCplt:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:3436   .text.UART_EndTransmit_IT:00000000 $t
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 225


C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:3440   .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:3470   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:3475   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:3488   .text.UART_DMATxHalfCplt:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:3516   .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:3521   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:3534   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:3539   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:3552   .text.HAL_UART_ErrorCallback:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:3557   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:3570   .text.UART_DMAError:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:3645   .text.UART_DMAAbortOnError:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:3649   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:3677   .text.HAL_UART_AbortCpltCallback:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:3682   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:3695   .text.HAL_UART_Abort_IT:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:3700   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:4047   .text.HAL_UART_Abort_IT:0000011c $d
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:4110   .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:4057   .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:4053   .text.UART_DMARxAbortCallback:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:4106   .text.UART_DMATxAbortCallback:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:4159   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:4164   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:4177   .text.HAL_UART_AbortTransmit_IT:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:4182   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:4336   .text.HAL_UART_AbortTransmit_IT:0000007c $d
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:4345   .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:4341   .text.UART_DMATxOnlyAbortCallback:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:4374   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:4379   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:4392   .text.HAL_UART_AbortReceive_IT:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:4397   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:4642   .text.HAL_UART_AbortReceive_IT:000000b8 $d
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:4651   .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:4647   .text.UART_DMARxOnlyAbortCallback:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:4682   .text.HAL_UARTEx_RxEventCallback:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:4687   .text.HAL_UARTEx_RxEventCallback:00000000 HAL_UARTEx_RxEventCallback
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:4700   .text.UART_Receive_IT:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:4704   .text.UART_Receive_IT:00000000 UART_Receive_IT
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:4904   .text.HAL_UART_IRQHandler:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:4909   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:5556   .text.HAL_UART_IRQHandler:00000278 $d
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:5561   .text.UART_DMARxHalfCplt:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:5565   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:5600   .text.UART_DMAReceiveCplt:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:5604   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:5821   .text.HAL_LIN_SendBreak:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:5826   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:5906   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:5911   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:5991   .text.HAL_MultiProcessor_ExitMuteMode:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:5996   .text.HAL_MultiProcessor_ExitMuteMode:00000000 HAL_MultiProcessor_ExitMuteMode
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:6076   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:6081   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:6134   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:6139   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s 			page 226


C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:6192   .text.HAL_UART_GetState:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:6197   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:6219   .text.HAL_UART_GetError:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:6224   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:6241   .text.UART_Start_Receive_IT:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:6246   .text.UART_Start_Receive_IT:00000000 UART_Start_Receive_IT
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:6297   .text.HAL_UART_Receive_IT:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:6302   .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:6365   .text.HAL_UARTEx_ReceiveToIdle_IT:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:6370   .text.HAL_UARTEx_ReceiveToIdle_IT:00000000 HAL_UARTEx_ReceiveToIdle_IT
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:6522   .text.UART_Start_Receive_DMA:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:6527   .text.UART_Start_Receive_DMA:00000000 UART_Start_Receive_DMA
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:6730   .text.UART_Start_Receive_DMA:0000009c $d
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:6737   .text.HAL_UART_Receive_DMA:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:6742   .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:6805   .text.HAL_UARTEx_ReceiveToIdle_DMA:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cc7J9AVD.s:6810   .text.HAL_UARTEx_ReceiveToIdle_DMA:00000000 HAL_UARTEx_ReceiveToIdle_DMA
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_uldivmod
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetPCLK1Freq
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
