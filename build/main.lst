ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"main.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.MX_GPIO_Init,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB240:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s 			page 2


  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** /* USER CODE END PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PM */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:Core/Src/main.c ****  ADC_HandleTypeDef hadc1;
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** UART_HandleTypeDef huart4;
  45:Core/Src/main.c **** UART_HandleTypeDef huart1;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  52:Core/Src/main.c **** void SystemClock_Config(void);
  53:Core/Src/main.c **** static void MX_GPIO_Init(void);
  54:Core/Src/main.c **** static void MX_ADC1_Init(void);
  55:Core/Src/main.c **** static void MX_UART4_Init(void);
  56:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  57:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE END PFP */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  62:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* USER CODE END 0 */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /**
  67:Core/Src/main.c ****   * @brief  The application entry point.
  68:Core/Src/main.c ****   * @retval int
  69:Core/Src/main.c ****   */
  70:Core/Src/main.c **** int main(void)
  71:Core/Src/main.c **** {
  72:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* USER CODE END 1 */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  79:Core/Src/main.c ****   HAL_Init();
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE END Init */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* Configure the system clock */
  86:Core/Src/main.c ****   SystemClock_Config();
  87:Core/Src/main.c **** 
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s 			page 3


  88:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE END SysInit */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* Initialize all configured peripherals */
  93:Core/Src/main.c ****   MX_GPIO_Init();
  94:Core/Src/main.c ****   MX_ADC1_Init();
  95:Core/Src/main.c ****   MX_UART4_Init();
  96:Core/Src/main.c ****   MX_USART1_UART_Init();
  97:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE END 2 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* Infinite loop */
 102:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 103:Core/Src/main.c ****   while (1)
 104:Core/Src/main.c ****   {
 105:Core/Src/main.c ****     /* USER CODE END WHILE */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 108:Core/Src/main.c ****   }
 109:Core/Src/main.c ****   /* USER CODE END 3 */
 110:Core/Src/main.c **** }
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** /**
 113:Core/Src/main.c ****   * @brief System Clock Configuration
 114:Core/Src/main.c ****   * @retval None
 115:Core/Src/main.c ****   */
 116:Core/Src/main.c **** void SystemClock_Config(void)
 117:Core/Src/main.c **** {
 118:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 119:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 122:Core/Src/main.c ****   */
 123:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 124:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 127:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 128:Core/Src/main.c ****   */
 129:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 130:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 137:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 138:Core/Src/main.c ****   {
 139:Core/Src/main.c ****     Error_Handler();
 140:Core/Src/main.c ****   }
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 143:Core/Src/main.c ****   */
 144:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s 			page 4


 145:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 146:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 147:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 148:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 152:Core/Src/main.c ****   {
 153:Core/Src/main.c ****     Error_Handler();
 154:Core/Src/main.c ****   }
 155:Core/Src/main.c ****   HAL_RCC_MCOConfig(RCC_MCO1, RCC_MCO1SOURCE_PLLCLK, RCC_MCODIV_1);
 156:Core/Src/main.c ****   HAL_RCC_MCOConfig(RCC_MCO2, RCC_MCO2SOURCE_SYSCLK, RCC_MCODIV_1);
 157:Core/Src/main.c **** }
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** /**
 160:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 161:Core/Src/main.c ****   * @param None
 162:Core/Src/main.c ****   * @retval None
 163:Core/Src/main.c ****   */
 164:Core/Src/main.c **** static void MX_ADC1_Init(void)
 165:Core/Src/main.c **** {
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 178:Core/Src/main.c ****   */
 179:Core/Src/main.c ****   hadc1.Instance = ADC1;
 180:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 181:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 182:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 183:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 184:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 185:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 186:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 187:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 188:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 189:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 190:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 191:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 192:Core/Src/main.c ****   {
 193:Core/Src/main.c ****     Error_Handler();
 194:Core/Src/main.c ****   }
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 197:Core/Src/main.c ****   */
 198:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_9;
 199:Core/Src/main.c ****   sConfig.Rank = 1;
 200:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 201:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s 			page 5


 202:Core/Src/main.c ****   {
 203:Core/Src/main.c ****     Error_Handler();
 204:Core/Src/main.c ****   }
 205:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 208:Core/Src/main.c **** 
 209:Core/Src/main.c **** }
 210:Core/Src/main.c **** 
 211:Core/Src/main.c **** /**
 212:Core/Src/main.c ****   * @brief UART4 Initialization Function
 213:Core/Src/main.c ****   * @param None
 214:Core/Src/main.c ****   * @retval None
 215:Core/Src/main.c ****   */
 216:Core/Src/main.c **** static void MX_UART4_Init(void)
 217:Core/Src/main.c **** {
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 0 */
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /* USER CODE END UART4_Init 0 */
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 1 */
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   /* USER CODE END UART4_Init 1 */
 226:Core/Src/main.c ****   huart4.Instance = UART4;
 227:Core/Src/main.c ****   huart4.Init.BaudRate = 115200;
 228:Core/Src/main.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 229:Core/Src/main.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
 230:Core/Src/main.c ****   huart4.Init.Parity = UART_PARITY_NONE;
 231:Core/Src/main.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
 232:Core/Src/main.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 233:Core/Src/main.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 234:Core/Src/main.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 235:Core/Src/main.c ****   {
 236:Core/Src/main.c ****     Error_Handler();
 237:Core/Src/main.c ****   }
 238:Core/Src/main.c ****   /* USER CODE BEGIN UART4_Init 2 */
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****   /* USER CODE END UART4_Init 2 */
 241:Core/Src/main.c **** 
 242:Core/Src/main.c **** }
 243:Core/Src/main.c **** 
 244:Core/Src/main.c **** /**
 245:Core/Src/main.c ****   * @brief USART1 Initialization Function
 246:Core/Src/main.c ****   * @param None
 247:Core/Src/main.c ****   * @retval None
 248:Core/Src/main.c ****   */
 249:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 250:Core/Src/main.c **** {
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s 			page 6


 259:Core/Src/main.c ****   huart1.Instance = USART1;
 260:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 261:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 262:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 263:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 264:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 265:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 266:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 267:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 268:Core/Src/main.c ****   {
 269:Core/Src/main.c ****     Error_Handler();
 270:Core/Src/main.c ****   }
 271:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 274:Core/Src/main.c **** 
 275:Core/Src/main.c **** }
 276:Core/Src/main.c **** 
 277:Core/Src/main.c **** /**
 278:Core/Src/main.c ****   * @brief GPIO Initialization Function
 279:Core/Src/main.c ****   * @param None
 280:Core/Src/main.c ****   * @retval None
 281:Core/Src/main.c ****   */
 282:Core/Src/main.c **** static void MX_GPIO_Init(void)
 283:Core/Src/main.c **** {
  29              		.loc 1 283 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 48
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 36
  36              		.cfi_offset 4, -36
  37              		.cfi_offset 5, -32
  38              		.cfi_offset 6, -28
  39              		.cfi_offset 7, -24
  40              		.cfi_offset 8, -20
  41              		.cfi_offset 9, -16
  42              		.cfi_offset 10, -12
  43              		.cfi_offset 11, -8
  44              		.cfi_offset 14, -4
  45 0004 8DB0     		sub	sp, sp, #52
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 88
 284:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  48              		.loc 1 284 0
  49 0006 0024     		movs	r4, #0
  50 0008 0794     		str	r4, [sp, #28]
  51 000a 0894     		str	r4, [sp, #32]
  52 000c 0994     		str	r4, [sp, #36]
  53 000e 0A94     		str	r4, [sp, #40]
  54 0010 0B94     		str	r4, [sp, #44]
  55              	.LBB4:
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 287:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  56              		.loc 1 287 0
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s 			page 7


  57 0012 0194     		str	r4, [sp, #4]
  58 0014 844B     		ldr	r3, .L3
  59 0016 1A6B     		ldr	r2, [r3, #48]
  60 0018 42F01002 		orr	r2, r2, #16
  61 001c 1A63     		str	r2, [r3, #48]
  62 001e 1A6B     		ldr	r2, [r3, #48]
  63 0020 02F01002 		and	r2, r2, #16
  64 0024 0192     		str	r2, [sp, #4]
  65 0026 019A     		ldr	r2, [sp, #4]
  66              	.LBE4:
  67              	.LBB5:
 288:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  68              		.loc 1 288 0
  69 0028 0294     		str	r4, [sp, #8]
  70 002a 1A6B     		ldr	r2, [r3, #48]
  71 002c 42F00402 		orr	r2, r2, #4
  72 0030 1A63     		str	r2, [r3, #48]
  73 0032 1A6B     		ldr	r2, [r3, #48]
  74 0034 02F00402 		and	r2, r2, #4
  75 0038 0292     		str	r2, [sp, #8]
  76 003a 029A     		ldr	r2, [sp, #8]
  77              	.LBE5:
  78              	.LBB6:
 289:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  79              		.loc 1 289 0
  80 003c 0394     		str	r4, [sp, #12]
  81 003e 1A6B     		ldr	r2, [r3, #48]
  82 0040 42F08002 		orr	r2, r2, #128
  83 0044 1A63     		str	r2, [r3, #48]
  84 0046 1A6B     		ldr	r2, [r3, #48]
  85 0048 02F08002 		and	r2, r2, #128
  86 004c 0392     		str	r2, [sp, #12]
  87 004e 039A     		ldr	r2, [sp, #12]
  88              	.LBE6:
  89              	.LBB7:
 290:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  90              		.loc 1 290 0
  91 0050 0494     		str	r4, [sp, #16]
  92 0052 1A6B     		ldr	r2, [r3, #48]
  93 0054 42F00102 		orr	r2, r2, #1
  94 0058 1A63     		str	r2, [r3, #48]
  95 005a 1A6B     		ldr	r2, [r3, #48]
  96 005c 02F00102 		and	r2, r2, #1
  97 0060 0492     		str	r2, [sp, #16]
  98 0062 049A     		ldr	r2, [sp, #16]
  99              	.LBE7:
 100              	.LBB8:
 291:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 101              		.loc 1 291 0
 102 0064 0594     		str	r4, [sp, #20]
 103 0066 1A6B     		ldr	r2, [r3, #48]
 104 0068 42F00202 		orr	r2, r2, #2
 105 006c 1A63     		str	r2, [r3, #48]
 106 006e 1A6B     		ldr	r2, [r3, #48]
 107 0070 02F00202 		and	r2, r2, #2
 108 0074 0592     		str	r2, [sp, #20]
 109 0076 059A     		ldr	r2, [sp, #20]
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s 			page 8


 110              	.LBE8:
 111              	.LBB9:
 292:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 112              		.loc 1 292 0
 113 0078 0694     		str	r4, [sp, #24]
 114 007a 1A6B     		ldr	r2, [r3, #48]
 115 007c 42F00802 		orr	r2, r2, #8
 116 0080 1A63     		str	r2, [r3, #48]
 117 0082 1B6B     		ldr	r3, [r3, #48]
 118 0084 03F00803 		and	r3, r3, #8
 119 0088 0693     		str	r3, [sp, #24]
 120 008a 069B     		ldr	r3, [sp, #24]
 121              	.LBE9:
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 295:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOE, GPIO_PIN_4|GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_10
 122              		.loc 1 295 0
 123 008c 674E     		ldr	r6, .L3+4
 124 008e 2246     		mov	r2, r4
 125 0090 40F29351 		movw	r1, #1427
 126 0094 3046     		mov	r0, r6
 127 0096 FFF7FEFF 		bl	HAL_GPIO_WritePin
 128              	.LVL0:
 296:Core/Src/main.c ****                           |GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 299:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13|GPIO_PIN_8|GPIO_PIN_12, GPIO_PIN_RESET);
 129              		.loc 1 299 0
 130 009a 2246     		mov	r2, r4
 131 009c 4FF44451 		mov	r1, #12544
 132 00a0 6348     		ldr	r0, .L3+8
 133 00a2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 134              	.LVL1:
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 302:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11
 135              		.loc 1 302 0
 136 00a6 2246     		mov	r2, r4
 137 00a8 4FF6FF71 		movw	r1, #65535
 138 00ac 6148     		ldr	r0, .L3+12
 139 00ae FFF7FEFF 		bl	HAL_GPIO_WritePin
 140              	.LVL2:
 303:Core/Src/main.c ****                           |GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15
 304:Core/Src/main.c ****                           |GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 305:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7, GPIO_PIN_RESET);
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 308:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_11|GPIO_PIN_12, GPIO_PIN_RESET);
 141              		.loc 1 308 0
 142 00b2 2246     		mov	r2, r4
 143 00b4 4FF4C051 		mov	r1, #6144
 144 00b8 5F48     		ldr	r0, .L3+16
 145 00ba FFF7FEFF 		bl	HAL_GPIO_WritePin
 146              	.LVL3:
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****   /*Configure GPIO pins : PE4 PE7 PE8 PE10
 311:Core/Src/main.c ****                            PE0 PE1 */
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s 			page 9


 312:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_10
 147              		.loc 1 312 0
 148 00be 40F29353 		movw	r3, #1427
 149 00c2 0793     		str	r3, [sp, #28]
 313:Core/Src/main.c ****                           |GPIO_PIN_0|GPIO_PIN_1;
 314:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 150              		.loc 1 314 0
 151 00c4 4FF00108 		mov	r8, #1
 152 00c8 CDF82080 		str	r8, [sp, #32]
 315:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 153              		.loc 1 315 0
 154 00cc 0994     		str	r4, [sp, #36]
 316:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 155              		.loc 1 316 0
 156 00ce 0A94     		str	r4, [sp, #40]
 317:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 157              		.loc 1 317 0
 158 00d0 07A9     		add	r1, sp, #28
 159 00d2 3046     		mov	r0, r6
 160 00d4 FFF7FEFF 		bl	HAL_GPIO_Init
 161              	.LVL4:
 318:Core/Src/main.c **** 
 319:Core/Src/main.c ****   /*Configure GPIO pins : PE5 PE6 */
 320:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 162              		.loc 1 320 0
 163 00d8 6023     		movs	r3, #96
 164 00da 0793     		str	r3, [sp, #28]
 321:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 165              		.loc 1 321 0
 166 00dc 0225     		movs	r5, #2
 167 00de 0895     		str	r5, [sp, #32]
 322:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 168              		.loc 1 322 0
 169 00e0 0994     		str	r4, [sp, #36]
 323:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 170              		.loc 1 323 0
 171 00e2 0A94     		str	r4, [sp, #40]
 324:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF3_TIM9;
 172              		.loc 1 324 0
 173 00e4 0327     		movs	r7, #3
 174 00e6 0B97     		str	r7, [sp, #44]
 325:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 175              		.loc 1 325 0
 176 00e8 07A9     		add	r1, sp, #28
 177 00ea 3046     		mov	r0, r6
 178 00ec FFF7FEFF 		bl	HAL_GPIO_Init
 179              	.LVL5:
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****   /*Configure GPIO pins : PC13 PC8 PC12 */
 328:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_8|GPIO_PIN_12;
 180              		.loc 1 328 0
 181 00f0 4FF44453 		mov	r3, #12544
 182 00f4 0793     		str	r3, [sp, #28]
 329:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 183              		.loc 1 329 0
 184 00f6 CDF82080 		str	r8, [sp, #32]
 330:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s 			page 10


 185              		.loc 1 330 0
 186 00fa 0994     		str	r4, [sp, #36]
 331:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 187              		.loc 1 331 0
 188 00fc 0A94     		str	r4, [sp, #40]
 332:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 189              		.loc 1 332 0
 190 00fe 07A9     		add	r1, sp, #28
 191 0100 4B48     		ldr	r0, .L3+8
 192 0102 FFF7FEFF 		bl	HAL_GPIO_Init
 193              	.LVL6:
 333:Core/Src/main.c **** 
 334:Core/Src/main.c ****   /*Configure GPIO pins : PE9 PE11 */
 335:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_11;
 194              		.loc 1 335 0
 195 0106 4FF42063 		mov	r3, #2560
 196 010a 0793     		str	r3, [sp, #28]
 336:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 197              		.loc 1 336 0
 198 010c 0895     		str	r5, [sp, #32]
 337:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 199              		.loc 1 337 0
 200 010e 0994     		str	r4, [sp, #36]
 338:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 201              		.loc 1 338 0
 202 0110 0A94     		str	r4, [sp, #40]
 339:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 203              		.loc 1 339 0
 204 0112 CDF82C80 		str	r8, [sp, #44]
 340:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 205              		.loc 1 340 0
 206 0116 07A9     		add	r1, sp, #28
 207 0118 3046     		mov	r0, r6
 208 011a FFF7FEFF 		bl	HAL_GPIO_Init
 209              	.LVL7:
 341:Core/Src/main.c **** 
 342:Core/Src/main.c ****   /*Configure GPIO pins : PE12 PE13 PE14 PE15 */
 343:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 210              		.loc 1 343 0
 211 011e 4FF4704B 		mov	fp, #61440
 212 0122 CDF81CB0 		str	fp, [sp, #28]
 344:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 213              		.loc 1 344 0
 214 0126 0894     		str	r4, [sp, #32]
 345:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 215              		.loc 1 345 0
 216 0128 0994     		str	r4, [sp, #36]
 346:Core/Src/main.c ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 217              		.loc 1 346 0
 218 012a 07A9     		add	r1, sp, #28
 219 012c 3046     		mov	r0, r6
 220 012e FFF7FEFF 		bl	HAL_GPIO_Init
 221              	.LVL8:
 347:Core/Src/main.c **** 
 348:Core/Src/main.c ****   /*Configure GPIO pins : PB10 PB11 */
 349:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
 222              		.loc 1 349 0
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s 			page 11


 223 0132 4FF44063 		mov	r3, #3072
 224 0136 0793     		str	r3, [sp, #28]
 350:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 225              		.loc 1 350 0
 226 0138 4FF0120A 		mov	r10, #18
 227 013c CDF820A0 		str	r10, [sp, #32]
 351:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 228              		.loc 1 351 0
 229 0140 0994     		str	r4, [sp, #36]
 352:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 230              		.loc 1 352 0
 231 0142 0A97     		str	r7, [sp, #40]
 353:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 232              		.loc 1 353 0
 233 0144 4FF00409 		mov	r9, #4
 234 0148 CDF82C90 		str	r9, [sp, #44]
 354:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 235              		.loc 1 354 0
 236 014c A6F54066 		sub	r6, r6, #3072
 237 0150 07A9     		add	r1, sp, #28
 238 0152 3046     		mov	r0, r6
 239 0154 FFF7FEFF 		bl	HAL_GPIO_Init
 240              	.LVL9:
 355:Core/Src/main.c **** 
 356:Core/Src/main.c ****   /*Configure GPIO pins : PB12 PB13 PB14 PB15 */
 357:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 241              		.loc 1 357 0
 242 0158 CDF81CB0 		str	fp, [sp, #28]
 358:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 243              		.loc 1 358 0
 244 015c 0895     		str	r5, [sp, #32]
 359:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 245              		.loc 1 359 0
 246 015e 0994     		str	r4, [sp, #36]
 360:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 247              		.loc 1 360 0
 248 0160 0A97     		str	r7, [sp, #40]
 361:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 249              		.loc 1 361 0
 250 0162 0523     		movs	r3, #5
 251 0164 0B93     		str	r3, [sp, #44]
 362:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 252              		.loc 1 362 0
 253 0166 07A9     		add	r1, sp, #28
 254 0168 3046     		mov	r0, r6
 255 016a FFF7FEFF 		bl	HAL_GPIO_Init
 256              	.LVL10:
 363:Core/Src/main.c **** 
 364:Core/Src/main.c ****   /*Configure GPIO pins : PD8 PD9 PD10 PD11
 365:Core/Src/main.c ****                            PD12 PD13 PD14 PD15
 366:Core/Src/main.c ****                            PD0 PD1 PD2 PD3
 367:Core/Src/main.c ****                            PD4 PD5 PD6 PD7 */
 368:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11
 257              		.loc 1 368 0
 258 016e 4FF6FF73 		movw	r3, #65535
 259 0172 0793     		str	r3, [sp, #28]
 369:Core/Src/main.c ****                           |GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s 			page 12


 370:Core/Src/main.c ****                           |GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 371:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
 372:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 260              		.loc 1 372 0
 261 0174 CDF82080 		str	r8, [sp, #32]
 373:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 262              		.loc 1 373 0
 263 0178 0994     		str	r4, [sp, #36]
 374:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 264              		.loc 1 374 0
 265 017a 0A94     		str	r4, [sp, #40]
 375:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 266              		.loc 1 375 0
 267 017c 07A9     		add	r1, sp, #28
 268 017e 2D48     		ldr	r0, .L3+12
 269 0180 FFF7FEFF 		bl	HAL_GPIO_Init
 270              	.LVL11:
 376:Core/Src/main.c **** 
 377:Core/Src/main.c ****   /*Configure GPIO pins : PC6 PC7 */
 378:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 271              		.loc 1 378 0
 272 0184 4FF0C00B 		mov	fp, #192
 273 0188 CDF81CB0 		str	fp, [sp, #28]
 379:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 274              		.loc 1 379 0
 275 018c 0895     		str	r5, [sp, #32]
 380:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 276              		.loc 1 380 0
 277 018e 0994     		str	r4, [sp, #36]
 381:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 278              		.loc 1 381 0
 279 0190 0A94     		str	r4, [sp, #40]
 382:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF3_TIM8;
 280              		.loc 1 382 0
 281 0192 0B97     		str	r7, [sp, #44]
 383:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 282              		.loc 1 383 0
 283 0194 07A9     		add	r1, sp, #28
 284 0196 2648     		ldr	r0, .L3+8
 285 0198 FFF7FEFF 		bl	HAL_GPIO_Init
 286              	.LVL12:
 384:Core/Src/main.c **** 
 385:Core/Src/main.c ****   /*Configure GPIO pin : PC9 */
 386:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_9;
 287              		.loc 1 386 0
 288 019c 4FF40073 		mov	r3, #512
 289 01a0 0793     		str	r3, [sp, #28]
 387:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 290              		.loc 1 387 0
 291 01a2 0895     		str	r5, [sp, #32]
 388:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 292              		.loc 1 388 0
 293 01a4 0994     		str	r4, [sp, #36]
 389:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 294              		.loc 1 389 0
 295 01a6 0A94     		str	r4, [sp, #40]
 390:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s 			page 13


 296              		.loc 1 390 0
 297 01a8 0B94     		str	r4, [sp, #44]
 391:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 298              		.loc 1 391 0
 299 01aa 07A9     		add	r1, sp, #28
 300 01ac 2048     		ldr	r0, .L3+8
 301 01ae FFF7FEFF 		bl	HAL_GPIO_Init
 302              	.LVL13:
 392:Core/Src/main.c **** 
 393:Core/Src/main.c ****   /*Configure GPIO pin : PA8 */
 394:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8;
 303              		.loc 1 394 0
 304 01b2 4FF48073 		mov	r3, #256
 305 01b6 0793     		str	r3, [sp, #28]
 395:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 306              		.loc 1 395 0
 307 01b8 0895     		str	r5, [sp, #32]
 396:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 308              		.loc 1 396 0
 309 01ba 0994     		str	r4, [sp, #36]
 397:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 310              		.loc 1 397 0
 311 01bc 0A94     		str	r4, [sp, #40]
 398:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 312              		.loc 1 398 0
 313 01be 0B94     		str	r4, [sp, #44]
 399:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 314              		.loc 1 399 0
 315 01c0 07A9     		add	r1, sp, #28
 316 01c2 1D48     		ldr	r0, .L3+16
 317 01c4 FFF7FEFF 		bl	HAL_GPIO_Init
 318              	.LVL14:
 400:Core/Src/main.c **** 
 401:Core/Src/main.c ****   /*Configure GPIO pins : PA11 PA12 */
 402:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12;
 319              		.loc 1 402 0
 320 01c8 4FF4C053 		mov	r3, #6144
 321 01cc 0793     		str	r3, [sp, #28]
 403:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 322              		.loc 1 403 0
 323 01ce CDF82080 		str	r8, [sp, #32]
 404:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 324              		.loc 1 404 0
 325 01d2 0994     		str	r4, [sp, #36]
 405:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 326              		.loc 1 405 0
 327 01d4 0A94     		str	r4, [sp, #40]
 406:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 328              		.loc 1 406 0
 329 01d6 07A9     		add	r1, sp, #28
 330 01d8 1748     		ldr	r0, .L3+16
 331 01da FFF7FEFF 		bl	HAL_GPIO_Init
 332              	.LVL15:
 407:Core/Src/main.c **** 
 408:Core/Src/main.c ****   /*Configure GPIO pins : PB4 PB5 */
 409:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5;
 333              		.loc 1 409 0
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s 			page 14


 334 01de 3023     		movs	r3, #48
 335 01e0 0793     		str	r3, [sp, #28]
 410:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 336              		.loc 1 410 0
 337 01e2 0895     		str	r5, [sp, #32]
 411:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 338              		.loc 1 411 0
 339 01e4 0994     		str	r4, [sp, #36]
 412:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 340              		.loc 1 412 0
 341 01e6 0A94     		str	r4, [sp, #40]
 413:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 342              		.loc 1 413 0
 343 01e8 0B95     		str	r5, [sp, #44]
 414:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 344              		.loc 1 414 0
 345 01ea 07A9     		add	r1, sp, #28
 346 01ec 3046     		mov	r0, r6
 347 01ee FFF7FEFF 		bl	HAL_GPIO_Init
 348              	.LVL16:
 415:Core/Src/main.c **** 
 416:Core/Src/main.c ****   /*Configure GPIO pins : PB6 PB7 */
 417:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 349              		.loc 1 417 0
 350 01f2 CDF81CB0 		str	fp, [sp, #28]
 418:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 351              		.loc 1 418 0
 352 01f6 0895     		str	r5, [sp, #32]
 419:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 353              		.loc 1 419 0
 354 01f8 0994     		str	r4, [sp, #36]
 420:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 355              		.loc 1 420 0
 356 01fa 0A94     		str	r4, [sp, #40]
 421:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 357              		.loc 1 421 0
 358 01fc 0B95     		str	r5, [sp, #44]
 422:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 359              		.loc 1 422 0
 360 01fe 07A9     		add	r1, sp, #28
 361 0200 3046     		mov	r0, r6
 362 0202 FFF7FEFF 		bl	HAL_GPIO_Init
 363              	.LVL17:
 423:Core/Src/main.c **** 
 424:Core/Src/main.c ****   /*Configure GPIO pins : PB8 PB9 */
 425:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 364              		.loc 1 425 0
 365 0206 4FF44073 		mov	r3, #768
 366 020a 0793     		str	r3, [sp, #28]
 426:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 367              		.loc 1 426 0
 368 020c CDF820A0 		str	r10, [sp, #32]
 427:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 369              		.loc 1 427 0
 370 0210 0994     		str	r4, [sp, #36]
 428:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 371              		.loc 1 428 0
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s 			page 15


 372 0212 0A97     		str	r7, [sp, #40]
 429:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 373              		.loc 1 429 0
 374 0214 CDF82C90 		str	r9, [sp, #44]
 430:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 375              		.loc 1 430 0
 376 0218 07A9     		add	r1, sp, #28
 377 021a 3046     		mov	r0, r6
 378 021c FFF7FEFF 		bl	HAL_GPIO_Init
 379              	.LVL18:
 431:Core/Src/main.c **** 
 432:Core/Src/main.c **** }
 380              		.loc 1 432 0
 381 0220 0DB0     		add	sp, sp, #52
 382              	.LCFI2:
 383              		.cfi_def_cfa_offset 36
 384              		@ sp needed
 385 0222 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 386              	.L4:
 387 0226 00BF     		.align	2
 388              	.L3:
 389 0228 00380240 		.word	1073887232
 390 022c 00100240 		.word	1073876992
 391 0230 00080240 		.word	1073874944
 392 0234 000C0240 		.word	1073875968
 393 0238 00000240 		.word	1073872896
 394              		.cfi_endproc
 395              	.LFE240:
 397              		.section	.text.Error_Handler,"ax",%progbits
 398              		.align	2
 399              		.global	Error_Handler
 400              		.thumb
 401              		.thumb_func
 403              	Error_Handler:
 404              	.LFB241:
 433:Core/Src/main.c **** 
 434:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 435:Core/Src/main.c **** 
 436:Core/Src/main.c **** /* USER CODE END 4 */
 437:Core/Src/main.c **** 
 438:Core/Src/main.c **** /**
 439:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 440:Core/Src/main.c ****   * @retval None
 441:Core/Src/main.c ****   */
 442:Core/Src/main.c **** void Error_Handler(void)
 443:Core/Src/main.c **** {
 405              		.loc 1 443 0
 406              		.cfi_startproc
 407              		@ Volatile: function does not return.
 408              		@ args = 0, pretend = 0, frame = 0
 409              		@ frame_needed = 0, uses_anonymous_args = 0
 410              		@ link register save eliminated.
 411              	.LBB10:
 412              	.LBB11:
 413              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s 			page 16


   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s 			page 17


  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s 			page 18


 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 414              		.loc 2 142 0
 415              		.syntax unified
 416              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 417 0000 72B6     		cpsid i
 418              	@ 0 "" 2
 419              		.thumb
 420              		.syntax unified
 421              	.L6:
 422 0002 FEE7     		b	.L6
 423              	.LBE11:
 424              	.LBE10:
 425              		.cfi_endproc
 426              	.LFE241:
 428              		.section	.text.MX_ADC1_Init,"ax",%progbits
 429              		.align	2
 430              		.thumb
 431              		.thumb_func
 433              	MX_ADC1_Init:
 434              	.LFB237:
 165:Core/Src/main.c **** 
 435              		.loc 1 165 0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 16
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 439 0000 00B5     		push	{lr}
 440              	.LCFI3:
 441              		.cfi_def_cfa_offset 4
 442              		.cfi_offset 14, -4
 443 0002 85B0     		sub	sp, sp, #20
 444              	.LCFI4:
 445              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s 			page 19


 171:Core/Src/main.c **** 
 446              		.loc 1 171 0
 447 0004 0023     		movs	r3, #0
 448 0006 0093     		str	r3, [sp]
 449 0008 0193     		str	r3, [sp, #4]
 450 000a 0293     		str	r3, [sp, #8]
 451 000c 0393     		str	r3, [sp, #12]
 179:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 452              		.loc 1 179 0
 453 000e 1448     		ldr	r0, .L11
 454 0010 144A     		ldr	r2, .L11+4
 455 0012 0260     		str	r2, [r0]
 180:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 456              		.loc 1 180 0
 457 0014 4FF48032 		mov	r2, #65536
 458 0018 4260     		str	r2, [r0, #4]
 181:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 459              		.loc 1 181 0
 460 001a 8360     		str	r3, [r0, #8]
 182:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 461              		.loc 1 182 0
 462 001c 0361     		str	r3, [r0, #16]
 183:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 463              		.loc 1 183 0
 464 001e 0376     		strb	r3, [r0, #24]
 184:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 465              		.loc 1 184 0
 466 0020 80F82030 		strb	r3, [r0, #32]
 185:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 467              		.loc 1 185 0
 468 0024 C362     		str	r3, [r0, #44]
 186:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 469              		.loc 1 186 0
 470 0026 104A     		ldr	r2, .L11+8
 471 0028 8262     		str	r2, [r0, #40]
 187:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 472              		.loc 1 187 0
 473 002a C360     		str	r3, [r0, #12]
 188:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 474              		.loc 1 188 0
 475 002c 0122     		movs	r2, #1
 476 002e C261     		str	r2, [r0, #28]
 189:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 477              		.loc 1 189 0
 478 0030 80F83030 		strb	r3, [r0, #48]
 190:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 479              		.loc 1 190 0
 480 0034 4261     		str	r2, [r0, #20]
 191:Core/Src/main.c ****   {
 481              		.loc 1 191 0
 482 0036 FFF7FEFF 		bl	HAL_ADC_Init
 483              	.LVL19:
 484 003a 08B1     		cbz	r0, .L8
 193:Core/Src/main.c ****   }
 485              		.loc 1 193 0
 486 003c FFF7FEFF 		bl	Error_Handler
 487              	.LVL20:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s 			page 20


 488              	.L8:
 198:Core/Src/main.c ****   sConfig.Rank = 1;
 489              		.loc 1 198 0
 490 0040 0923     		movs	r3, #9
 491 0042 0093     		str	r3, [sp]
 199:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 492              		.loc 1 199 0
 493 0044 0123     		movs	r3, #1
 494 0046 0193     		str	r3, [sp, #4]
 200:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 495              		.loc 1 200 0
 496 0048 0023     		movs	r3, #0
 497 004a 0293     		str	r3, [sp, #8]
 201:Core/Src/main.c ****   {
 498              		.loc 1 201 0
 499 004c 6946     		mov	r1, sp
 500 004e 0448     		ldr	r0, .L11
 501 0050 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 502              	.LVL21:
 503 0054 08B1     		cbz	r0, .L7
 203:Core/Src/main.c ****   }
 504              		.loc 1 203 0
 505 0056 FFF7FEFF 		bl	Error_Handler
 506              	.LVL22:
 507              	.L7:
 209:Core/Src/main.c **** 
 508              		.loc 1 209 0
 509 005a 05B0     		add	sp, sp, #20
 510              	.LCFI5:
 511              		.cfi_def_cfa_offset 4
 512              		@ sp needed
 513 005c 5DF804FB 		ldr	pc, [sp], #4
 514              	.L12:
 515              		.align	2
 516              	.L11:
 517 0060 00000000 		.word	hadc1
 518 0064 00200140 		.word	1073815552
 519 0068 0100000F 		.word	251658241
 520              		.cfi_endproc
 521              	.LFE237:
 523              		.section	.text.MX_UART4_Init,"ax",%progbits
 524              		.align	2
 525              		.thumb
 526              		.thumb_func
 528              	MX_UART4_Init:
 529              	.LFB238:
 217:Core/Src/main.c **** 
 530              		.loc 1 217 0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 0
 533              		@ frame_needed = 0, uses_anonymous_args = 0
 534 0000 08B5     		push	{r3, lr}
 535              	.LCFI6:
 536              		.cfi_def_cfa_offset 8
 537              		.cfi_offset 3, -8
 538              		.cfi_offset 14, -4
 226:Core/Src/main.c ****   huart4.Init.BaudRate = 115200;
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s 			page 21


 539              		.loc 1 226 0
 540 0002 0A48     		ldr	r0, .L16
 541 0004 0A4B     		ldr	r3, .L16+4
 542 0006 0360     		str	r3, [r0]
 227:Core/Src/main.c ****   huart4.Init.WordLength = UART_WORDLENGTH_8B;
 543              		.loc 1 227 0
 544 0008 4FF4E133 		mov	r3, #115200
 545 000c 4360     		str	r3, [r0, #4]
 228:Core/Src/main.c ****   huart4.Init.StopBits = UART_STOPBITS_1;
 546              		.loc 1 228 0
 547 000e 0023     		movs	r3, #0
 548 0010 8360     		str	r3, [r0, #8]
 229:Core/Src/main.c ****   huart4.Init.Parity = UART_PARITY_NONE;
 549              		.loc 1 229 0
 550 0012 C360     		str	r3, [r0, #12]
 230:Core/Src/main.c ****   huart4.Init.Mode = UART_MODE_TX_RX;
 551              		.loc 1 230 0
 552 0014 0361     		str	r3, [r0, #16]
 231:Core/Src/main.c ****   huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 553              		.loc 1 231 0
 554 0016 0C22     		movs	r2, #12
 555 0018 4261     		str	r2, [r0, #20]
 232:Core/Src/main.c ****   huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 556              		.loc 1 232 0
 557 001a 8361     		str	r3, [r0, #24]
 233:Core/Src/main.c ****   if (HAL_UART_Init(&huart4) != HAL_OK)
 558              		.loc 1 233 0
 559 001c C361     		str	r3, [r0, #28]
 234:Core/Src/main.c ****   {
 560              		.loc 1 234 0
 561 001e FFF7FEFF 		bl	HAL_UART_Init
 562              	.LVL23:
 563 0022 08B1     		cbz	r0, .L13
 236:Core/Src/main.c ****   }
 564              		.loc 1 236 0
 565 0024 FFF7FEFF 		bl	Error_Handler
 566              	.LVL24:
 567              	.L13:
 568 0028 08BD     		pop	{r3, pc}
 569              	.L17:
 570 002a 00BF     		.align	2
 571              	.L16:
 572 002c 00000000 		.word	huart4
 573 0030 004C0040 		.word	1073761280
 574              		.cfi_endproc
 575              	.LFE238:
 577              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 578              		.align	2
 579              		.thumb
 580              		.thumb_func
 582              	MX_USART1_UART_Init:
 583              	.LFB239:
 250:Core/Src/main.c **** 
 584              		.loc 1 250 0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s 			page 22


 588 0000 08B5     		push	{r3, lr}
 589              	.LCFI7:
 590              		.cfi_def_cfa_offset 8
 591              		.cfi_offset 3, -8
 592              		.cfi_offset 14, -4
 259:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 593              		.loc 1 259 0
 594 0002 0A48     		ldr	r0, .L21
 595 0004 0A4B     		ldr	r3, .L21+4
 596 0006 0360     		str	r3, [r0]
 260:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 597              		.loc 1 260 0
 598 0008 4FF4E133 		mov	r3, #115200
 599 000c 4360     		str	r3, [r0, #4]
 261:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 600              		.loc 1 261 0
 601 000e 0023     		movs	r3, #0
 602 0010 8360     		str	r3, [r0, #8]
 262:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 603              		.loc 1 262 0
 604 0012 C360     		str	r3, [r0, #12]
 263:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 605              		.loc 1 263 0
 606 0014 0361     		str	r3, [r0, #16]
 264:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 607              		.loc 1 264 0
 608 0016 0C22     		movs	r2, #12
 609 0018 4261     		str	r2, [r0, #20]
 265:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 610              		.loc 1 265 0
 611 001a 8361     		str	r3, [r0, #24]
 266:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 612              		.loc 1 266 0
 613 001c C361     		str	r3, [r0, #28]
 267:Core/Src/main.c ****   {
 614              		.loc 1 267 0
 615 001e FFF7FEFF 		bl	HAL_UART_Init
 616              	.LVL25:
 617 0022 08B1     		cbz	r0, .L18
 269:Core/Src/main.c ****   }
 618              		.loc 1 269 0
 619 0024 FFF7FEFF 		bl	Error_Handler
 620              	.LVL26:
 621              	.L18:
 622 0028 08BD     		pop	{r3, pc}
 623              	.L22:
 624 002a 00BF     		.align	2
 625              	.L21:
 626 002c 00000000 		.word	huart1
 627 0030 00100140 		.word	1073811456
 628              		.cfi_endproc
 629              	.LFE239:
 631              		.section	.text.SystemClock_Config,"ax",%progbits
 632              		.align	2
 633              		.global	SystemClock_Config
 634              		.thumb
 635              		.thumb_func
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s 			page 23


 637              	SystemClock_Config:
 638              	.LFB236:
 117:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 639              		.loc 1 117 0
 640              		.cfi_startproc
 641              		@ args = 0, pretend = 0, frame = 80
 642              		@ frame_needed = 0, uses_anonymous_args = 0
 643 0000 00B5     		push	{lr}
 644              	.LCFI8:
 645              		.cfi_def_cfa_offset 4
 646              		.cfi_offset 14, -4
 647 0002 95B0     		sub	sp, sp, #84
 648              	.LCFI9:
 649              		.cfi_def_cfa_offset 88
 118:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 650              		.loc 1 118 0
 651 0004 3022     		movs	r2, #48
 652 0006 0021     		movs	r1, #0
 653 0008 08A8     		add	r0, sp, #32
 654 000a FFF7FEFF 		bl	memset
 655              	.LVL27:
 119:Core/Src/main.c **** 
 656              		.loc 1 119 0
 657 000e 0023     		movs	r3, #0
 658 0010 0393     		str	r3, [sp, #12]
 659 0012 0493     		str	r3, [sp, #16]
 660 0014 0593     		str	r3, [sp, #20]
 661 0016 0693     		str	r3, [sp, #24]
 662 0018 0793     		str	r3, [sp, #28]
 663              	.LBB12:
 123:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 664              		.loc 1 123 0
 665 001a 0193     		str	r3, [sp, #4]
 666 001c 254A     		ldr	r2, .L27
 667 001e 116C     		ldr	r1, [r2, #64]
 668 0020 41F08051 		orr	r1, r1, #268435456
 669 0024 1164     		str	r1, [r2, #64]
 670 0026 126C     		ldr	r2, [r2, #64]
 671 0028 02F08052 		and	r2, r2, #268435456
 672 002c 0192     		str	r2, [sp, #4]
 673 002e 019A     		ldr	r2, [sp, #4]
 674              	.LBE12:
 675              	.LBB13:
 124:Core/Src/main.c **** 
 676              		.loc 1 124 0
 677 0030 0293     		str	r3, [sp, #8]
 678 0032 214B     		ldr	r3, .L27+4
 679 0034 1A68     		ldr	r2, [r3]
 680 0036 42F48042 		orr	r2, r2, #16384
 681 003a 1A60     		str	r2, [r3]
 682 003c 1B68     		ldr	r3, [r3]
 683 003e 03F48043 		and	r3, r3, #16384
 684 0042 0293     		str	r3, [sp, #8]
 685 0044 029B     		ldr	r3, [sp, #8]
 686              	.LBE13:
 129:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 687              		.loc 1 129 0
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s 			page 24


 688 0046 0123     		movs	r3, #1
 689 0048 0893     		str	r3, [sp, #32]
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 690              		.loc 1 130 0
 691 004a 4FF48033 		mov	r3, #65536
 692 004e 0993     		str	r3, [sp, #36]
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 693              		.loc 1 131 0
 694 0050 0222     		movs	r2, #2
 695 0052 0E92     		str	r2, [sp, #56]
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 696              		.loc 1 132 0
 697 0054 4FF48003 		mov	r3, #4194304
 698 0058 0F93     		str	r3, [sp, #60]
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 699              		.loc 1 133 0
 700 005a 0423     		movs	r3, #4
 701 005c 1093     		str	r3, [sp, #64]
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 702              		.loc 1 134 0
 703 005e A821     		movs	r1, #168
 704 0060 1191     		str	r1, [sp, #68]
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 705              		.loc 1 135 0
 706 0062 1292     		str	r2, [sp, #72]
 136:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 707              		.loc 1 136 0
 708 0064 1393     		str	r3, [sp, #76]
 137:Core/Src/main.c ****   {
 709              		.loc 1 137 0
 710 0066 08A8     		add	r0, sp, #32
 711 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 712              	.LVL28:
 713 006c 08B1     		cbz	r0, .L24
 139:Core/Src/main.c ****   }
 714              		.loc 1 139 0
 715 006e FFF7FEFF 		bl	Error_Handler
 716              	.LVL29:
 717              	.L24:
 144:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 718              		.loc 1 144 0
 719 0072 0F23     		movs	r3, #15
 720 0074 0393     		str	r3, [sp, #12]
 146:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 721              		.loc 1 146 0
 722 0076 0223     		movs	r3, #2
 723 0078 0493     		str	r3, [sp, #16]
 147:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 724              		.loc 1 147 0
 725 007a 0023     		movs	r3, #0
 726 007c 0593     		str	r3, [sp, #20]
 148:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 727              		.loc 1 148 0
 728 007e 4FF4A053 		mov	r3, #5120
 729 0082 0693     		str	r3, [sp, #24]
 149:Core/Src/main.c **** 
 730              		.loc 1 149 0
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s 			page 25


 731 0084 4FF48053 		mov	r3, #4096
 732 0088 0793     		str	r3, [sp, #28]
 151:Core/Src/main.c ****   {
 733              		.loc 1 151 0
 734 008a 0521     		movs	r1, #5
 735 008c 03A8     		add	r0, sp, #12
 736 008e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 737              	.LVL30:
 738 0092 08B1     		cbz	r0, .L25
 153:Core/Src/main.c ****   }
 739              		.loc 1 153 0
 740 0094 FFF7FEFF 		bl	Error_Handler
 741              	.LVL31:
 742              	.L25:
 155:Core/Src/main.c ****   HAL_RCC_MCOConfig(RCC_MCO2, RCC_MCO2SOURCE_SYSCLK, RCC_MCODIV_1);
 743              		.loc 1 155 0
 744 0098 0022     		movs	r2, #0
 745 009a 4FF4C001 		mov	r1, #6291456
 746 009e 1046     		mov	r0, r2
 747 00a0 FFF7FEFF 		bl	HAL_RCC_MCOConfig
 748              	.LVL32:
 156:Core/Src/main.c **** }
 749              		.loc 1 156 0
 750 00a4 0022     		movs	r2, #0
 751 00a6 1146     		mov	r1, r2
 752 00a8 0120     		movs	r0, #1
 753 00aa FFF7FEFF 		bl	HAL_RCC_MCOConfig
 754              	.LVL33:
 157:Core/Src/main.c **** 
 755              		.loc 1 157 0
 756 00ae 15B0     		add	sp, sp, #84
 757              	.LCFI10:
 758              		.cfi_def_cfa_offset 4
 759              		@ sp needed
 760 00b0 5DF804FB 		ldr	pc, [sp], #4
 761              	.L28:
 762              		.align	2
 763              	.L27:
 764 00b4 00380240 		.word	1073887232
 765 00b8 00700040 		.word	1073770496
 766              		.cfi_endproc
 767              	.LFE236:
 769              		.section	.text.main,"ax",%progbits
 770              		.align	2
 771              		.global	main
 772              		.thumb
 773              		.thumb_func
 775              	main:
 776              	.LFB235:
  71:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 777              		.loc 1 71 0
 778              		.cfi_startproc
 779              		@ Volatile: function does not return.
 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 0, uses_anonymous_args = 0
 782 0000 08B5     		push	{r3, lr}
 783              	.LCFI11:
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s 			page 26


 784              		.cfi_def_cfa_offset 8
 785              		.cfi_offset 3, -8
 786              		.cfi_offset 14, -4
  79:Core/Src/main.c **** 
 787              		.loc 1 79 0
 788 0002 FFF7FEFF 		bl	HAL_Init
 789              	.LVL34:
  86:Core/Src/main.c **** 
 790              		.loc 1 86 0
 791 0006 FFF7FEFF 		bl	SystemClock_Config
 792              	.LVL35:
  93:Core/Src/main.c ****   MX_ADC1_Init();
 793              		.loc 1 93 0
 794 000a FFF7FEFF 		bl	MX_GPIO_Init
 795              	.LVL36:
  94:Core/Src/main.c ****   MX_UART4_Init();
 796              		.loc 1 94 0
 797 000e FFF7FEFF 		bl	MX_ADC1_Init
 798              	.LVL37:
  95:Core/Src/main.c ****   MX_USART1_UART_Init();
 799              		.loc 1 95 0
 800 0012 FFF7FEFF 		bl	MX_UART4_Init
 801              	.LVL38:
  96:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 802              		.loc 1 96 0
 803 0016 FFF7FEFF 		bl	MX_USART1_UART_Init
 804              	.LVL39:
 805              	.L30:
 806 001a FEE7     		b	.L30
 807              		.cfi_endproc
 808              	.LFE235:
 810              		.comm	huart1,68,4
 811              		.comm	huart4,68,4
 812              		.comm	hadc1,72,4
 813              		.text
 814              	.Letext0:
 815              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\mach
 816              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys\
 817              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 818              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 819              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 820              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 821              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 822              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 823              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 824              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 825              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 826              		.file 14 "Drivers/CMSIS/Include/core_cm4.h"
 827              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s 			page 27


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s:22     .text.MX_GPIO_Init:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s:389    .text.MX_GPIO_Init:00000228 $d
C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s:398    .text.Error_Handler:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s:403    .text.Error_Handler:00000000 Error_Handler
C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s:429    .text.MX_ADC1_Init:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s:433    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s:517    .text.MX_ADC1_Init:00000060 $d
                            *COM*:00000048 hadc1
C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s:524    .text.MX_UART4_Init:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s:528    .text.MX_UART4_Init:00000000 MX_UART4_Init
C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s:572    .text.MX_UART4_Init:0000002c $d
                            *COM*:00000044 huart4
C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s:578    .text.MX_USART1_UART_Init:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s:582    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s:626    .text.MX_USART1_UART_Init:0000002c $d
                            *COM*:00000044 huart1
C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s:632    .text.SystemClock_Config:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s:637    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s:764    .text.SystemClock_Config:000000b4 $d
C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s:770    .text.main:00000000 $t
C:\Users\zazz0\AppData\Local\Temp\cczv1xPf.s:775    .text.main:00000000 main
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_MCOConfig
HAL_Init
